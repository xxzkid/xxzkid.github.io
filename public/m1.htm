<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <title>APlayer</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="./localforage.min.js"></script>
  <style>
    .container {
      box-sizing: content-box;
    }
    .song-item {
      margin-top: 10px;
      cursor: pointer;
      line-height: 32px;
      height: 32px;
      font-size: 14px;
      padding: 0 15px;
      border-top: 1px solid #e9e9e9;
      transition: all .2s ease;
    }
    .log {
      color: gray;
      border: 1px solid #e9e9e9;
      margin-top: 30px;
    }
  </style>
</head>

<body>
  <div id="container"></div>
  <div>当前播放歌曲：<span id="current-song" style="color: green;"></span></div>
  <div id="song-list"></div>
  <div id="log" class="log"></div>
  <script>
    window.current = 0;
    window.audios = [
      {
        name: '可能',
        artist: '程响',
        url: './music/可能-程响.mp3',
        cover: '',
        lrc: '',
        theme: '#ebd0c2'
      },
      {
        name: '人间烟火',
        artist: '程响',
        url: './music/人间烟火-程响.mp3',
        cover: '',
        lrc: '',
        theme: '#ebd0c2'
      }
    ];
    localforage.setItem("test", "working");

    // convert arrayBuffer to Blob
    window.arrayBufferToBlob = function (buffer, type) {
      return new Blob([buffer], { type: type });
    }

    // convert Blob to arrayBuffer
    window.blobToArrayBuffer = function (blob) {
      return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.addEventListener("loadend", e => {
          resolve(reader.result);
        });
        reader.addEventListener("error", reject);
        reader.readAsArrayBuffer(blob);
      });
    }

    // create HTML5 audio player
    window.createAudioPlayer = function (audio) {
      // if it's a buffer
      if (audio.buffer) {
        // convert it to blob
        audio = arrayBufferToBlob(audio.buffer, audio.type);
      }
      const audioEl = document.createElement("audio");
      const audioSrc = document.createElement("source");
      const container = document.getElementById("container");
      container.innerHTML = '';
      audioEl.controls = true;
      audioEl.autoplay = true;
      audioSrc.type = audio.type;
      audioSrc.src = URL.createObjectURL(audio);
      container.append(audioEl);
      audioEl.append(audioSrc);

      audioEl.onended = function() {
        if (current >= audios.length) {
          current = 0;
        } else {
          current++;
        }
        play(audios[current].url, current);
      }
    }

    window.play = function (url, index) {
      localforage.getItem(url).then(audio => {
        current = index;
        document.getElementById('current-song').innerText = audios[current].name + ' - ' + audios[current].artist;
        if (audio) {
          console.log(url + " exist");
          createAudioPlayer(audio);
        } else {
          console.log(url + " doesn't exist");
          fetch(url)
            .then(res => res.blob())
            .then(blob => {
              const type = blob.type;
              blobToArrayBuffer(blob).then(buffer => {
                localforage
                  .setItem(url, { buffer, type })
                  .then(audio => createAudioPlayer(audio));
              });
            });
        }
      });
    }

    window.addEventListener("load", e => {
      if (audios.length > 0) {
        play(audios[current].url, current);

        var song_list_el = document.getElementById('song-list');
        var html = '';
        for (var i in audios) {
          var audio = audios[i];
          html += '<div class="song-item" onclick="play(\'' + audio.url + '\', ' + i + ')">' + ((i << 0) + 1) + ' ' +  audio.name + " - " + audio.artist + '</div>';
        }
        song_list_el.innerHTML = html;
      }
    });

    const _console_log = console.log;

    console.log = function() {
      _console_log(...arguments);
      const log_el = document.createElement('div');
      var logs = [];
      for (var i in arguments) {
        logs.push(arguments[i]);
      }
      log_el.innerText = logs.join(' ');
      document.getElementById('log').append(log_el);
    }
  </script>
</body>

</html>
